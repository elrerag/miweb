{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Material de apoyo JFS . Secci\u00f3n : Bellavista. Coach : Luis Herrera. Disclaimer \ud83d\udc40 El material presente en este sitio, no forma parte oficial de ning\u00fan programa y solo busca apoyar, tanto a estudiantes, como a todo aquel que lo consulte.","title":"Home"},{"location":"#material-de-apoyo-jfs","text":"Secci\u00f3n : Bellavista. Coach : Luis Herrera.","title":"Material de apoyo JFS."},{"location":"#disclaimer","text":"El material presente en este sitio, no forma parte oficial de ning\u00fan programa y solo busca apoyar, tanto a estudiantes, como a todo aquel que lo consulte.","title":"Disclaimer \ud83d\udc40"},{"location":"basededatos/tipodedatos/","text":"Oracle 11g - Tipos de datos Tipos comunes. VARCHAR2 Para guardar los tipo String Debemos indicar el largo, ejemplo: nombre VARCHAR2(200) . Cadena de caracteres de longitud variable. Entre 1 y 4000 bytes como m\u00e1ximo. El tama\u00f1o del campo depender\u00e1 del valor que contenga, es de longitud variable. NUMBER Almacena n\u00fameros fijos y en punto flotante. Se admiten hasta 38 d\u00edgitos de precisi\u00f3n y son portables a cualquier entre los diversos sistemas en que funcione Oracle. Para declarar un tipo de datos NUMBER en un CREATE \u00f3 UPDATE es suficiente con: nombre_columna NUMBER Ejemplo: edad Number Opcionalmente se le puede indicar la precisi\u00f3n (n\u00famero total de d\u00edgitos) y la escala (n\u00famero de d\u00edgitos a la derecha de la coma, decimales, los coger\u00e1 de la precisi\u00f3n indicada): nombre_columna NUMBER (precision, escala) Ejemplo: area Number(4, 2) , indica que el n\u00famero total de d\u00edgitos es 4, incluyendo los dos decimales, es decir que, admite dos d\u00edgitos enteros y dos d\u00edgitos decimales. Ser\u00edan admitidos: 2 , 2.2 , 22,22 No ser\u00edan admitidos: 222 , 222.2 , 222,22 Si no se indica la precisi\u00f3n se tomar\u00e1 en funci\u00f3n del n\u00famero a guardar, si no se indica la escala se tomar\u00e1 escala cero. Para no indicar la precisi\u00f3n y s\u00ed la escala podemos utilizar: nombre_columna NUMBER (*, escala). Para introducir n\u00fameros que no est\u00e9n el el formato est\u00e1ndar de Oracle se puede utilizar la funci\u00f3n TO_NUMBER. DATE Almacena un punto en el tiempo (fecha y hora). El tipo de datos DATE almacena el a\u00f1o (incluyendo el siglo), el mes, el d\u00eda, las horas, los minutos y los segundos (despu\u00e9s de medianoche). Oracle utiliza su propio formato interno para almacenar fechas. Los tipos de datos DATE se almacenan en campos de longitud fija de siete octetos cada uno, correspondiendo al siglo, a\u00f1o, mes, d\u00eda, hora, minuto, y al segundo. Para entrada/salida de fechas, Oracle utiliza por defecto el formato DD-MM-AA . Para cambiar este formato de fecha por defecto se utiliza el par\u00e1metro NLS_DATE_FORMAT. Para insertar fechas que no est\u00e9n en el mismo formato de fecha est\u00e1ndar de Oracle, se puede utilizar la funci\u00f3n TO_DATE con una m\u00e1scara del formato: TO_DATE (el \u201c13 de noviembre de 1992\u201d, \u201cDD del MES, YYYY\u201d). Otros tipos Tipo texto. CHAR Cadena de caracteres (alfanum\u00e9ricos) de longitud fija. Entre 1 y 2000 bytes como m\u00e1ximo. Aunque se introduzca un valor m\u00e1s corto que el indicado en el tama\u00f1o, se rellenar\u00e1 al tama\u00f1o indicado. Es de longitud fija, siempre ocupar\u00e1 lo mismo, independientemente del valor que contenga. VARCHAR Cadena de caracteres de longitud variable. En desuso, se utiliza VARCHAR2 \u001d en su lugar. NCHAR Cadena de caracteres de longitud fija que s\u00f3lo almacena caracteres Unicode. Entre 1 y 2000 bytes como m\u00e1ximo. El juego de caracteres del tipo de datos ( datatype \u001d) NCHAR s\u00f3lo puede ser AL16UTF16 \u00f3 UTF8. El juego de caracteres se especifica cuando se crea la base de datos Oracle. NVARCHAR2 Cadena de caracteres de longitud variable que s\u00f3lo almacena caracteres Unicode. Entre 1 y 4000 bytes como m\u00e1ximo. El juego de caracteres del tipo de datos ( datatype ) NCHAR s\u00f3lo puede ser AL16UTF16 \u00f3 UTF8. El juego de caracteres se especifica cuando se crea la base de datos Oracle. Tipo num\u00e9ricos. LONG Cadena de caracteres de longitud variable. Como m\u00e1ximo admite hasta 2 GB (2000 MB). Los datos LONG deber\u00e1n ser convertidos apropiadamente al moverse entre diversos sistemas. Este tipo de datos est\u00e1 obsoleto (en desuso), en su lugar se utilizan los datos de tipo LOB (CLOB,NCLOB). Oracle recomienda que se convierta el tipo de datos LONG a alguno LOB si a\u00fan se est\u00e1 utilizando. No se puede utilizar en cl\u00e1usulas WHERE \u001d, GROUP BY \u001d, ORDER BY \u001d, CONNECT BY \u001d ni DISTINCT \u001d. Una tabla s\u00f3lo puede contener una columna de tipo LONG. S\u00f3lo soporta acceso en secuencias. LONG RAW Almacenan cadenas binarias de ancho variable. Hasta 2 GB. En desuso, se sustituye por los tipos LOB. FLOAT Almacena tipos de datos num\u00e9ricos en punto flotante. Es un tipo NUMBER que s\u00f3lo almacena n\u00fameros en punto flotante. Tipo fechas. TIMESTAMP Almacena datos de tipo hora, fraccionando los segundos. TIMESTAMP WITH TIME ZONE Almacena datos de tipo hora incluyendo la zona horaria (expl\u00edcita), fraccionando los segundos. TIMESTAMP WITH LOCAL TIME ZONE Almacena datos de tipo hora incluyendo la zona horaria local (relativa), fraccionando los segundos. Cuando se usa un SELECT para mostrar los datos de este tipo, el valor de la hora ser\u00e1 ajustado a la zona horaria de la sesi\u00f3n actual. Otros tipos. RAW Almacenan cadenas binarias de ancho variable. Hasta 32767 bytes. En desuso, se sustituye por los tipos LOB. LOB (BLOG, CLOB, NCLOB, BFILE) Permiten almacenar y manipular bloques grandes de datos no estructurados (tales como texto, im\u00e1genes, videos, sonidos, etc) en formato binario o del car\u00e1cter. Admiten hasta 8 terabytes (8000 GB). Una tabla puede contener varias columnas de tipo LOB. Soportan acceso aleatorio. Las tablas con columnas de tipo LOB no pueden ser replicadas. BLOB Permite almacenar datos binarios no estructurados. Admiten hasta 8 terabytes. CLOB Almacena datos de tipo car\u00e1cter. Admiten hasta 8 terabytes. NCLOB Almacena datos de tipo car\u00e1cter. Admiten hasta 8 terabytes. Guarda los datos seg\u00fan el juego de caracteres Unicode nacional. BFILE Almacena datos binarios no estructurados en archivos del sistema operativo, fuera de la base de datos. Una columna BFILE almacena un localizador \u001d del archivo a uno externo que contiene los datos. Admiten hasta 8 terabytes. El administrador de la base de datos debe asegurarse de que exista el archivo en disco y de que los procesos de Oracle tengan permisos de lectura para el archivo. BFILEROWID Almacenar la direcci\u00f3n \u00fanica de cada fila de la tabla de la base de datos. ROWID f\u00edsico almacena la direcci\u00f3n de fila en las tablas, las tablas en cl\u00faster, los \u00edndices, excepto en las \u00edndices- organizados (IOT). ROWID l\u00f3gico almacena la direcci\u00f3n de fila en tablas de \u00edndice-organizado (IOT). Un ejemplo del valor de un campo ROWID podr\u00eda ser: AAAIugAAJAAC4AhAAI \u001d. El formato es el siguiente: Para OOOOOOFFFBBBBBBRRR , donde: OOOOOO: segmento de la base de datos ( AAAIug \u001d en el ejemplo). Todos los objetos que est\u00e9n en el mismo esquema y en el mismo segmento tendr\u00e1n el mismo valor. FFF: el n\u00famero de fichero del tablespace \u001d relativo que contiene la fila (fichero AAJ en el ejemplo). BBBBBB: el bloque de datos que contiene a la fila (bloque AAC4Ah en el ejemplo). El n\u00famero de bloque es relativo a su fichero de datos, no al tablespace \u001d. Por lo tanto, dos filas con n\u00fameros de bloque iguales podr\u00edan residir en diferentes datafiles \u001d del mismo tablespace \u001d. RRR: el n\u00famero de fila en el bloque (fila AAI en el ejemplo). Este tipo de campo no aparece en los SELECT ni se puede modificar en los UPDATE, ni en los INSERT. Tampoco se puede utilizar en los CREATE. Es un tipo de datos utilizado exclusivamente por Oracle. S\u00f3lo se puede ver su valor utilizando la palabra reservada ROWID, por ejemplo: + select rowid, nombre, apellidos from clientes Ejemplo 2: ``` SELECT ROWID, SUBSTR(ROWID,15,4) \"Fichero\", SUBSTR(ROWID,1,8) \"Bloque\", SUBSTR(ROWID,10,4) \"Fila\" FROM proveedores ``` Ejemplo 3: una forma de saber en cu\u00e1ntos ficheros de datos est\u00e1 alojada una tabla. ``` SELECT COUNT(DISTINCT(SUBSTR(ROWID,7,3))) \"Numero ficheros \" FROM facturacion ``` UROWID ROWID universal. Admite ROWID a tablas que no sean de Oracle, tablas externas. Admite tanto ROWID l\u00f3gicos como f\u00edsicos. XMLType Tipo de datos abstracto. En realidad se trata de un CLOB. Se asocia a un esquema XML para la definici\u00f3n de su estructura. Resumen. De los tipos anteriores, los com\u00fanmente utilizados son: VARCHAR2 \u001d (cadenas de texto no muy grandes), DATE (fechas, horas), NUMBER (n\u00fameros), BLOB ( ficheros de tipo word, excel, access, video, sonido, im\u00e1genes, etc ) y CLOB (cadenas de texto muy grandes). Los que se utilizar\u00e1n en el curso JFS, VARCHAR2 , DATE , NUMBER .","title":"Tipos de datos"},{"location":"basededatos/tipodedatos/#oracle-11g-tipos-de-datos","text":"","title":"Oracle 11g - Tipos de datos"},{"location":"basededatos/tipodedatos/#tipos-comunes","text":"VARCHAR2 Para guardar los tipo String Debemos indicar el largo, ejemplo: nombre VARCHAR2(200) . Cadena de caracteres de longitud variable. Entre 1 y 4000 bytes como m\u00e1ximo. El tama\u00f1o del campo depender\u00e1 del valor que contenga, es de longitud variable. NUMBER Almacena n\u00fameros fijos y en punto flotante. Se admiten hasta 38 d\u00edgitos de precisi\u00f3n y son portables a cualquier entre los diversos sistemas en que funcione Oracle. Para declarar un tipo de datos NUMBER en un CREATE \u00f3 UPDATE es suficiente con: nombre_columna NUMBER Ejemplo: edad Number Opcionalmente se le puede indicar la precisi\u00f3n (n\u00famero total de d\u00edgitos) y la escala (n\u00famero de d\u00edgitos a la derecha de la coma, decimales, los coger\u00e1 de la precisi\u00f3n indicada): nombre_columna NUMBER (precision, escala) Ejemplo: area Number(4, 2) , indica que el n\u00famero total de d\u00edgitos es 4, incluyendo los dos decimales, es decir que, admite dos d\u00edgitos enteros y dos d\u00edgitos decimales. Ser\u00edan admitidos: 2 , 2.2 , 22,22 No ser\u00edan admitidos: 222 , 222.2 , 222,22 Si no se indica la precisi\u00f3n se tomar\u00e1 en funci\u00f3n del n\u00famero a guardar, si no se indica la escala se tomar\u00e1 escala cero. Para no indicar la precisi\u00f3n y s\u00ed la escala podemos utilizar: nombre_columna NUMBER (*, escala). Para introducir n\u00fameros que no est\u00e9n el el formato est\u00e1ndar de Oracle se puede utilizar la funci\u00f3n TO_NUMBER. DATE Almacena un punto en el tiempo (fecha y hora). El tipo de datos DATE almacena el a\u00f1o (incluyendo el siglo), el mes, el d\u00eda, las horas, los minutos y los segundos (despu\u00e9s de medianoche). Oracle utiliza su propio formato interno para almacenar fechas. Los tipos de datos DATE se almacenan en campos de longitud fija de siete octetos cada uno, correspondiendo al siglo, a\u00f1o, mes, d\u00eda, hora, minuto, y al segundo. Para entrada/salida de fechas, Oracle utiliza por defecto el formato DD-MM-AA . Para cambiar este formato de fecha por defecto se utiliza el par\u00e1metro NLS_DATE_FORMAT. Para insertar fechas que no est\u00e9n en el mismo formato de fecha est\u00e1ndar de Oracle, se puede utilizar la funci\u00f3n TO_DATE con una m\u00e1scara del formato: TO_DATE (el \u201c13 de noviembre de 1992\u201d, \u201cDD del MES, YYYY\u201d).","title":"Tipos comunes."},{"location":"basededatos/tipodedatos/#otros-tipos","text":"","title":"Otros tipos"},{"location":"basededatos/tipodedatos/#tipo-texto","text":"CHAR Cadena de caracteres (alfanum\u00e9ricos) de longitud fija. Entre 1 y 2000 bytes como m\u00e1ximo. Aunque se introduzca un valor m\u00e1s corto que el indicado en el tama\u00f1o, se rellenar\u00e1 al tama\u00f1o indicado. Es de longitud fija, siempre ocupar\u00e1 lo mismo, independientemente del valor que contenga. VARCHAR Cadena de caracteres de longitud variable. En desuso, se utiliza VARCHAR2 \u001d en su lugar. NCHAR Cadena de caracteres de longitud fija que s\u00f3lo almacena caracteres Unicode. Entre 1 y 2000 bytes como m\u00e1ximo. El juego de caracteres del tipo de datos ( datatype \u001d) NCHAR s\u00f3lo puede ser AL16UTF16 \u00f3 UTF8. El juego de caracteres se especifica cuando se crea la base de datos Oracle. NVARCHAR2 Cadena de caracteres de longitud variable que s\u00f3lo almacena caracteres Unicode. Entre 1 y 4000 bytes como m\u00e1ximo. El juego de caracteres del tipo de datos ( datatype ) NCHAR s\u00f3lo puede ser AL16UTF16 \u00f3 UTF8. El juego de caracteres se especifica cuando se crea la base de datos Oracle.","title":"Tipo texto."},{"location":"basededatos/tipodedatos/#tipo-numericos","text":"LONG Cadena de caracteres de longitud variable. Como m\u00e1ximo admite hasta 2 GB (2000 MB). Los datos LONG deber\u00e1n ser convertidos apropiadamente al moverse entre diversos sistemas. Este tipo de datos est\u00e1 obsoleto (en desuso), en su lugar se utilizan los datos de tipo LOB (CLOB,NCLOB). Oracle recomienda que se convierta el tipo de datos LONG a alguno LOB si a\u00fan se est\u00e1 utilizando. No se puede utilizar en cl\u00e1usulas WHERE \u001d, GROUP BY \u001d, ORDER BY \u001d, CONNECT BY \u001d ni DISTINCT \u001d. Una tabla s\u00f3lo puede contener una columna de tipo LONG. S\u00f3lo soporta acceso en secuencias. LONG RAW Almacenan cadenas binarias de ancho variable. Hasta 2 GB. En desuso, se sustituye por los tipos LOB. FLOAT Almacena tipos de datos num\u00e9ricos en punto flotante. Es un tipo NUMBER que s\u00f3lo almacena n\u00fameros en punto flotante.","title":"Tipo num\u00e9ricos."},{"location":"basededatos/tipodedatos/#tipo-fechas","text":"TIMESTAMP Almacena datos de tipo hora, fraccionando los segundos. TIMESTAMP WITH TIME ZONE Almacena datos de tipo hora incluyendo la zona horaria (expl\u00edcita), fraccionando los segundos. TIMESTAMP WITH LOCAL TIME ZONE Almacena datos de tipo hora incluyendo la zona horaria local (relativa), fraccionando los segundos. Cuando se usa un SELECT para mostrar los datos de este tipo, el valor de la hora ser\u00e1 ajustado a la zona horaria de la sesi\u00f3n actual.","title":"Tipo fechas."},{"location":"basededatos/tipodedatos/#otros-tipos_1","text":"RAW Almacenan cadenas binarias de ancho variable. Hasta 32767 bytes. En desuso, se sustituye por los tipos LOB. LOB (BLOG, CLOB, NCLOB, BFILE) Permiten almacenar y manipular bloques grandes de datos no estructurados (tales como texto, im\u00e1genes, videos, sonidos, etc) en formato binario o del car\u00e1cter. Admiten hasta 8 terabytes (8000 GB). Una tabla puede contener varias columnas de tipo LOB. Soportan acceso aleatorio. Las tablas con columnas de tipo LOB no pueden ser replicadas. BLOB Permite almacenar datos binarios no estructurados. Admiten hasta 8 terabytes. CLOB Almacena datos de tipo car\u00e1cter. Admiten hasta 8 terabytes. NCLOB Almacena datos de tipo car\u00e1cter. Admiten hasta 8 terabytes. Guarda los datos seg\u00fan el juego de caracteres Unicode nacional. BFILE Almacena datos binarios no estructurados en archivos del sistema operativo, fuera de la base de datos. Una columna BFILE almacena un localizador \u001d del archivo a uno externo que contiene los datos. Admiten hasta 8 terabytes. El administrador de la base de datos debe asegurarse de que exista el archivo en disco y de que los procesos de Oracle tengan permisos de lectura para el archivo. BFILEROWID Almacenar la direcci\u00f3n \u00fanica de cada fila de la tabla de la base de datos. ROWID f\u00edsico almacena la direcci\u00f3n de fila en las tablas, las tablas en cl\u00faster, los \u00edndices, excepto en las \u00edndices- organizados (IOT). ROWID l\u00f3gico almacena la direcci\u00f3n de fila en tablas de \u00edndice-organizado (IOT). Un ejemplo del valor de un campo ROWID podr\u00eda ser: AAAIugAAJAAC4AhAAI \u001d. El formato es el siguiente: Para OOOOOOFFFBBBBBBRRR , donde: OOOOOO: segmento de la base de datos ( AAAIug \u001d en el ejemplo). Todos los objetos que est\u00e9n en el mismo esquema y en el mismo segmento tendr\u00e1n el mismo valor. FFF: el n\u00famero de fichero del tablespace \u001d relativo que contiene la fila (fichero AAJ en el ejemplo). BBBBBB: el bloque de datos que contiene a la fila (bloque AAC4Ah en el ejemplo). El n\u00famero de bloque es relativo a su fichero de datos, no al tablespace \u001d. Por lo tanto, dos filas con n\u00fameros de bloque iguales podr\u00edan residir en diferentes datafiles \u001d del mismo tablespace \u001d. RRR: el n\u00famero de fila en el bloque (fila AAI en el ejemplo). Este tipo de campo no aparece en los SELECT ni se puede modificar en los UPDATE, ni en los INSERT. Tampoco se puede utilizar en los CREATE. Es un tipo de datos utilizado exclusivamente por Oracle. S\u00f3lo se puede ver su valor utilizando la palabra reservada ROWID, por ejemplo: + select rowid, nombre, apellidos from clientes Ejemplo 2: ``` SELECT ROWID, SUBSTR(ROWID,15,4) \"Fichero\", SUBSTR(ROWID,1,8) \"Bloque\", SUBSTR(ROWID,10,4) \"Fila\" FROM proveedores ``` Ejemplo 3: una forma de saber en cu\u00e1ntos ficheros de datos est\u00e1 alojada una tabla. ``` SELECT COUNT(DISTINCT(SUBSTR(ROWID,7,3))) \"Numero ficheros \" FROM facturacion ``` UROWID ROWID universal. Admite ROWID a tablas que no sean de Oracle, tablas externas. Admite tanto ROWID l\u00f3gicos como f\u00edsicos. XMLType Tipo de datos abstracto. En realidad se trata de un CLOB. Se asocia a un esquema XML para la definici\u00f3n de su estructura.","title":"Otros tipos."},{"location":"basededatos/tipodedatos/#resumen","text":"De los tipos anteriores, los com\u00fanmente utilizados son: VARCHAR2 \u001d (cadenas de texto no muy grandes), DATE (fechas, horas), NUMBER (n\u00fameros), BLOB ( ficheros de tipo word, excel, access, video, sonido, im\u00e1genes, etc ) y CLOB (cadenas de texto muy grandes). Los que se utilizar\u00e1n en el curso JFS, VARCHAR2 , DATE , NUMBER .","title":"Resumen."},{"location":"basededatos/usuarios/","text":"Oracle 11g - Manejo de usuarios. Todos estos comandos se realizan accediendo a la consola y ejecutando sqlplus . La ejecuci\u00f3n de este programa se encuentra en las lecturas del m\u00f3dulo de base de datos. Crear Cuando ingresamos por primera vez a la base de datos usando sqlplus , entramos con el usuario system , de esta forma, tenemos permisos de administraci\u00f3n. Para comenzar a utilizar la base de datos, comenzamos por crear un usuario nuevo. CREATE USER ${nombre_usuario} IDENTIFIED BY ${contrasenia}; Ejemplo: Nuevo usuario con las credenciales: { usuario: \"lherrera\", password: \"123456\" } create user lherrera identified by 123456; -- La respuesta debe ser: User created. Otorgar permisos GRANT ALL PRIVILEGES TO ${usuario}; Ejemplo: Al usuario lherrera anterior le otorgamos permisos de la siguiente manera: SQL> grant all privileges to lherrera; -- Grant succeeded. Otorgar permisos de inicio de sesi\u00f3n GRANT CREATE SESSION, GRANT ANY PRIVILEGE TO ${usuario_prueba}; Asignando permisos de escritura en tabla SQL> grant unlimited tablespace to lherrera; Grant succeeded. Iniciando sesi\u00f3n con el usuario creado SQL> disconnect Disconnected from Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production Entramos con el password creado. SQL> connect Enter user-name: lherrera Enter password: Connected. Identificar usuarios Puede ser accedido desde todos los usuarios del sistema. SQL> select user from dual; USER ------------------------------ SYSTEM SQL> Desconectar al usuario SQL> disconnect Disconnected from Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production SQL> select user from dual; SP2-0640: Not connected SQL> Conectar al usuario Se indica el usuario/contrase\u00f1a. SQL> connect lherrera/123456; Connected. SQL> select user from dual; USER ------------------------------ LHERRERA Activando la cuenta hr hr , es una base de datos de pruebas que trae oracle ; pero antes de poder utilizarla, hay que activarla. Podemos indicar cualquier contrase\u00f1a, en este caso ser\u00e1: 123456 . # Si no se tienen los suficientes privilegios SQL> ALTER USER HR IDENTIFIED BY 123456 ACCOUNT UNLOCK; ERROR at line 1: ORA-01031: insufficient privileges # Con suficientes privilegios SQL> ALTER USER HR IDENTIFIED BY 123456 ACCOUNT UNLOCK; User altered. Conectar utilizando, sql developer . Para conectarnos a la base de datos, utilizaremos el usuario hr que activamos en el pasado \u00edtem. En la ventana principal de conexi\u00f3n con sql developer Name: Un nombre de la conexi\u00f3n para poder identificarla Tipo de base de datos: Oracle Color: Un color para identificar la conexi\u00f3n, usualmente utilizando verde para desarrollo, y rojo para producci\u00f3n. Como estamos en un ambiente de desarrollo, podr\u00eda ser verde; pero no es necesario indicar esto ahora. Pesta\u00f1a \"informaci\u00f3n del usuario\" Tipo de autenticaci\u00f3n: Por defecto Usuario: hr Rol: Valor por defecto Contrase\u00f1a: 123456 Guardar contrase\u00f1a: opcional si es que no se desea ingresarla en la pr\u00f3xima sesi\u00f3n. Tipo de conexi\u00f3n: B\u00e1sico Pesta\u00f1a: Detalles Nombre del Host: localhost Puerto: 1521 \u2611\ufe0f SID: xe Nombre del Servicio: Se deja desactivado tal cual como est\u00e1. \u001c Simulaci\u00f3n de inicio de sesi\u00f3n desde docker - solo para mac . Origen del contenedor: https://hub.docker.com/r/rohitbasu77/oracle11g Esto es luego de descargar la imagen desde docker hub . El puerto en este caso es: 41521 \u279c ~ docker run -d --name oracle11g -p 40022:22 -p 41521:1521 -p 48080:8080 rohitbasu77/oracle11g:latest 77f143c5204dd38ab76ba01ef1c738f1587c6c4910c305436ff0394703fe0a5f \u279c ~ docker ps -qa 77f143c5204d \u279c ~ docker exec -i -t 77f143c5204d /bin/bash root@77f143c5204d:/# sqlplus SQL*Plus: Release 11.2.0.2.0 Production on Fri Jun 12 02:34:58 2020 Copyright (c) 1982, 2011, Oracle. All rights reserved. Enter user-name: system Enter password: Connected to: Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production SQL> Conexi\u00f3n desde DBEAVER","title":"Usuarios"},{"location":"basededatos/usuarios/#oracle-11g-manejo-de-usuarios","text":"Todos estos comandos se realizan accediendo a la consola y ejecutando sqlplus . La ejecuci\u00f3n de este programa se encuentra en las lecturas del m\u00f3dulo de base de datos.","title":"Oracle 11g - Manejo de usuarios."},{"location":"basededatos/usuarios/#crear","text":"Cuando ingresamos por primera vez a la base de datos usando sqlplus , entramos con el usuario system , de esta forma, tenemos permisos de administraci\u00f3n. Para comenzar a utilizar la base de datos, comenzamos por crear un usuario nuevo. CREATE USER ${nombre_usuario} IDENTIFIED BY ${contrasenia}; Ejemplo: Nuevo usuario con las credenciales: { usuario: \"lherrera\", password: \"123456\" } create user lherrera identified by 123456; -- La respuesta debe ser: User created.","title":"Crear"},{"location":"basededatos/usuarios/#otorgar-permisos","text":"GRANT ALL PRIVILEGES TO ${usuario}; Ejemplo: Al usuario lherrera anterior le otorgamos permisos de la siguiente manera: SQL> grant all privileges to lherrera; -- Grant succeeded. Otorgar permisos de inicio de sesi\u00f3n GRANT CREATE SESSION, GRANT ANY PRIVILEGE TO ${usuario_prueba}; Asignando permisos de escritura en tabla SQL> grant unlimited tablespace to lherrera; Grant succeeded.","title":"Otorgar permisos"},{"location":"basededatos/usuarios/#iniciando-sesion-con-el-usuario-creado","text":"SQL> disconnect Disconnected from Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production Entramos con el password creado. SQL> connect Enter user-name: lherrera Enter password: Connected.","title":"Iniciando sesi\u00f3n con el usuario creado"},{"location":"basededatos/usuarios/#identificar-usuarios","text":"Puede ser accedido desde todos los usuarios del sistema. SQL> select user from dual; USER ------------------------------ SYSTEM SQL>","title":"Identificar usuarios"},{"location":"basededatos/usuarios/#desconectar-al-usuario","text":"SQL> disconnect Disconnected from Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production SQL> select user from dual; SP2-0640: Not connected SQL>","title":"Desconectar al usuario"},{"location":"basededatos/usuarios/#conectar-al-usuario","text":"Se indica el usuario/contrase\u00f1a. SQL> connect lherrera/123456; Connected. SQL> select user from dual; USER ------------------------------ LHERRERA","title":"Conectar al usuario"},{"location":"basededatos/usuarios/#activando-la-cuenta-hr","text":"hr , es una base de datos de pruebas que trae oracle ; pero antes de poder utilizarla, hay que activarla. Podemos indicar cualquier contrase\u00f1a, en este caso ser\u00e1: 123456 . # Si no se tienen los suficientes privilegios SQL> ALTER USER HR IDENTIFIED BY 123456 ACCOUNT UNLOCK; ERROR at line 1: ORA-01031: insufficient privileges # Con suficientes privilegios SQL> ALTER USER HR IDENTIFIED BY 123456 ACCOUNT UNLOCK; User altered.","title":"Activando la cuenta hr"},{"location":"basededatos/usuarios/#conectar-utilizando-sql-developer","text":"Para conectarnos a la base de datos, utilizaremos el usuario hr que activamos en el pasado \u00edtem. En la ventana principal de conexi\u00f3n con sql developer Name: Un nombre de la conexi\u00f3n para poder identificarla Tipo de base de datos: Oracle Color: Un color para identificar la conexi\u00f3n, usualmente utilizando verde para desarrollo, y rojo para producci\u00f3n. Como estamos en un ambiente de desarrollo, podr\u00eda ser verde; pero no es necesario indicar esto ahora. Pesta\u00f1a \"informaci\u00f3n del usuario\" Tipo de autenticaci\u00f3n: Por defecto Usuario: hr Rol: Valor por defecto Contrase\u00f1a: 123456 Guardar contrase\u00f1a: opcional si es que no se desea ingresarla en la pr\u00f3xima sesi\u00f3n. Tipo de conexi\u00f3n: B\u00e1sico Pesta\u00f1a: Detalles Nombre del Host: localhost Puerto: 1521 \u2611\ufe0f SID: xe Nombre del Servicio: Se deja desactivado tal cual como est\u00e1.","title":"Conectar utilizando, sql developer."},{"location":"basededatos/usuarios/#simulacion-de-inicio-de-sesion-desde-docker-solo-para-mac","text":"Origen del contenedor: https://hub.docker.com/r/rohitbasu77/oracle11g Esto es luego de descargar la imagen desde docker hub . El puerto en este caso es: 41521 \u279c ~ docker run -d --name oracle11g -p 40022:22 -p 41521:1521 -p 48080:8080 rohitbasu77/oracle11g:latest 77f143c5204dd38ab76ba01ef1c738f1587c6c4910c305436ff0394703fe0a5f \u279c ~ docker ps -qa 77f143c5204d \u279c ~ docker exec -i -t 77f143c5204d /bin/bash root@77f143c5204d:/# sqlplus SQL*Plus: Release 11.2.0.2.0 Production on Fri Jun 12 02:34:58 2020 Copyright (c) 1982, 2011, Oracle. All rights reserved. Enter user-name: system Enter password: Connected to: Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production SQL>","title":"Simulaci\u00f3n de inicio de sesi\u00f3n desde docker - solo para mac."},{"location":"basededatos/usuarios/#conexion-desde-dbeaver","text":"","title":"Conexi\u00f3n desde DBEAVER"},{"location":"basededatos/ddldcl/ejemplosdeunatabla/","text":"Ejemplos de una tabla. Solamente se muestran las consultas, la conexi\u00f3n la pueden extraer de las gu\u00edas de repaso o cualquier video parecido al del siguiente enlace: https://www.youtube.com/watch?v=Zgq9JABTF8k . Se expondr\u00e1n una serie de ejemplos, que ir\u00e1n incrementando su dificultad, intentando cubrir los aspectos m\u00e1s recurrentes en los que necesitemos realizar una consulta a la base de datos. Oracle 11g NO es sensible a may\u00fasculas o min\u00fasculas, por lo tanto, las consultas pueden contener texto formado por may\u00fasculas, min\u00fasculas o una mezcla de ambas. Cualquiera sea el caso, no influye en el resultado obtenido. Partiremos con un campo y luego lo incrementamos para aprovechar una mejor visualizaci\u00f3n de las ventajas al aplicar alguna t\u00e9cnica. CRUD un campo. Crear. Se necesita almacenar la informaci\u00f3n de una cuenta de usuario de una red social. La informaci\u00f3n a almacenar es el nombre de usuario. Soluci\u00f3n CREATE TABLE cuenta (nombre_usuario VARCHAR2(200)); COMMIT; Podemos confirmar la estructura desde sqlpluss . SQL> describe cuenta; Name Null? Type ----------------------------------------- -------- ---------------------------- NOMBRE_USUARIO VARCHAR2(200) SQL> Ingresar Una vez creada la tabla, podemos agregar datos. INSERT INTO cuenta (nombre_usuario) VALUES ('lherrera'); commit; El primer par\u00e9ntesis indica el orden, en el que entregaremos los datos, en el segundo par\u00e9ntesis ir\u00e1n los datos entregados seg\u00fan su tipo. Adem\u00e1s se puede ingresar otro dato y esta vez no ir\u00e1n los par\u00e9ntesis. INSERT INTO cuenta VALUES ('otrousuario'); commit; Consultar Podemos saber los registros que posee una tabla. SELECT * FROM cuenta; Resultado. NOMBRE_USUARIO -------------------------------------------------------------------------------- lherrera otrousuario No es conveniente traer toda la informaci\u00f3n utilizando el * , ya que no se puede obtener informaci\u00f3n detallada de lo que se est\u00e1 consultando. Por este motivo que cuando se realiza una consulta, especificamos cada campo que consultemos. La siguiente consulta, obtiene los mismos resultados. SELECT nombre_usuario FROM cuenta; Resultado. NOMBRE_USUARIO -------------------------------------------------------------------------------- lherrera otrousuario Actualizar Para actualizar informaci\u00f3n debemos indicar tres cosas: La tabla que se actualizar\u00e1. El valor de cada campo a actualizar, indicando a qu\u00e9 campo pertenece cada valor. Una condici\u00f3n de filtrado de datos para que actualice aquellos datos que realmente se va a actualizar. Si no se especifica el filtro, se aplicar\u00e1 a toda la columna. En el siguiente ejemplo cambiaremos el valor del segundo usuario. UPDATE cuenta SET nombre_usuario = 'jlopez' WHERE nombre_usuario = 'otrousuario'; COMMIT; Si consultamos los datos como lo hicimos anteriormente, esta vez el resultado ser\u00e1: NOMBRE_USUARIO -------------------------------------------------------------------------------- lherrera jlopez Eliminar Podemos eliminar los datos de una tabla, indicando dos cosas: El nombre de la tabla que se le aplicar\u00e1 la eliminaci\u00f3n de registros. La condici\u00f3n de filtrado de filas a eliminar. Si no se especifica el filtro, se eliminan todos los registros de la tabla. Esto elimina la fila completa, para operaciones espec\u00edficas sobre un atributo en particular, se realiza con update , delete , elimina la fila completa. DELETE FROM cuenta WHERE nombre_usuario = 'lherrera'; COMMIT; Si ejecutamos el select , ahora el resultado ser\u00e1 el siguiente; NOMBRE_USUARIO -------------------------------------------------------------------------------- jlopez Borrar una tabla A diferencia del comando anterior, esta instrucci\u00f3n, elimina la tabla. DROP TABLE cuenta; COMMIT; Si ejecutamos un select , esta vez, no nos podr\u00e1 mostrar el contenido de un elemento que no existe. ERROR at line 1: ORA-00942: table or view does not exist CRUD cinco campos. Crear Creamos una tabla que almacena la informaci\u00f3n de un empleado. Los atributos del empleado ser\u00e1n: c\u00f3digo nombre departamento salario fecha de ingreso c\u00f3digo jefe Se indica una clave primaria para poder optimizar la b\u00fasqueda de registros y para controlar que los datos ingresados en este campo no se repitan. Soluci\u00f3n CREATE TABLE empleado ( codigo NUMBER, nombre VARCHAR2(200), departamento VARCHAR2(200), salario NUMBER, fecha_ingreso DATE, codigo_jefe NUMBER, PRIMARY KEY (codigo) ); COMMIT; Ingresar datos. Como ya sabemos ingresar datos, ingresaremos 100 registros. Datos generados desde la siguiente web: http://www.generatedata.com/?lang=es . Se recomienda ejecutar el script en una hoja independiente. INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (1,'Igor','Investigaci\u00f3n y desarrollo',1237001,'30/07/2019',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (2,'Cedric','Departamento legal',1248910,'08/07/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (3,'Upton','Gesti\u00f3n de la calidad',794100,'18/08/2020',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (4,'Christen','Atenci\u00f3n al cliente',1436332,'01/02/2020',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (5,'Xyla','N\u00f3minas',1169331,'30/06/2019',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (6,'Shad','Ventas y Mercadot\u00e9cnia',974374,'22/11/2019',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (7,'Darryl','Soporte t\u00e9cnico',519266,'06/10/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (8,'Patricia','Departamento legal',580250,'22/09/2020',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (9,'John','Publicidad',1494710,'10/02/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (10,'Edward','Departamento legal',322719,'12/07/2019',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (11,'Garrett','Contabilidad',1248573,'01/09/2019',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (12,'Kirk','Recursos humanos',1272525,'19/06/2020',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (13,'Elliott','Relaciones p\u00fablicas',764232,'26/10/2019',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (14,'Shafira','Departamento legal',1286914,'16/08/2020',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (15,'Eaton','N\u00f3minas',772136,'11/06/2020',7); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (16,'Merritt','Gesti\u00f3n de la calidad',1284992,'03/05/2020',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (17,'Ahmed','Publicidad',363332,'03/09/2019',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (18,'Ezra','Ventas y Mercadot\u00e9cnia',760924,'25/05/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (19,'Vincent','Gesti\u00f3n de la calidad',370818,'03/04/2021',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (20,'Kennan','Departamento legal',1022730,'26/10/2020',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (21,'Ulric','Investigaci\u00f3n y desarrollo',602189,'08/12/2020',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (22,'Hope','N\u00f3minas',706972,'17/01/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (23,'May','Relaciones con los medios',339710,'08/12/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (24,'Callie','N\u00f3minas',1091572,'15/04/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (25,'Jeanette','Gesti\u00f3n de la calidad',594320,'26/11/2019',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (26,'Mohammad','Investigaci\u00f3n y desarrollo',604452,'20/04/2020',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (27,'Kellie','Relaciones p\u00fablicas',846469,'28/11/2020',7); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (28,'Branden','Soporte t\u00e9cnico',1071486,'19/09/2020',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (29,'Wallace','Publicidad',672816,'27/08/2020',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (30,'Paki','N\u00f3minas',1151266,'09/02/2020',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (31,'Tara','Relaciones con los medios',1375434,'14/09/2019',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (32,'Tucker','Departamento legal',1265003,'24/03/2021',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (33,'Vernon','Relaciones con los medios',1239211,'03/10/2019',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (34,'Quincy','Finanzas',885220,'30/03/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (35,'Stewart','Atenci\u00f3n al cliente',1255732,'18/12/2019',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (36,'Caryn','Finanzas',1460838,'09/10/2020',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (37,'Thomas','Soporte t\u00e9cnico',679609,'04/07/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (38,'Troy','Relaciones con los medios',1246677,'16/03/2021',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (39,'Kennedy','Relaciones con los medios',932323,'31/07/2019',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (40,'Owen','Atenci\u00f3n al cliente',332154,'30/04/2021',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (41,'Colby','Relaciones p\u00fablicas',1417677,'05/08/2019',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (42,'Price','Gesti\u00f3n de activos',507202,'11/08/2019',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (43,'Kenyon','Contabilidad',923118,'18/01/2020',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (44,'Cooper','Gesti\u00f3n de activos',1198186,'22/12/2020',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (45,'Nehru','Ventas y Mercadot\u00e9cnia',1236908,'13/05/2020',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (46,'Jamal','N\u00f3minas',338918,'27/01/2021',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (47,'Nevada','Ventas y Mercadot\u00e9cnia',963398,'06/07/2019',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (48,'Madonna','Publicidad',406263,'28/02/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (49,'Jaquelyn','Soporte t\u00e9cnico',1377516,'14/10/2019',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (50,'Brody','Publicidad',573028,'27/09/2019',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (51,'Christian','Ventas y Mercadot\u00e9cnia',1095567,'16/09/2020',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (52,'Finn','Relaciones con los medios',473146,'15/02/2020',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (53,'Barry','Investigaci\u00f3n y desarrollo',407435,'12/07/2020',7); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (54,'Lesley','Recursos humanos',1267762,'08/09/2019',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (55,'Ray','Gesti\u00f3n de la calidad',1172563,'23/10/2019',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (56,'Dorothy','Ventas y Mercadot\u00e9cnia',810142,'17/05/2020',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (57,'Cleo','Relaciones con los medios',1147464,'23/04/2020',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (58,'Reagan','Finanzas',955314,'07/05/2021',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (59,'Eleanor','Departamento legal',405021,'08/12/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (60,'Katell','Recursos humanos',496206,'11/09/2020',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (61,'Jack','Relaciones con los medios',1286774,'04/04/2020',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (62,'Xantha','Relaciones con los medios',1458598,'23/10/2020',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (63,'Regina','Departamento legal',1466189,'26/06/2019',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (64,'Dillon','Ventas y Mercadot\u00e9cnia',1412337,'11/06/2021',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (65,'Vanna','Investigaci\u00f3n y desarrollo',567715,'09/12/2019',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (66,'Fuller','Finanzas',1407498,'20/07/2020',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (67,'Chester','Soporte t\u00e9cnico',721733,'21/06/2019',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (68,'Amanda','Gesti\u00f3n de la calidad',478908,'21/11/2019',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (69,'Maryam','Ventas y Mercadot\u00e9cnia',1164269,'20/11/2020',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (70,'Tobias','Gesti\u00f3n de la calidad',837484,'29/07/2019',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (71,'Ebony','N\u00f3minas',702805,'10/09/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (72,'Alexandra','Soporte t\u00e9cnico',655995,'17/02/2021',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (73,'Dante','Relaciones p\u00fablicas',1141065,'11/12/2020',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (74,'Rae','Finanzas',329797,'13/08/2019',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (75,'Sonia','Atenci\u00f3n al cliente',477166,'27/09/2019',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (76,'Hillary','Ventas y Mercadot\u00e9cnia',1451706,'29/09/2020',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (77,'Emmanuel','Investigaci\u00f3n y desarrollo',411310,'17/08/2019',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (78,'John','Relaciones con los medios',839417,'14/07/2019',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (79,'Hunter','Finanzas',612736,'04/10/2020',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (80,'Garrett','Publicidad',450926,'12/11/2019',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (81,'Nash','Soporte t\u00e9cnico',939735,'18/06/2019',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (82,'Denton','Publicidad',943963,'11/10/2019',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (83,'Thomas','Relaciones con los medios',1237412,'18/05/2020',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (84,'Yoshi','Atenci\u00f3n al cliente',573909,'13/04/2021',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (85,'Janna','Publicidad',882684,'04/06/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (86,'Kasimir','Publicidad',1136237,'11/03/2021',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (87,'Yasir','Ventas y Mercadot\u00e9cnia',394336,'17/06/2019',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (88,'Maggie','Departamento legal',682868,'29/01/2020',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (89,'Heather','Recursos humanos',439646,'07/04/2021',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (90,'Aquila','Finanzas',730533,'02/11/2019',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (91,'Zelenia','Gesti\u00f3n de activos',1122065,'12/08/2020',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (92,'Mufutau','Investigaci\u00f3n y desarrollo',648980,'28/05/2020',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (93,'Ferdinand','Soporte t\u00e9cnico',1229679,'24/10/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (94,'Herman','Atenci\u00f3n al cliente',1039641,'23/06/2020',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (95,'Armando','Relaciones p\u00fablicas',1360341,'02/10/2019',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (96,'Adrian','Gesti\u00f3n de activos',598609,'09/01/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (97,'Kirby','Contabilidad',1230184,'01/12/2019',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (98,'Chelsea','Soporte t\u00e9cnico',898185,'16/05/2020',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (99,'Patricia','Recursos humanos',736682,'09/07/2019',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (100,'Ignacia','Soporte t\u00e9cnico',648516,'18/11/2020',7); Si consultamos la tabla empleado , obtenemos la siguiente salida. CODIGO|NOMBRE |DEPARTAMENTO |SALARIO|FECHA_INGRESO |CODIGO_JEFE| ------|---------|--------------------------|-------|-------------------|-----------| 1|Igor |Investigaci\u00f3n y desarrollo|1237001|2019-07-30 00:00:00| 2| 2|Cedric |Departamento legal |1248910|2020-07-08 00:00:00| 4| 3|Upton |Gesti\u00f3n de la calidad | 794100|2020-08-18 00:00:00| 2| 4|Christen |Atenci\u00f3n al cliente |1436332|2020-02-01 00:00:00| 9| ... 97|Kirby |Contabilidad |1230184|2019-12-01 00:00:00| 10| 98|Chelsea |Soporte t\u00e9cnico | 898185|2020-05-16 00:00:00| 2| 99|Patricia |Recursos humanos | 736682|2019-07-09 00:00:00| 3| 100|Ignacia |Soporte t\u00e9cnico | 648516|2020-11-18 00:00:00| 7| Consultar datos. Selecci\u00f3n de columnas. Seleccionar todas las columnas: SELECT codigo, nombre, departamento, salario, fecha_ingreso, codigo_jefe FROM empleado; Podemos dar distinto formato a la consulta. el ; , determina el fin de la instrucci\u00f3n. SELECT codigo, nombre, departamento, salario, fecha_ingreso, codigo_jefe FROM empleado; Resultado. CODIGO|NOMBRE |DEPARTAMENTO |SALARIO|FECHA_INGRESO |CODIGO_JEFE| ------|---------|--------------------------|-------|-------------------|-----------| 1|Igor |Investigaci\u00f3n y desarrollo|1237001|2019-07-30 00:00:00| 2| 2|Cedric |Departamento legal |1248910|2020-07-08 00:00:00| 4| 3|Upton |Gesti\u00f3n de la calidad | 794100|2020-08-18 00:00:00| 2| 4|Christen |Atenci\u00f3n al cliente |1436332|2020-02-01 00:00:00| 9| ... 97|Kirby |Contabilidad |1230184|2019-12-01 00:00:00| 10| 98|Chelsea |Soporte t\u00e9cnico | 898185|2020-05-16 00:00:00| 2| 99|Patricia |Recursos humanos | 736682|2019-07-09 00:00:00| 3| 100|Ignacia |Soporte t\u00e9cnico | 648516|2020-11-18 00:00:00| 7| La cantidad de columnas a seleccionar puede variar, seg\u00fan se requiera. Por ejemplo, podemos seleccionar solamente el nombre. Ejercita seleccionado otro/os campos y analizando resultados. SELECT nombre FROM empleado; Resultado NOMBRE | ---------| Igor | Cedric | Upton | Christen | ... Kirby | Chelsea | Patricia | Ignacia | Seleccionar la cantidad m\u00e1xima de columnas a mostrar. En el ejemplo, se limita a un m\u00e1ximo de 4 elementos. rownum es un dato interno que representa el n\u00famero de filas. Ejercita seleccionando otra cantidad y analizando los resultados. SELECT nombre FROM empleado WHERE rownum <= 4; Resultado NOMBRE | --------| Igor | Cedric | Upton | Christen| Filtrar resultados. Filtrar por un campo de los que declaramos. En este caso se realizar\u00e1 un filtro por departamento. SELECT nombre, departamento FROM empleado WHERE departamento = 'Investigaci\u00f3n y desarrollo'; Resultado NOMBRE |DEPARTAMENTO | --------|--------------------------| Igor |Investigaci\u00f3n y desarrollo| Ulric |Investigaci\u00f3n y desarrollo| Mohammad|Investigaci\u00f3n y desarrollo| Barry |Investigaci\u00f3n y desarrollo| Vanna |Investigaci\u00f3n y desarrollo| Emmanuel|Investigaci\u00f3n y desarrollo| Mufutau |Investigaci\u00f3n y desarrollo| Incluir m\u00e1s de un filtro \ud83d\udc68\ud83c\udffb\u200d\ud83c\udfeb. No debemos pensar que para realizar un filtro, la cantidad de estos mismos filtros, debe ser igual a la cantidad de campos en la consulta. Cada sector, es independiente y cada sector cumple un rol. \ud83d\udc40 El select , es nuestra vista , la secci\u00f3n donde indicamos, que y como se mostrar\u00e1 la informaci\u00f3n en el resultado de la consulta. El from , indica las fuentes de datos o tablas a utilizar. El where , indica los filtros a utilizar. En el siguiente ejemplo: Seleccionamos el c\u00f3digo, el nombre, el salario, la fecha de ingreso. De la tabla empleado. Cuando el departamento sea igual a 'Investigaci\u00f3n y desarrollo', y adem\u00e1s cuando el salario sea superior a $ 600.000. SELECT CODIGO, NOMBRE, SALARIO, FECHA_INGRESO FROM empleado WHERE departamento = 'Investigaci\u00f3n y desarrollo' AND SALARIO > 600000; output: CODIGO|NOMBRE |SALARIO|FECHA_INGRESO | ------|--------|-------|-------------------| 1|Igor |1237001|2019-07-30 00:00:00| 21|Ulric | 602189|2020-12-08 00:00:00| 26|Mohammad| 604452|2020-04-20 00:00:00| 92|Mufutau | 648980|2020-05-28 00:00:00| Orden en resultados. Cambiando el orden en los resultados. En el resultado anterior, el salario se presenta de mayor a menor, en orden descendente. Se debe a que est\u00e1 ordenado por el c\u00f3digo. SQL, permite personalizar este resultado. Es decir que podemos cambiar el orden en que se presenta la informaci\u00f3n a ascendente ASC o descendente DESC de una columna. En el ejemplo se selecciona la columna salario en orden ascendente. Como pr\u00e1ctica, podemos ver que pasa si ordenamos por otras columnas. Si agregamos m\u00e1s de una columna, la primera prevalece en el orden. SELECT CODIGO, NOMBRE, FECHA_INGRESO, SALARIO FROM empleado WHERE departamento = 'Investigaci\u00f3n y desarrollo' AND SALARIO > 600000 ORDER BY SALARIO ASC ; Output: CODIGO|NOMBRE |FECHA_INGRESO |SALARIO| ------|--------|-------------------|-------| 21|Ulric |2020-12-08 00:00:00| 602189| 26|Mohammad|2020-04-20 00:00:00| 604452| 92|Mufutau |2020-05-28 00:00:00| 648980| 1|Igor |2019-07-30 00:00:00|1237001| Seleccionar un solo resultado. SELECT CODIGO, NOMBRE, SALARIO, FECHA_INGRESO FROM empleado WHERE departamento = 'Investigaci\u00f3n y desarrollo' AND SALARIO > 600000 AND ROWNUM <= 1; Output: CODIGO|NOMBRE|SALARIO|FECHA_INGRESO | ------|------|-------|-------------------| 1|Igor |1237001|2019-07-30 00:00:00| Personalizar el nombre de las columnas. alias Quiz\u00e1s se requiera que para una mejor interpretaci\u00f3n de la informaci\u00f3n, se deba cambiar el nombre de las columnas. Se observa que adem\u00e1s de cambiar los nombres en los resultados, se pueden utilizar en las instrucciones de ordenamiento. SELECT CODIGO AS sku, NOMBRE activo, -- as opcional FECHA_INGRESO AS ingreso, SALARIO AS perdida FROM empleado WHERE departamento = 'Investigaci\u00f3n y desarrollo' -- AND perdida > 600000 -- no funciona, en el order by si AND SALARIO > 600000 ORDER BY activo DESC; Output: SKU|ACTIVO |INGRESO |PERDIDA| ---|--------|-------------------|-------| 21|Ulric |2020-12-08 00:00:00| 602189| 92|Mufutau |2020-05-28 00:00:00| 648980| 26|Mohammad|2020-04-20 00:00:00| 604452| 1|Igor |2019-07-30 00:00:00|1237001| Podemos ocupar un alias , no solo en los campos; pero adem\u00e1s para las tablas. Lo utilizaremos para poder llamar a un atributo de una tabla con el nombre muy largo. empl.SALARIO es m\u00e1s corto que empleado.SALARIO , por ahora no se aprecia la gran ventaja; pero cuando se trabaja con varias tablas en una consulta, es de gran utilidad. En la siguiente consulta, adicionamos un filtro por fecha, para observar que este tipo de variables, es decir los de tipo Date , las trabajamos con tipo cadena aplicando la funci\u00f3n to_date() . Realizando esta acci\u00f3n, el motor se encarga de aplicar una correcta comparaci\u00f3n. Se muestra adem\u00e1s que pueden existir varios filtros anidados con un AND . Hay que imaginar que son filtros para un reporte, la diferencia es que en SQL, creamos todos los filtros que necesitemos, sin limitaciones. Como ayuda, pueden ir a la web https://www.chileautos.cl/ , y observar el buscador que poseen como un where con filtros para las categor\u00edas, marca, modelo, palabras clave. Como ejercicio, cambiar el orden de las fechas, adem\u00e1s de probar m\u00e1s formatos en las fechas y analizar los resultados. SELECT CODIGO a, NOMBRE b, FECHA_INGRESO c, SALARIO d FROM empleado empl WHERE empl.departamento = 'Soporte t\u00e9cnico' -- con posibilidad de aplicar un formato diferente al que est\u00e1 en la base. AND empl.FECHA_INGRESO > to_date('30-06-2019', 'DD-MM-YY') AND empl.SALARIO > 1000000 ORDER BY empl.FECHA_INGRESO DESC; Output: Vemos que se muestran los alias de las columnas en lugar de los nombres de la columna original A |B |C |D | --|---------|-------------------|-------| 93|Ferdinand|2020-10-24 00:00:00|1229679| 28|Branden |2020-09-19 00:00:00|1071486| 49|Jaquelyn |2019-10-14 00:00:00|1377516| Cuando trabajemos con columnas calculadas, no podemos listar los resultados como lo hacemos normalmente. Imaginemos que necesitamos el promedio del sueldo ( Funciones Oracle11g ) SELECT AVG(SALARIO) AS sueldo_promedio FROM empleado empl WHERE empl.departamento = 'Soporte t\u00e9cnico' -- con posibilidad de aplicar un formato diferente al que est\u00e1 en la base. AND empl.FECHA_INGRESO > to_date('30-06-2019', 'DD-MM-YY') AND empl.SALARIO > 1000000 ORDER BY empl.FECHA_INGRESO DESC; Output: SUELDO_PROMEDIO| ---------------| 1226227| Manteniendo los mismos filtros que el ejemplo anterior, obtenemos un resultado. Si pensamos en el filtro de datos desde java con stream() , esa funci\u00f3n o este tipo de funciones que retornan un resultado, ser\u00eda la funci\u00f3n reduce . Es decir que entregan un solo valor, calculado con todos los valores de una columna o filtradas por grupos. Es por eso que ya el orden en los que aparecen los resultados no importa, luego eliminamos el Order By . Esto no quiere decir que no sea \u00fatil en otro contexto, pero al menos en esta consulta no nos aporta informaci\u00f3n. SELECT AVG(SALARIO) AS sueldo_promedio FROM empleado empl WHERE empl.departamento = 'Soporte t\u00e9cnico' -- con posibilidad de aplicar un formato diferente al que est\u00e1 en la base. AND empl.FECHA_INGRESO > to_date('30-06-2019', 'DD-MM-YY') AND empl.SALARIO > 1000000; Output: SUELDO_PROMEDIO| ---------------| 1226227| Agrupar resultados. Calculamos la suma de todos los salarios de la tabla empleados. SELECT SUM(SALARIO) AS gasto_total FROM empleado empl; Output: GASTO_TOTAL| -----------| 89799089| Una gran ventaja es poder realizar c\u00e1lculos de columnas y poder agruparlas seg\u00fan alguna otra condici\u00f3n. Sabemos como determinar la suma total de todos los registros, pero qu\u00e9 pasa si lo que necesitamos, es el resultado de la suma de los sueldos de cada departamento. SELECT DEPARTAMENTO, SUM(SALARIO) AS salarios_pagados FROM empleado empl GROUP BY empl.DEPARTAMENTO; Output: DEPARTAMENTO |SALARIOS_PAGADOS| --------------------------|----------------| Relaciones con los medios | 11576166| Investigaci\u00f3n y desarrollo| 4479082| N\u00f3minas | 5933000| Relaciones p\u00fablicas | 5529784| Finanzas | 6381936| Atenci\u00f3n al cliente | 5114934| Soporte t\u00e9cnico | 8741720| Contabilidad | 3401875| Recursos humanos | 4212821| Gesti\u00f3n de activos | 3426062| Departamento legal | 8280604| Gesti\u00f3n de la calidad | 5533185| Publicidad | 6923959| Ventas y Mercadot\u00e9cnia | 10263961| Podemos agregar m\u00e1s columnas calculadas siempre y cuando el grupo no se mantenga afectado. Es decir que si se calcula la suma y el promedio, ambos resultados totales, se puedan agrupar de la misma forma. Lo que se cumple en el ejemplo, ya que se puede determinar el total y el promedio por departamento. SELECT DEPARTAMENTO, SUM(SALARIO) AS salarios_pagados, ROUND(AVG(SALARIO), 2) AS promedio_por_area FROM empleado empl GROUP BY empl.DEPARTAMENTO; Output: DEPARTAMENTO |SALARIOS_PAGADOS|PROMEDIO_POR_AREA| --------------------------|----------------|-----------------| Relaciones con los medios | 11576166| 1052378.73| Investigaci\u00f3n y desarrollo| 4479082| 639868.86| N\u00f3minas | 5933000| 847571.43| Relaciones p\u00fablicas | 5529784| 1105956.8| Finanzas | 6381936| 911705.14| Atenci\u00f3n al cliente | 5114934| 852489| Soporte t\u00e9cnico | 8741720| 874172| Contabilidad | 3401875| 1133958.33| Recursos humanos | 4212821| 842564.2| Gesti\u00f3n de activos | 3426062| 856515.5| Departamento legal | 8280604| 920067.11| Gesti\u00f3n de la calidad | 5533185| 790455| Publicidad | 6923959| 769328.78| Ventas y Mercadot\u00e9cnia | 10263961| 1026396.1| Podemos realizar agrupaciones que no tengan sentido, y que se ejecuten sin problemas, como la siguiente, que agrupa por c\u00f3digo (Todos diferentes), por fecha de ingreso y departamento. Esta consulta se ejecuta pero no se aprovecha el agrupamiento, ya que este es solamente para cuando queramos obtener informaci\u00f3n de grupos repetitivos y que comparten un comportamiento, como los departamentos y su columna salarios a los que se le pueden aplicar varias funciones matem\u00e1ticas y agrupar los resultados. SELECT CODIGO, DEPARTAMENTO, FECHA_INGRESO, SUM(SALARIO) AS salarios_pagados, ROUND(AVG(SALARIO), 2) AS promedio_por_area FROM empleado empl GROUP BY empl.FECHA_INGRESO, CODIGO, DEPARTAMENTO; El resultado no presenta informaci\u00f3n, son solo datos. Para obtener informaci\u00f3n de una consulta, primero debemos saber qu\u00e9 ser\u00eda informaci\u00f3n y como obtenerla de la fuente de datos. Output: CODIGO|DEPARTAMENTO |FECHA_INGRESO |SALARIOS_PAGADOS|PROMEDIO_POR_AREA| ------|--------------------------|-------------------|----------------|-----------------| 12|Recursos humanos |2020-06-19 00:00:00| 1272525| 1272525| 14|Departamento legal |2020-08-16 00:00:00| 1286914| 1286914| 22|N\u00f3minas |2020-01-17 00:00:00| 706972| 706972| 23|Relaciones con los medios |2020-12-08 00:00:00| 339710| 339710| 40|Atenci\u00f3n al cliente |2021-04-30 00:00:00| 332154| 332154| 41|Relaciones p\u00fablicas |2019-08-05 00:00:00| 1417677| 1417677| 53|Investigaci\u00f3n y desarrollo|2020-07-12 00:00:00| 407435| 407435| 78|Relaciones con los medios |2019-07-14 00:00:00| 839417| 839417| 79|Finanzas |2020-10-04 00:00:00| 612736| 612736| 86|Publicidad |2021-03-11 00:00:00| 1136237| 1136237| ... 49|Soporte t\u00e9cnico |2019-10-14 00:00:00| 1377516| 1377516| 72|Soporte t\u00e9cnico |2021-02-17 00:00:00| 655995| 655995| 73|Relaciones p\u00fablicas |2020-12-11 00:00:00| 1141065| 1141065| 89|Recursos humanos |2021-04-07 00:00:00| 439646| 439646| 91|Gesti\u00f3n de activos |2020-08-12 00:00:00| 1122065| 1122065| Por ejemplo si para nosotros ser\u00eda informaci\u00f3n saber cuantos empleados tenemos por departamento. Ahora que sabemos qu\u00e9 es informaci\u00f3n, vemos como podemos obtenerla de la fuente o base de datos. Una funci\u00f3n que cuente los datos de la columna bastar\u00eda para obtener la suma total, luego se procede a agruparlos por departamento, ya que es esta la informaci\u00f3n que se est\u00e1 solicitando. SELECT DEPARTAMENTO, COUNT(CODIGO) AS cantidad_empleados FROM empleado empl GROUP BY empl.DEPARTAMENTO; Output: DEPARTAMENTO |CANTIDAD_EMPLEADOS| --------------------------|------------------| Relaciones con los medios | 11| Investigaci\u00f3n y desarrollo| 7| N\u00f3minas | 7| Relaciones p\u00fablicas | 5| Finanzas | 7| Atenci\u00f3n al cliente | 6| Soporte t\u00e9cnico | 10| Contabilidad | 3| Recursos humanos | 5| Gesti\u00f3n de activos | 4| Departamento legal | 9| Gesti\u00f3n de la calidad | 7| Publicidad | 9| Ventas y Mercadot\u00e9cnia | 10| Con el resultado de la agrupaci\u00f3n de datos, podemos realizar filtros \ud83e\udd4b. Para esto debemos analizar la consulta anterior. Esta consulta retorna una tabla con dos columnas. No es una tabla que tengamos en la base de datos; pero la tenemos en memoria y la podemos utilizar como si fuera una tabla m\u00e1s de la base de datos. Es decir que una consulta puede ser adem\u00e1s, una tabla \"temporal\". SELECT temporal.departamento, temporal.cantidad_empleados FROM ( SELECT DEPARTAMENTO, COUNT(CODIGO) AS cantidad_empleados FROM empleado empl GROUP BY empl.DEPARTAMENTO ) temporal; -- sin el as, el alias simplemente se escribe directo Output: DEPARTAMENTO |CANTIDAD_EMPLEADOS| --------------------------|------------------| Relaciones con los medios | 11| Investigaci\u00f3n y desarrollo| 7| N\u00f3minas | 7| Relaciones p\u00fablicas | 5| Finanzas | 7| Atenci\u00f3n al cliente | 6| Soporte t\u00e9cnico | 10| Contabilidad | 3| Recursos humanos | 5| Gesti\u00f3n de activos | 4| Departamento legal | 9| Gesti\u00f3n de la calidad | 7| Publicidad | 9| Ventas y Mercadot\u00e9cnia | 10| Vemos como una consulta se transforma en una tabla, entonces luego de agrupar, podemos usando el resultado, filtrar por la columna departamento , que al ser una columna calculada, no pod\u00edamos acceder con un where count()... , entonces por ahora no tenemos otra alternativa que usar el resultado y filtrarlo despu\u00e9s en otra consulta. SELECT temporal.departamento, temporal.cantidad_empleados FROM ( SELECT DEPARTAMENTO, COUNT(CODIGO) AS cantidad_empleados FROM empleado empl GROUP BY empl.DEPARTAMENTO ) temporal -- sin el as, el alias simplemente se escribe directo -- aplicamos este filtro, que se realiza con el resultado de -- del calculo del conteo por departamento. WHERE cantidad_empleados > 7; Vemos que se aplica el filtro al campo calculado CANTIDAD_EMPLEADOS Output: DEPARTAMENTO |CANTIDAD_EMPLEADOS| -------------------------|------------------| Relaciones con los medios| 11| Soporte t\u00e9cnico | 10| Departamento legal | 9| Publicidad | 9| Ventas y Mercadot\u00e9cnia | 10| Esto se realiza de esta forma, ya que no se puede hacer esto... SELECT DEPARTAMENTO, COUNT(CODIGO) AS cantidad_empleados FROM empleado empl WHERE cantidad_empleados > 7 GROUP BY empl.DEPARTAMENTO; tampoco esto SELECT DEPARTAMENTO, COUNT(CODIGO) AS cantidad_empleados FROM empleado empl WHERE COUNT(CODIGO) > 7 GROUP BY empl.DEPARTAMENTO; Pero existe una instrucci\u00f3n de filtro de resultados calculados HAVING , y su utilizaci\u00f3n es precisamente realizar filtros de columnas resultados de c\u00e1lculos como la suma, promedio u otra similar con resultado de una operaci\u00f3n con los datos de dicha columna. Tenemos solamente que observar cuando c\u00f3digo nos ahorra si la utilizamos. SELECT DEPARTAMENTO, COUNT(CODIGO) AS cantidad_empleados FROM empleado empl GROUP BY empl.DEPARTAMENTO HAVING COUNT(CODIGO) > 7; Output: DEPARTAMENTO |CANTIDAD_EMPLEADOS| -------------------------|------------------| Relaciones con los medios| 11| Soporte t\u00e9cnico | 10| Departamento legal | 9| Publicidad | 9| Ventas y Mercadot\u00e9cnia | 10| Relaci\u00f3n con tabla. Podemos gracias al atributo CODIGO_JEFE , obtener la cantidad de empleados a cargo que posee cada jefe. Podemos entonces nuevamente hacer lo siguiente: SELECT CODIGO_JEFE, COUNT(codigo) cantidad_empleados FROM EMPLEADO GROUP BY CODIGO_JEFE; Los nombres son variados por lo tanto, no podemos usar el nombre en la agrupaci\u00f3n. La estrategia es contar elementos y agruparlos por una columna que sabemos se repite . En este caso el c\u00f3digo del jefe van del 1 al 10, y se repiten aleatoriamente en los 100 registro y los que se vayan agregando despu\u00e9s. Por lo que los agrupamos por este campo, obteniendo lo siguiente: Output: CODIGO_JEFE|CANTIDAD_EMPLEADOS| -----------|------------------| 1| 12| 6| 8| 2| 10| 4| 10| 5| 11| 8| 11| 3| 10| 7| 4| 9| 13| 10| 11| Luego podemos aplicar usa soluci\u00f3n basada en sub consultas, las que no son recomendables a menos que sea la \u00fanica soluci\u00f3n que podemos realizar. SELECT CODIGO_JEFE, ( SELECT NOMBRE FROM EMPLEADO e2 WHERE e2.CODIGO = temp.CODIGO_JEFE ) AS nombre, cantidad_empleados FROM ( SELECT CODIGO_JEFE, COUNT(codigo) cantidad_empleados FROM EMPLEADO GROUP BY CODIGO_JEFE ) temp; Obteniendo como resultado Output: CODIGO_JEFE|NOMBRE |CANTIDAD_EMPLEADOS| -----------|--------|------------------| 1|Igor | 12| 6|Shad | 8| 2|Cedric | 10| 4|Christen| 10| 5|Xyla | 11| 8|Patricia| 11| 3|Upton | 10| 7|Darryl | 4| 9|John | 13| 10|Edward | 11| Observamos lo siguiente en el problema: La tabla contiene informaci\u00f3n que pertenece a la propia tabla, es decir que se encuentra relacionada con ella misma. Cuando esto ocurre, es normal requerir en una sola consulta (no anidada), la informaci\u00f3n del objeto en cuesti\u00f3n y de sus relaciones. Cuando tengamos a dos o m\u00e1s tablas relacionadas, podemos obtener datos al instante, fusionando la informaci\u00f3n en varios conjuntos, mediante un filtro. La instrucci\u00f3n inner join llena la informaci\u00f3n de varias tablas secuencialmente dependiendo de lo que queremos filtrar. Los pasos a seguir en la siguiente consulta son: Llenar la tabla EMPLEADO a con las mismas condiciones que hemos visto hasta ahora. Agregamos una fusi\u00f3n de datos con una tabla relacionada, en este caso la misma tabla EMPLEADO b ; pero con otro alias. Indicamos que esta tabla se llenar\u00e1, siempre y cuando el CODIGO_JEFE de la tabla de resultados (conteo agrupado) sea igual al CODIGO de la tabla de fusi\u00f3n. Por lo tanto EMPLEADO b , se llenara solo en los casos que se cumpla a.CODIGO_JEFE = b.CODIGO . Hay que tomar cada inner join como una lista nueva con informaci\u00f3n, obtenida con la condici\u00f3n seguida de ON , (pueden continuar con and ). Dentro del inner join , lo que se filtre por fuera, es decir en el where apunta a lo que venga directamente a EMPLEADO a , es decir a lo que venga despu\u00e9s del From . Lo que venga despu\u00e9s del inner join corresponde al filtro de la tabla EMPLEADO b . Con inner join el resultado final depende finalmente de la intersecci\u00f3n de las listas llenas de datos ( EMPLEADO a y EMPLEADO b ). Ambas cumplen con todas las condiciones. Es decir que el resultado final ser\u00e1 una intersecci\u00f3n entre los datos INNER JOIN EMPLEADO b ON a.CODIGO_JEFE = b.CODIGO . Si cuando se est\u00e1n llenando las dos listas con informaci\u00f3n, no se cumple con lo expresado en ON a.CODIGO_JEFE = b.CODIGO , no se llena ni a ni b , quitando la fila de informaci\u00f3n que no cumple pasando a la siguiente iteraci\u00f3n. Si se quiere que no se filtren los datos de la tabla 1, se realiza un left join , si no se desea filtrar los resultados de la segunda tabla aunque no existan coincidencias en el on , se realiza un right join , aunque lo usualmente utilizado es solamente inner join . SELECT b.CODIGO, b.NOMBRE, COUNT(a.codigo) cantidad_empleados FROM EMPLEADO a INNER JOIN EMPLEADO b ON a.CODIGO_JEFE = b.CODIGO GROUP BY b.CODIGO, b.NOMBRE; Output: CODIGO|NOMBRE |CANTIDAD_EMPLEADOS| ------|--------|------------------| 8|Patricia| 11| 9|John | 13| 1|Igor | 12| 2|Cedric | 10| 7|Darryl | 4| 3|Upton | 10| 4|Christen| 10| 5|Xyla | 11| 6|Shad | 8| 10|Edward | 11| Queda como ejercicio realizar la lista de los tres jefes con m\u00e1s empleados, ordenados de mayor a menor.","title":"Ejemplos de una tabla"},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#ejemplos-de-una-tabla","text":"Solamente se muestran las consultas, la conexi\u00f3n la pueden extraer de las gu\u00edas de repaso o cualquier video parecido al del siguiente enlace: https://www.youtube.com/watch?v=Zgq9JABTF8k . Se expondr\u00e1n una serie de ejemplos, que ir\u00e1n incrementando su dificultad, intentando cubrir los aspectos m\u00e1s recurrentes en los que necesitemos realizar una consulta a la base de datos. Oracle 11g NO es sensible a may\u00fasculas o min\u00fasculas, por lo tanto, las consultas pueden contener texto formado por may\u00fasculas, min\u00fasculas o una mezcla de ambas. Cualquiera sea el caso, no influye en el resultado obtenido. Partiremos con un campo y luego lo incrementamos para aprovechar una mejor visualizaci\u00f3n de las ventajas al aplicar alguna t\u00e9cnica.","title":"Ejemplos de una tabla."},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#crud-un-campo","text":"","title":"CRUD un campo."},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#crear","text":"Se necesita almacenar la informaci\u00f3n de una cuenta de usuario de una red social. La informaci\u00f3n a almacenar es el nombre de usuario. Soluci\u00f3n CREATE TABLE cuenta (nombre_usuario VARCHAR2(200)); COMMIT; Podemos confirmar la estructura desde sqlpluss . SQL> describe cuenta; Name Null? Type ----------------------------------------- -------- ---------------------------- NOMBRE_USUARIO VARCHAR2(200) SQL>","title":"Crear."},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#ingresar","text":"Una vez creada la tabla, podemos agregar datos. INSERT INTO cuenta (nombre_usuario) VALUES ('lherrera'); commit; El primer par\u00e9ntesis indica el orden, en el que entregaremos los datos, en el segundo par\u00e9ntesis ir\u00e1n los datos entregados seg\u00fan su tipo. Adem\u00e1s se puede ingresar otro dato y esta vez no ir\u00e1n los par\u00e9ntesis. INSERT INTO cuenta VALUES ('otrousuario'); commit;","title":"Ingresar"},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#consultar","text":"Podemos saber los registros que posee una tabla. SELECT * FROM cuenta; Resultado. NOMBRE_USUARIO -------------------------------------------------------------------------------- lherrera otrousuario No es conveniente traer toda la informaci\u00f3n utilizando el * , ya que no se puede obtener informaci\u00f3n detallada de lo que se est\u00e1 consultando. Por este motivo que cuando se realiza una consulta, especificamos cada campo que consultemos. La siguiente consulta, obtiene los mismos resultados. SELECT nombre_usuario FROM cuenta; Resultado. NOMBRE_USUARIO -------------------------------------------------------------------------------- lherrera otrousuario","title":"Consultar"},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#actualizar","text":"Para actualizar informaci\u00f3n debemos indicar tres cosas: La tabla que se actualizar\u00e1. El valor de cada campo a actualizar, indicando a qu\u00e9 campo pertenece cada valor. Una condici\u00f3n de filtrado de datos para que actualice aquellos datos que realmente se va a actualizar. Si no se especifica el filtro, se aplicar\u00e1 a toda la columna. En el siguiente ejemplo cambiaremos el valor del segundo usuario. UPDATE cuenta SET nombre_usuario = 'jlopez' WHERE nombre_usuario = 'otrousuario'; COMMIT; Si consultamos los datos como lo hicimos anteriormente, esta vez el resultado ser\u00e1: NOMBRE_USUARIO -------------------------------------------------------------------------------- lherrera jlopez","title":"Actualizar"},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#eliminar","text":"Podemos eliminar los datos de una tabla, indicando dos cosas: El nombre de la tabla que se le aplicar\u00e1 la eliminaci\u00f3n de registros. La condici\u00f3n de filtrado de filas a eliminar. Si no se especifica el filtro, se eliminan todos los registros de la tabla. Esto elimina la fila completa, para operaciones espec\u00edficas sobre un atributo en particular, se realiza con update , delete , elimina la fila completa. DELETE FROM cuenta WHERE nombre_usuario = 'lherrera'; COMMIT; Si ejecutamos el select , ahora el resultado ser\u00e1 el siguiente; NOMBRE_USUARIO -------------------------------------------------------------------------------- jlopez","title":"Eliminar"},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#borrar-una-tabla","text":"A diferencia del comando anterior, esta instrucci\u00f3n, elimina la tabla. DROP TABLE cuenta; COMMIT; Si ejecutamos un select , esta vez, no nos podr\u00e1 mostrar el contenido de un elemento que no existe. ERROR at line 1: ORA-00942: table or view does not exist","title":"Borrar una tabla"},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#crud-cinco-campos","text":"","title":"CRUD cinco campos."},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#crear_1","text":"Creamos una tabla que almacena la informaci\u00f3n de un empleado. Los atributos del empleado ser\u00e1n: c\u00f3digo nombre departamento salario fecha de ingreso c\u00f3digo jefe Se indica una clave primaria para poder optimizar la b\u00fasqueda de registros y para controlar que los datos ingresados en este campo no se repitan. Soluci\u00f3n CREATE TABLE empleado ( codigo NUMBER, nombre VARCHAR2(200), departamento VARCHAR2(200), salario NUMBER, fecha_ingreso DATE, codigo_jefe NUMBER, PRIMARY KEY (codigo) ); COMMIT;","title":"Crear"},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#ingresar-datos","text":"Como ya sabemos ingresar datos, ingresaremos 100 registros. Datos generados desde la siguiente web: http://www.generatedata.com/?lang=es . Se recomienda ejecutar el script en una hoja independiente. INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (1,'Igor','Investigaci\u00f3n y desarrollo',1237001,'30/07/2019',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (2,'Cedric','Departamento legal',1248910,'08/07/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (3,'Upton','Gesti\u00f3n de la calidad',794100,'18/08/2020',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (4,'Christen','Atenci\u00f3n al cliente',1436332,'01/02/2020',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (5,'Xyla','N\u00f3minas',1169331,'30/06/2019',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (6,'Shad','Ventas y Mercadot\u00e9cnia',974374,'22/11/2019',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (7,'Darryl','Soporte t\u00e9cnico',519266,'06/10/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (8,'Patricia','Departamento legal',580250,'22/09/2020',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (9,'John','Publicidad',1494710,'10/02/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (10,'Edward','Departamento legal',322719,'12/07/2019',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (11,'Garrett','Contabilidad',1248573,'01/09/2019',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (12,'Kirk','Recursos humanos',1272525,'19/06/2020',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (13,'Elliott','Relaciones p\u00fablicas',764232,'26/10/2019',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (14,'Shafira','Departamento legal',1286914,'16/08/2020',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (15,'Eaton','N\u00f3minas',772136,'11/06/2020',7); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (16,'Merritt','Gesti\u00f3n de la calidad',1284992,'03/05/2020',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (17,'Ahmed','Publicidad',363332,'03/09/2019',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (18,'Ezra','Ventas y Mercadot\u00e9cnia',760924,'25/05/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (19,'Vincent','Gesti\u00f3n de la calidad',370818,'03/04/2021',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (20,'Kennan','Departamento legal',1022730,'26/10/2020',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (21,'Ulric','Investigaci\u00f3n y desarrollo',602189,'08/12/2020',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (22,'Hope','N\u00f3minas',706972,'17/01/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (23,'May','Relaciones con los medios',339710,'08/12/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (24,'Callie','N\u00f3minas',1091572,'15/04/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (25,'Jeanette','Gesti\u00f3n de la calidad',594320,'26/11/2019',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (26,'Mohammad','Investigaci\u00f3n y desarrollo',604452,'20/04/2020',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (27,'Kellie','Relaciones p\u00fablicas',846469,'28/11/2020',7); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (28,'Branden','Soporte t\u00e9cnico',1071486,'19/09/2020',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (29,'Wallace','Publicidad',672816,'27/08/2020',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (30,'Paki','N\u00f3minas',1151266,'09/02/2020',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (31,'Tara','Relaciones con los medios',1375434,'14/09/2019',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (32,'Tucker','Departamento legal',1265003,'24/03/2021',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (33,'Vernon','Relaciones con los medios',1239211,'03/10/2019',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (34,'Quincy','Finanzas',885220,'30/03/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (35,'Stewart','Atenci\u00f3n al cliente',1255732,'18/12/2019',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (36,'Caryn','Finanzas',1460838,'09/10/2020',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (37,'Thomas','Soporte t\u00e9cnico',679609,'04/07/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (38,'Troy','Relaciones con los medios',1246677,'16/03/2021',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (39,'Kennedy','Relaciones con los medios',932323,'31/07/2019',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (40,'Owen','Atenci\u00f3n al cliente',332154,'30/04/2021',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (41,'Colby','Relaciones p\u00fablicas',1417677,'05/08/2019',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (42,'Price','Gesti\u00f3n de activos',507202,'11/08/2019',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (43,'Kenyon','Contabilidad',923118,'18/01/2020',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (44,'Cooper','Gesti\u00f3n de activos',1198186,'22/12/2020',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (45,'Nehru','Ventas y Mercadot\u00e9cnia',1236908,'13/05/2020',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (46,'Jamal','N\u00f3minas',338918,'27/01/2021',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (47,'Nevada','Ventas y Mercadot\u00e9cnia',963398,'06/07/2019',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (48,'Madonna','Publicidad',406263,'28/02/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (49,'Jaquelyn','Soporte t\u00e9cnico',1377516,'14/10/2019',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (50,'Brody','Publicidad',573028,'27/09/2019',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (51,'Christian','Ventas y Mercadot\u00e9cnia',1095567,'16/09/2020',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (52,'Finn','Relaciones con los medios',473146,'15/02/2020',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (53,'Barry','Investigaci\u00f3n y desarrollo',407435,'12/07/2020',7); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (54,'Lesley','Recursos humanos',1267762,'08/09/2019',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (55,'Ray','Gesti\u00f3n de la calidad',1172563,'23/10/2019',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (56,'Dorothy','Ventas y Mercadot\u00e9cnia',810142,'17/05/2020',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (57,'Cleo','Relaciones con los medios',1147464,'23/04/2020',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (58,'Reagan','Finanzas',955314,'07/05/2021',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (59,'Eleanor','Departamento legal',405021,'08/12/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (60,'Katell','Recursos humanos',496206,'11/09/2020',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (61,'Jack','Relaciones con los medios',1286774,'04/04/2020',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (62,'Xantha','Relaciones con los medios',1458598,'23/10/2020',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (63,'Regina','Departamento legal',1466189,'26/06/2019',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (64,'Dillon','Ventas y Mercadot\u00e9cnia',1412337,'11/06/2021',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (65,'Vanna','Investigaci\u00f3n y desarrollo',567715,'09/12/2019',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (66,'Fuller','Finanzas',1407498,'20/07/2020',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (67,'Chester','Soporte t\u00e9cnico',721733,'21/06/2019',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (68,'Amanda','Gesti\u00f3n de la calidad',478908,'21/11/2019',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (69,'Maryam','Ventas y Mercadot\u00e9cnia',1164269,'20/11/2020',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (70,'Tobias','Gesti\u00f3n de la calidad',837484,'29/07/2019',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (71,'Ebony','N\u00f3minas',702805,'10/09/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (72,'Alexandra','Soporte t\u00e9cnico',655995,'17/02/2021',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (73,'Dante','Relaciones p\u00fablicas',1141065,'11/12/2020',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (74,'Rae','Finanzas',329797,'13/08/2019',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (75,'Sonia','Atenci\u00f3n al cliente',477166,'27/09/2019',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (76,'Hillary','Ventas y Mercadot\u00e9cnia',1451706,'29/09/2020',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (77,'Emmanuel','Investigaci\u00f3n y desarrollo',411310,'17/08/2019',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (78,'John','Relaciones con los medios',839417,'14/07/2019',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (79,'Hunter','Finanzas',612736,'04/10/2020',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (80,'Garrett','Publicidad',450926,'12/11/2019',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (81,'Nash','Soporte t\u00e9cnico',939735,'18/06/2019',9); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (82,'Denton','Publicidad',943963,'11/10/2019',6); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (83,'Thomas','Relaciones con los medios',1237412,'18/05/2020',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (84,'Yoshi','Atenci\u00f3n al cliente',573909,'13/04/2021',5); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (85,'Janna','Publicidad',882684,'04/06/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (86,'Kasimir','Publicidad',1136237,'11/03/2021',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (87,'Yasir','Ventas y Mercadot\u00e9cnia',394336,'17/06/2019',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (88,'Maggie','Departamento legal',682868,'29/01/2020',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (89,'Heather','Recursos humanos',439646,'07/04/2021',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (90,'Aquila','Finanzas',730533,'02/11/2019',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (91,'Zelenia','Gesti\u00f3n de activos',1122065,'12/08/2020',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (92,'Mufutau','Investigaci\u00f3n y desarrollo',648980,'28/05/2020',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (93,'Ferdinand','Soporte t\u00e9cnico',1229679,'24/10/2020',4); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (94,'Herman','Atenci\u00f3n al cliente',1039641,'23/06/2020',8); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (95,'Armando','Relaciones p\u00fablicas',1360341,'02/10/2019',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (96,'Adrian','Gesti\u00f3n de activos',598609,'09/01/2020',1); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (97,'Kirby','Contabilidad',1230184,'01/12/2019',10); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (98,'Chelsea','Soporte t\u00e9cnico',898185,'16/05/2020',2); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (99,'Patricia','Recursos humanos',736682,'09/07/2019',3); INSERT INTO empleado (codigo,nombre,departamento,salario,fecha_ingreso,codigo_jefe) VALUES (100,'Ignacia','Soporte t\u00e9cnico',648516,'18/11/2020',7); Si consultamos la tabla empleado , obtenemos la siguiente salida. CODIGO|NOMBRE |DEPARTAMENTO |SALARIO|FECHA_INGRESO |CODIGO_JEFE| ------|---------|--------------------------|-------|-------------------|-----------| 1|Igor |Investigaci\u00f3n y desarrollo|1237001|2019-07-30 00:00:00| 2| 2|Cedric |Departamento legal |1248910|2020-07-08 00:00:00| 4| 3|Upton |Gesti\u00f3n de la calidad | 794100|2020-08-18 00:00:00| 2| 4|Christen |Atenci\u00f3n al cliente |1436332|2020-02-01 00:00:00| 9| ... 97|Kirby |Contabilidad |1230184|2019-12-01 00:00:00| 10| 98|Chelsea |Soporte t\u00e9cnico | 898185|2020-05-16 00:00:00| 2| 99|Patricia |Recursos humanos | 736682|2019-07-09 00:00:00| 3| 100|Ignacia |Soporte t\u00e9cnico | 648516|2020-11-18 00:00:00| 7|","title":"Ingresar datos."},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#consultar-datos","text":"","title":"Consultar datos."},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#seleccion-de-columnas","text":"Seleccionar todas las columnas: SELECT codigo, nombre, departamento, salario, fecha_ingreso, codigo_jefe FROM empleado; Podemos dar distinto formato a la consulta. el ; , determina el fin de la instrucci\u00f3n. SELECT codigo, nombre, departamento, salario, fecha_ingreso, codigo_jefe FROM empleado; Resultado. CODIGO|NOMBRE |DEPARTAMENTO |SALARIO|FECHA_INGRESO |CODIGO_JEFE| ------|---------|--------------------------|-------|-------------------|-----------| 1|Igor |Investigaci\u00f3n y desarrollo|1237001|2019-07-30 00:00:00| 2| 2|Cedric |Departamento legal |1248910|2020-07-08 00:00:00| 4| 3|Upton |Gesti\u00f3n de la calidad | 794100|2020-08-18 00:00:00| 2| 4|Christen |Atenci\u00f3n al cliente |1436332|2020-02-01 00:00:00| 9| ... 97|Kirby |Contabilidad |1230184|2019-12-01 00:00:00| 10| 98|Chelsea |Soporte t\u00e9cnico | 898185|2020-05-16 00:00:00| 2| 99|Patricia |Recursos humanos | 736682|2019-07-09 00:00:00| 3| 100|Ignacia |Soporte t\u00e9cnico | 648516|2020-11-18 00:00:00| 7| La cantidad de columnas a seleccionar puede variar, seg\u00fan se requiera. Por ejemplo, podemos seleccionar solamente el nombre. Ejercita seleccionado otro/os campos y analizando resultados. SELECT nombre FROM empleado; Resultado NOMBRE | ---------| Igor | Cedric | Upton | Christen | ... Kirby | Chelsea | Patricia | Ignacia | Seleccionar la cantidad m\u00e1xima de columnas a mostrar. En el ejemplo, se limita a un m\u00e1ximo de 4 elementos. rownum es un dato interno que representa el n\u00famero de filas. Ejercita seleccionando otra cantidad y analizando los resultados. SELECT nombre FROM empleado WHERE rownum <= 4; Resultado NOMBRE | --------| Igor | Cedric | Upton | Christen|","title":"Selecci\u00f3n de columnas."},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#filtrar-resultados","text":"Filtrar por un campo de los que declaramos. En este caso se realizar\u00e1 un filtro por departamento. SELECT nombre, departamento FROM empleado WHERE departamento = 'Investigaci\u00f3n y desarrollo'; Resultado NOMBRE |DEPARTAMENTO | --------|--------------------------| Igor |Investigaci\u00f3n y desarrollo| Ulric |Investigaci\u00f3n y desarrollo| Mohammad|Investigaci\u00f3n y desarrollo| Barry |Investigaci\u00f3n y desarrollo| Vanna |Investigaci\u00f3n y desarrollo| Emmanuel|Investigaci\u00f3n y desarrollo| Mufutau |Investigaci\u00f3n y desarrollo| Incluir m\u00e1s de un filtro \ud83d\udc68\ud83c\udffb\u200d\ud83c\udfeb. No debemos pensar que para realizar un filtro, la cantidad de estos mismos filtros, debe ser igual a la cantidad de campos en la consulta. Cada sector, es independiente y cada sector cumple un rol. \ud83d\udc40 El select , es nuestra vista , la secci\u00f3n donde indicamos, que y como se mostrar\u00e1 la informaci\u00f3n en el resultado de la consulta. El from , indica las fuentes de datos o tablas a utilizar. El where , indica los filtros a utilizar. En el siguiente ejemplo: Seleccionamos el c\u00f3digo, el nombre, el salario, la fecha de ingreso. De la tabla empleado. Cuando el departamento sea igual a 'Investigaci\u00f3n y desarrollo', y adem\u00e1s cuando el salario sea superior a $ 600.000. SELECT CODIGO, NOMBRE, SALARIO, FECHA_INGRESO FROM empleado WHERE departamento = 'Investigaci\u00f3n y desarrollo' AND SALARIO > 600000; output: CODIGO|NOMBRE |SALARIO|FECHA_INGRESO | ------|--------|-------|-------------------| 1|Igor |1237001|2019-07-30 00:00:00| 21|Ulric | 602189|2020-12-08 00:00:00| 26|Mohammad| 604452|2020-04-20 00:00:00| 92|Mufutau | 648980|2020-05-28 00:00:00|","title":"Filtrar resultados."},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#orden-en-resultados","text":"Cambiando el orden en los resultados. En el resultado anterior, el salario se presenta de mayor a menor, en orden descendente. Se debe a que est\u00e1 ordenado por el c\u00f3digo. SQL, permite personalizar este resultado. Es decir que podemos cambiar el orden en que se presenta la informaci\u00f3n a ascendente ASC o descendente DESC de una columna. En el ejemplo se selecciona la columna salario en orden ascendente. Como pr\u00e1ctica, podemos ver que pasa si ordenamos por otras columnas. Si agregamos m\u00e1s de una columna, la primera prevalece en el orden. SELECT CODIGO, NOMBRE, FECHA_INGRESO, SALARIO FROM empleado WHERE departamento = 'Investigaci\u00f3n y desarrollo' AND SALARIO > 600000 ORDER BY SALARIO ASC ; Output: CODIGO|NOMBRE |FECHA_INGRESO |SALARIO| ------|--------|-------------------|-------| 21|Ulric |2020-12-08 00:00:00| 602189| 26|Mohammad|2020-04-20 00:00:00| 604452| 92|Mufutau |2020-05-28 00:00:00| 648980| 1|Igor |2019-07-30 00:00:00|1237001| Seleccionar un solo resultado. SELECT CODIGO, NOMBRE, SALARIO, FECHA_INGRESO FROM empleado WHERE departamento = 'Investigaci\u00f3n y desarrollo' AND SALARIO > 600000 AND ROWNUM <= 1; Output: CODIGO|NOMBRE|SALARIO|FECHA_INGRESO | ------|------|-------|-------------------| 1|Igor |1237001|2019-07-30 00:00:00| Personalizar el nombre de las columnas. alias Quiz\u00e1s se requiera que para una mejor interpretaci\u00f3n de la informaci\u00f3n, se deba cambiar el nombre de las columnas. Se observa que adem\u00e1s de cambiar los nombres en los resultados, se pueden utilizar en las instrucciones de ordenamiento. SELECT CODIGO AS sku, NOMBRE activo, -- as opcional FECHA_INGRESO AS ingreso, SALARIO AS perdida FROM empleado WHERE departamento = 'Investigaci\u00f3n y desarrollo' -- AND perdida > 600000 -- no funciona, en el order by si AND SALARIO > 600000 ORDER BY activo DESC; Output: SKU|ACTIVO |INGRESO |PERDIDA| ---|--------|-------------------|-------| 21|Ulric |2020-12-08 00:00:00| 602189| 92|Mufutau |2020-05-28 00:00:00| 648980| 26|Mohammad|2020-04-20 00:00:00| 604452| 1|Igor |2019-07-30 00:00:00|1237001| Podemos ocupar un alias , no solo en los campos; pero adem\u00e1s para las tablas. Lo utilizaremos para poder llamar a un atributo de una tabla con el nombre muy largo. empl.SALARIO es m\u00e1s corto que empleado.SALARIO , por ahora no se aprecia la gran ventaja; pero cuando se trabaja con varias tablas en una consulta, es de gran utilidad. En la siguiente consulta, adicionamos un filtro por fecha, para observar que este tipo de variables, es decir los de tipo Date , las trabajamos con tipo cadena aplicando la funci\u00f3n to_date() . Realizando esta acci\u00f3n, el motor se encarga de aplicar una correcta comparaci\u00f3n. Se muestra adem\u00e1s que pueden existir varios filtros anidados con un AND . Hay que imaginar que son filtros para un reporte, la diferencia es que en SQL, creamos todos los filtros que necesitemos, sin limitaciones. Como ayuda, pueden ir a la web https://www.chileautos.cl/ , y observar el buscador que poseen como un where con filtros para las categor\u00edas, marca, modelo, palabras clave. Como ejercicio, cambiar el orden de las fechas, adem\u00e1s de probar m\u00e1s formatos en las fechas y analizar los resultados. SELECT CODIGO a, NOMBRE b, FECHA_INGRESO c, SALARIO d FROM empleado empl WHERE empl.departamento = 'Soporte t\u00e9cnico' -- con posibilidad de aplicar un formato diferente al que est\u00e1 en la base. AND empl.FECHA_INGRESO > to_date('30-06-2019', 'DD-MM-YY') AND empl.SALARIO > 1000000 ORDER BY empl.FECHA_INGRESO DESC; Output: Vemos que se muestran los alias de las columnas en lugar de los nombres de la columna original A |B |C |D | --|---------|-------------------|-------| 93|Ferdinand|2020-10-24 00:00:00|1229679| 28|Branden |2020-09-19 00:00:00|1071486| 49|Jaquelyn |2019-10-14 00:00:00|1377516| Cuando trabajemos con columnas calculadas, no podemos listar los resultados como lo hacemos normalmente. Imaginemos que necesitamos el promedio del sueldo ( Funciones Oracle11g ) SELECT AVG(SALARIO) AS sueldo_promedio FROM empleado empl WHERE empl.departamento = 'Soporte t\u00e9cnico' -- con posibilidad de aplicar un formato diferente al que est\u00e1 en la base. AND empl.FECHA_INGRESO > to_date('30-06-2019', 'DD-MM-YY') AND empl.SALARIO > 1000000 ORDER BY empl.FECHA_INGRESO DESC; Output: SUELDO_PROMEDIO| ---------------| 1226227| Manteniendo los mismos filtros que el ejemplo anterior, obtenemos un resultado. Si pensamos en el filtro de datos desde java con stream() , esa funci\u00f3n o este tipo de funciones que retornan un resultado, ser\u00eda la funci\u00f3n reduce . Es decir que entregan un solo valor, calculado con todos los valores de una columna o filtradas por grupos. Es por eso que ya el orden en los que aparecen los resultados no importa, luego eliminamos el Order By . Esto no quiere decir que no sea \u00fatil en otro contexto, pero al menos en esta consulta no nos aporta informaci\u00f3n. SELECT AVG(SALARIO) AS sueldo_promedio FROM empleado empl WHERE empl.departamento = 'Soporte t\u00e9cnico' -- con posibilidad de aplicar un formato diferente al que est\u00e1 en la base. AND empl.FECHA_INGRESO > to_date('30-06-2019', 'DD-MM-YY') AND empl.SALARIO > 1000000; Output: SUELDO_PROMEDIO| ---------------| 1226227|","title":"Orden en resultados."},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#agrupar-resultados","text":"Calculamos la suma de todos los salarios de la tabla empleados. SELECT SUM(SALARIO) AS gasto_total FROM empleado empl; Output: GASTO_TOTAL| -----------| 89799089| Una gran ventaja es poder realizar c\u00e1lculos de columnas y poder agruparlas seg\u00fan alguna otra condici\u00f3n. Sabemos como determinar la suma total de todos los registros, pero qu\u00e9 pasa si lo que necesitamos, es el resultado de la suma de los sueldos de cada departamento. SELECT DEPARTAMENTO, SUM(SALARIO) AS salarios_pagados FROM empleado empl GROUP BY empl.DEPARTAMENTO; Output: DEPARTAMENTO |SALARIOS_PAGADOS| --------------------------|----------------| Relaciones con los medios | 11576166| Investigaci\u00f3n y desarrollo| 4479082| N\u00f3minas | 5933000| Relaciones p\u00fablicas | 5529784| Finanzas | 6381936| Atenci\u00f3n al cliente | 5114934| Soporte t\u00e9cnico | 8741720| Contabilidad | 3401875| Recursos humanos | 4212821| Gesti\u00f3n de activos | 3426062| Departamento legal | 8280604| Gesti\u00f3n de la calidad | 5533185| Publicidad | 6923959| Ventas y Mercadot\u00e9cnia | 10263961| Podemos agregar m\u00e1s columnas calculadas siempre y cuando el grupo no se mantenga afectado. Es decir que si se calcula la suma y el promedio, ambos resultados totales, se puedan agrupar de la misma forma. Lo que se cumple en el ejemplo, ya que se puede determinar el total y el promedio por departamento. SELECT DEPARTAMENTO, SUM(SALARIO) AS salarios_pagados, ROUND(AVG(SALARIO), 2) AS promedio_por_area FROM empleado empl GROUP BY empl.DEPARTAMENTO; Output: DEPARTAMENTO |SALARIOS_PAGADOS|PROMEDIO_POR_AREA| --------------------------|----------------|-----------------| Relaciones con los medios | 11576166| 1052378.73| Investigaci\u00f3n y desarrollo| 4479082| 639868.86| N\u00f3minas | 5933000| 847571.43| Relaciones p\u00fablicas | 5529784| 1105956.8| Finanzas | 6381936| 911705.14| Atenci\u00f3n al cliente | 5114934| 852489| Soporte t\u00e9cnico | 8741720| 874172| Contabilidad | 3401875| 1133958.33| Recursos humanos | 4212821| 842564.2| Gesti\u00f3n de activos | 3426062| 856515.5| Departamento legal | 8280604| 920067.11| Gesti\u00f3n de la calidad | 5533185| 790455| Publicidad | 6923959| 769328.78| Ventas y Mercadot\u00e9cnia | 10263961| 1026396.1| Podemos realizar agrupaciones que no tengan sentido, y que se ejecuten sin problemas, como la siguiente, que agrupa por c\u00f3digo (Todos diferentes), por fecha de ingreso y departamento. Esta consulta se ejecuta pero no se aprovecha el agrupamiento, ya que este es solamente para cuando queramos obtener informaci\u00f3n de grupos repetitivos y que comparten un comportamiento, como los departamentos y su columna salarios a los que se le pueden aplicar varias funciones matem\u00e1ticas y agrupar los resultados. SELECT CODIGO, DEPARTAMENTO, FECHA_INGRESO, SUM(SALARIO) AS salarios_pagados, ROUND(AVG(SALARIO), 2) AS promedio_por_area FROM empleado empl GROUP BY empl.FECHA_INGRESO, CODIGO, DEPARTAMENTO; El resultado no presenta informaci\u00f3n, son solo datos. Para obtener informaci\u00f3n de una consulta, primero debemos saber qu\u00e9 ser\u00eda informaci\u00f3n y como obtenerla de la fuente de datos. Output: CODIGO|DEPARTAMENTO |FECHA_INGRESO |SALARIOS_PAGADOS|PROMEDIO_POR_AREA| ------|--------------------------|-------------------|----------------|-----------------| 12|Recursos humanos |2020-06-19 00:00:00| 1272525| 1272525| 14|Departamento legal |2020-08-16 00:00:00| 1286914| 1286914| 22|N\u00f3minas |2020-01-17 00:00:00| 706972| 706972| 23|Relaciones con los medios |2020-12-08 00:00:00| 339710| 339710| 40|Atenci\u00f3n al cliente |2021-04-30 00:00:00| 332154| 332154| 41|Relaciones p\u00fablicas |2019-08-05 00:00:00| 1417677| 1417677| 53|Investigaci\u00f3n y desarrollo|2020-07-12 00:00:00| 407435| 407435| 78|Relaciones con los medios |2019-07-14 00:00:00| 839417| 839417| 79|Finanzas |2020-10-04 00:00:00| 612736| 612736| 86|Publicidad |2021-03-11 00:00:00| 1136237| 1136237| ... 49|Soporte t\u00e9cnico |2019-10-14 00:00:00| 1377516| 1377516| 72|Soporte t\u00e9cnico |2021-02-17 00:00:00| 655995| 655995| 73|Relaciones p\u00fablicas |2020-12-11 00:00:00| 1141065| 1141065| 89|Recursos humanos |2021-04-07 00:00:00| 439646| 439646| 91|Gesti\u00f3n de activos |2020-08-12 00:00:00| 1122065| 1122065| Por ejemplo si para nosotros ser\u00eda informaci\u00f3n saber cuantos empleados tenemos por departamento. Ahora que sabemos qu\u00e9 es informaci\u00f3n, vemos como podemos obtenerla de la fuente o base de datos. Una funci\u00f3n que cuente los datos de la columna bastar\u00eda para obtener la suma total, luego se procede a agruparlos por departamento, ya que es esta la informaci\u00f3n que se est\u00e1 solicitando. SELECT DEPARTAMENTO, COUNT(CODIGO) AS cantidad_empleados FROM empleado empl GROUP BY empl.DEPARTAMENTO; Output: DEPARTAMENTO |CANTIDAD_EMPLEADOS| --------------------------|------------------| Relaciones con los medios | 11| Investigaci\u00f3n y desarrollo| 7| N\u00f3minas | 7| Relaciones p\u00fablicas | 5| Finanzas | 7| Atenci\u00f3n al cliente | 6| Soporte t\u00e9cnico | 10| Contabilidad | 3| Recursos humanos | 5| Gesti\u00f3n de activos | 4| Departamento legal | 9| Gesti\u00f3n de la calidad | 7| Publicidad | 9| Ventas y Mercadot\u00e9cnia | 10| Con el resultado de la agrupaci\u00f3n de datos, podemos realizar filtros \ud83e\udd4b. Para esto debemos analizar la consulta anterior. Esta consulta retorna una tabla con dos columnas. No es una tabla que tengamos en la base de datos; pero la tenemos en memoria y la podemos utilizar como si fuera una tabla m\u00e1s de la base de datos. Es decir que una consulta puede ser adem\u00e1s, una tabla \"temporal\". SELECT temporal.departamento, temporal.cantidad_empleados FROM ( SELECT DEPARTAMENTO, COUNT(CODIGO) AS cantidad_empleados FROM empleado empl GROUP BY empl.DEPARTAMENTO ) temporal; -- sin el as, el alias simplemente se escribe directo Output: DEPARTAMENTO |CANTIDAD_EMPLEADOS| --------------------------|------------------| Relaciones con los medios | 11| Investigaci\u00f3n y desarrollo| 7| N\u00f3minas | 7| Relaciones p\u00fablicas | 5| Finanzas | 7| Atenci\u00f3n al cliente | 6| Soporte t\u00e9cnico | 10| Contabilidad | 3| Recursos humanos | 5| Gesti\u00f3n de activos | 4| Departamento legal | 9| Gesti\u00f3n de la calidad | 7| Publicidad | 9| Ventas y Mercadot\u00e9cnia | 10| Vemos como una consulta se transforma en una tabla, entonces luego de agrupar, podemos usando el resultado, filtrar por la columna departamento , que al ser una columna calculada, no pod\u00edamos acceder con un where count()... , entonces por ahora no tenemos otra alternativa que usar el resultado y filtrarlo despu\u00e9s en otra consulta. SELECT temporal.departamento, temporal.cantidad_empleados FROM ( SELECT DEPARTAMENTO, COUNT(CODIGO) AS cantidad_empleados FROM empleado empl GROUP BY empl.DEPARTAMENTO ) temporal -- sin el as, el alias simplemente se escribe directo -- aplicamos este filtro, que se realiza con el resultado de -- del calculo del conteo por departamento. WHERE cantidad_empleados > 7; Vemos que se aplica el filtro al campo calculado CANTIDAD_EMPLEADOS Output: DEPARTAMENTO |CANTIDAD_EMPLEADOS| -------------------------|------------------| Relaciones con los medios| 11| Soporte t\u00e9cnico | 10| Departamento legal | 9| Publicidad | 9| Ventas y Mercadot\u00e9cnia | 10| Esto se realiza de esta forma, ya que no se puede hacer esto... SELECT DEPARTAMENTO, COUNT(CODIGO) AS cantidad_empleados FROM empleado empl WHERE cantidad_empleados > 7 GROUP BY empl.DEPARTAMENTO; tampoco esto SELECT DEPARTAMENTO, COUNT(CODIGO) AS cantidad_empleados FROM empleado empl WHERE COUNT(CODIGO) > 7 GROUP BY empl.DEPARTAMENTO; Pero existe una instrucci\u00f3n de filtro de resultados calculados HAVING , y su utilizaci\u00f3n es precisamente realizar filtros de columnas resultados de c\u00e1lculos como la suma, promedio u otra similar con resultado de una operaci\u00f3n con los datos de dicha columna. Tenemos solamente que observar cuando c\u00f3digo nos ahorra si la utilizamos. SELECT DEPARTAMENTO, COUNT(CODIGO) AS cantidad_empleados FROM empleado empl GROUP BY empl.DEPARTAMENTO HAVING COUNT(CODIGO) > 7; Output: DEPARTAMENTO |CANTIDAD_EMPLEADOS| -------------------------|------------------| Relaciones con los medios| 11| Soporte t\u00e9cnico | 10| Departamento legal | 9| Publicidad | 9| Ventas y Mercadot\u00e9cnia | 10|","title":"Agrupar resultados."},{"location":"basededatos/ddldcl/ejemplosdeunatabla/#relacion-con-tabla","text":"Podemos gracias al atributo CODIGO_JEFE , obtener la cantidad de empleados a cargo que posee cada jefe. Podemos entonces nuevamente hacer lo siguiente: SELECT CODIGO_JEFE, COUNT(codigo) cantidad_empleados FROM EMPLEADO GROUP BY CODIGO_JEFE; Los nombres son variados por lo tanto, no podemos usar el nombre en la agrupaci\u00f3n. La estrategia es contar elementos y agruparlos por una columna que sabemos se repite . En este caso el c\u00f3digo del jefe van del 1 al 10, y se repiten aleatoriamente en los 100 registro y los que se vayan agregando despu\u00e9s. Por lo que los agrupamos por este campo, obteniendo lo siguiente: Output: CODIGO_JEFE|CANTIDAD_EMPLEADOS| -----------|------------------| 1| 12| 6| 8| 2| 10| 4| 10| 5| 11| 8| 11| 3| 10| 7| 4| 9| 13| 10| 11| Luego podemos aplicar usa soluci\u00f3n basada en sub consultas, las que no son recomendables a menos que sea la \u00fanica soluci\u00f3n que podemos realizar. SELECT CODIGO_JEFE, ( SELECT NOMBRE FROM EMPLEADO e2 WHERE e2.CODIGO = temp.CODIGO_JEFE ) AS nombre, cantidad_empleados FROM ( SELECT CODIGO_JEFE, COUNT(codigo) cantidad_empleados FROM EMPLEADO GROUP BY CODIGO_JEFE ) temp; Obteniendo como resultado Output: CODIGO_JEFE|NOMBRE |CANTIDAD_EMPLEADOS| -----------|--------|------------------| 1|Igor | 12| 6|Shad | 8| 2|Cedric | 10| 4|Christen| 10| 5|Xyla | 11| 8|Patricia| 11| 3|Upton | 10| 7|Darryl | 4| 9|John | 13| 10|Edward | 11| Observamos lo siguiente en el problema: La tabla contiene informaci\u00f3n que pertenece a la propia tabla, es decir que se encuentra relacionada con ella misma. Cuando esto ocurre, es normal requerir en una sola consulta (no anidada), la informaci\u00f3n del objeto en cuesti\u00f3n y de sus relaciones. Cuando tengamos a dos o m\u00e1s tablas relacionadas, podemos obtener datos al instante, fusionando la informaci\u00f3n en varios conjuntos, mediante un filtro. La instrucci\u00f3n inner join llena la informaci\u00f3n de varias tablas secuencialmente dependiendo de lo que queremos filtrar. Los pasos a seguir en la siguiente consulta son: Llenar la tabla EMPLEADO a con las mismas condiciones que hemos visto hasta ahora. Agregamos una fusi\u00f3n de datos con una tabla relacionada, en este caso la misma tabla EMPLEADO b ; pero con otro alias. Indicamos que esta tabla se llenar\u00e1, siempre y cuando el CODIGO_JEFE de la tabla de resultados (conteo agrupado) sea igual al CODIGO de la tabla de fusi\u00f3n. Por lo tanto EMPLEADO b , se llenara solo en los casos que se cumpla a.CODIGO_JEFE = b.CODIGO . Hay que tomar cada inner join como una lista nueva con informaci\u00f3n, obtenida con la condici\u00f3n seguida de ON , (pueden continuar con and ). Dentro del inner join , lo que se filtre por fuera, es decir en el where apunta a lo que venga directamente a EMPLEADO a , es decir a lo que venga despu\u00e9s del From . Lo que venga despu\u00e9s del inner join corresponde al filtro de la tabla EMPLEADO b . Con inner join el resultado final depende finalmente de la intersecci\u00f3n de las listas llenas de datos ( EMPLEADO a y EMPLEADO b ). Ambas cumplen con todas las condiciones. Es decir que el resultado final ser\u00e1 una intersecci\u00f3n entre los datos INNER JOIN EMPLEADO b ON a.CODIGO_JEFE = b.CODIGO . Si cuando se est\u00e1n llenando las dos listas con informaci\u00f3n, no se cumple con lo expresado en ON a.CODIGO_JEFE = b.CODIGO , no se llena ni a ni b , quitando la fila de informaci\u00f3n que no cumple pasando a la siguiente iteraci\u00f3n. Si se quiere que no se filtren los datos de la tabla 1, se realiza un left join , si no se desea filtrar los resultados de la segunda tabla aunque no existan coincidencias en el on , se realiza un right join , aunque lo usualmente utilizado es solamente inner join . SELECT b.CODIGO, b.NOMBRE, COUNT(a.codigo) cantidad_empleados FROM EMPLEADO a INNER JOIN EMPLEADO b ON a.CODIGO_JEFE = b.CODIGO GROUP BY b.CODIGO, b.NOMBRE; Output: CODIGO|NOMBRE |CANTIDAD_EMPLEADOS| ------|--------|------------------| 8|Patricia| 11| 9|John | 13| 1|Igor | 12| 2|Cedric | 10| 7|Darryl | 4| 3|Upton | 10| 4|Christen| 10| 5|Xyla | 11| 6|Shad | 8| 10|Edward | 11| Queda como ejercicio realizar la lista de los tres jefes con m\u00e1s empleados, ordenados de mayor a menor.","title":"Relaci\u00f3n con tabla."},{"location":"basededatos/ddldcl/variastablas/","text":"Ejemplos con varias tablas. Se explican las consultas y se muestran los ddl , pero el camino a seguir para poder llegar al modelo, se encuentra detallado en las lecturas. No son tratados temas de modelado ni de niveles de normalidad. Definici\u00f3n de la estructura. Problema: Se necesita crear una base de datos que pueda contener la siguiente estructura: Alumnos: Nombre, apellido, direcci\u00f3n (calle, ciudad y regi\u00f3n), Curso: Descripci\u00f3n. Desaf\u00edos: Detalle, datos del alumno, datos del curso, calificaci\u00f3n y fecha. Listamos las tablas involucradas en la soluci\u00f3n. Modelo de datos El siguiente modelo, representa la estructura del modelo de la base de datos a utilizar. DDL. (Estructura) A continuaci\u00f3n la definici\u00f3n de cada una de las tablas que componen la estructura del modelo de datos. Se ejecuta sin problemas, si es que poseen los permisos correspondientes. En el caso que se deseen eliminar estas tablas, hay que ejecutar el drop en orden inverso, para no tener problemas con las restricciones. CREATE TABLE direccion ( id NUMBER NOT NULL, calle VARCHAR2(200), ciudad VARCHAR2(200), region VARCHAR2(200), CONSTRAINT pk_direccion PRIMARY KEY (id) ); CREATE TABLE alumno ( id NUMBER NOT NULL, rut VARCHAR2(200), nombre VARCHAR2(200), apellido VARCHAR2(200), correo VARCHAR2(200), id_direccion NUMBER NOT NULL, CONSTRAINT pk_alumno -- restricci\u00f3n de clave primaria PRIMARY KEY (id), CONSTRAINT fk_direccion_alumno -- restricci\u00f3n de clave for\u00e1nea FOREIGN KEY (id_direccion) REFERENCES direccion(id) ); CREATE TABLE curso ( id NUMBER NOT NULL, descripcion VARCHAR2(200), CONSTRAINT pk_curso PRIMARY KEY (id) ); CREATE TABLE desafio ( id_curso NUMBER NOT NULL, id_alumno NUMBER NOT NULL, calificacion NUMBER, detalle VARCHAR2(200), fecha DATE, CONSTRAINT pk_desafio PRIMARY KEY (id_curso, id_alumno), CONSTRAINT fk_curso_desafio FOREIGN KEY (id_curso) REFERENCES curso(id), CONSTRAINT fk_alumno_desafio FOREIGN KEY (id_alumno) REFERENCES alumno(id) ); COMMIT; Datos a ingresar Ates de poder ejecutar el siguiente script \u001d, debemos tener la estructura lista, en caso contrario, no se podr\u00e1n ingresar datos, a una estructura que se encuentre incompleta. -- direcci\u00f3n INSERT INTO direccion (id,calle,ciudad,region) VALUES (1,'4208 Non, C/','Parral','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (2,'Apartado n\u00fam.: 852, 6101 Neque C.','Penco','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (3,'Apartado n\u00fam.: 733, 3089 Malesuada Avda.','Huechuraba','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (4,'Apdo.:421-6141 At Avda.','Recoleta','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (5,'1449 Odio. ','Retiro','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (6,'8574 Cursus Ctra.','Estaci\u00f3n Central','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (7,'Apartado n\u00fam.: 552, 3282 Non, C.','Pedro Aguirre Cerda','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (8,'Apartado n\u00fam.: 816, 3374 Ac Ctra.','Pozo Almonte','I'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (9,'3394 Risus, C.','San Miguel','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (10,'5497 Vestibulum Avenida','La Reina','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (11,'8224 Ante. C.','Pencahue','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (12,'Apdo.:518-3987 Aliquam Avenida','Los Vilos','IV'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (13,'268-5320 Cras Calle','Santiago','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (14,'Apdo.:745-8483 Dui. ','La Cruz','Valpara\u00edso'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (15,'Apdo.:917-8861 A Av.','Los Andes','Valpara\u00edso'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (16,'9630 Purus, Avenida','Cartagena','Valpara\u00edso'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (17,'9281 Nibh C/','El Bosque','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (18,'Apartado n\u00fam.: 151, 4092 Sollicitudin Avda.','Maip\u00fa','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (19,'182-7520 Libero ','Melipilla','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (20,'Apartado n\u00fam.: 788, 9025 Nec Ctra.','Casablanca','Valpara\u00edso'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (21,'Apartado n\u00fam.: 947, 8078 Ipsum Carretera','Pudahuel','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (22,'518 Pellentesque Ctra.','Graneros','O''Higgins'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (23,'589-2499 Ante, Avenida','R\u00edo Bueno','Los R\u00edos'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (24,'707-5601 Dictum ','Talagante','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (25,'Apartado n\u00fam.: 865, 8492 Arcu. C.','La Ligua','V'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (26,'Apartado n\u00fam.: 505, 825 Praesent Ctra.','Puc\u00f3n','IX'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (27,'5706 Ornare. Carretera','Graneros','VI'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (28,'1666 A ','Quinta de Tilcoco','O''Higgins'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (29,'772-7537 Nisl Avenida','Teodoro Schmidt','IX'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (30,'1692 Ac Calle','Rauco','VII'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (31,'622-7351 Velit Ctra.','Pirque','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (32,'127-7239 Eu Av.','San Ram\u00f3n','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (33,'319-500 Mauris Calle','San Pedro de la Paz','VII'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (34,'Apartado n\u00fam.: 113, 1991 Mus. Avda.','Victoria','Araucan\u00eda'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (35,'637-1656 Eleifend Ctra.','Teno','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (36,'4787 Nunc Av.','Calera de Tango','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (37,'Apartado n\u00fam.: 191, 8386 Morbi Avda.','Independencia','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (38,'Apartado n\u00fam.: 845, 4811 Felis. Calle','Calera de Tango','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (39,'Apdo.:511-4529 Posuere, ','Quilpu\u00e9','V'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (40,'403-1939 Sed Calle','Recoleta','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (41,'Apartado n\u00fam.: 316, 9394 Interdum. ','Tierra Amarilla','Atacama'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (42,'Apartado n\u00fam.: 262, 2350 Enim ','Quell\u00f3n','X'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (43,'2985 Orci Ctra.','La Granja','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (44,'Apdo.:979-9760 Feugiat C/','Lota','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (45,'Apdo.:267-5083 Phasellus Avenida','Antuco','VII'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (46,'219-8706 Vulputate, Avda.','Puc\u00f3n','Araucan\u00eda'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (47,'328-6045 Interdum. C.','Victoria','IX'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (48,'866 Quis, Calle','Huechuraba','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (49,'3479 Sem Carretera','Illapel','Coquimbo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (50,'958-1336 Tempor Calle','Curacav\u00ed','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (51,'Apartado n\u00fam.: 969, 1905 Consectetuer ','La Granja','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (52,'717-3309 Neque. Avenida','Puerto Octay','Los Lagos'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (53,'Apartado n\u00fam.: 933, 6848 Lorem C/','Coquimbo','Coquimbo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (54,'Apartado n\u00fam.: 414, 9660 Aliquam ','Vi\u00f1a del Mar','V'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (55,'378-6190 Porttitor ','Melipilla','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (56,'344-9821 Elementum C.','Padre Hurtado','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (57,'Apdo.:343-838 Vivamus C/','Portezuelo','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (58,'Apdo.:243-4069 Odio. C.','Palmilla','O''Higgins'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (59,'Apdo.:158-6909 Et C.','La Cruz','V'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (60,'6330 Massa ','Renca','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (61,'6533 Iaculis ','La Pintana','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (62,'Apdo.:384-2455 Vivamus Avda.','R\u00edo Claro','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (63,'Apartado n\u00fam.: 203, 6833 Ut Avenida','San Vicente','O''Higgins'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (64,'Apdo.:154-1638 Nam ','Recoleta','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (65,'2726 Rutrum, Ctra.','Punta Arenas','XII'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (66,'Apartado n\u00fam.: 663, 7268 Lobortis Avenida','Puente Alto','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (67,'Apdo.:829-1018 A, Ctra.','Macul','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (68,'Apdo.:418-4650 Interdum Avenida','Isla de Pascua','V'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (69,'472-2823 Eget ','Castro','Los Lagos'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (70,'Apartado n\u00fam.: 968, 4015 Nec C.','Valdivia','XIV'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (71,'Apartado n\u00fam.: 342, 662 Sem Carretera','San Jos\u00e9 de Maipo','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (72,'Apartado n\u00fam.: 891, 1449 Risus. Av.','Bulnes','VII'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (73,'Apdo.:992-3562 Laoreet Carretera','Diego de Almagro','Atacama'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (74,'Apdo.:819-8127 Risus Carretera','Contulmo','VII'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (75,'Apartado n\u00fam.: 132, 2243 Amet, C/','Pinto','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (76,'Apdo.:820-9680 A, Av.','Independencia','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (77,'Apdo.:935-6209 Hendrerit C/','Macul','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (78,'Apartado n\u00fam.: 149, 986 Vel Av.','Florida','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (79,'Apartado n\u00fam.: 123, 6117 Nunc. Calle','Andacollo','IV'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (80,'4464 Nibh Avda.','Paine','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (81,'635-3787 Class Ctra.','Lo Prado','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (82,'3891 Et Av.','Mulch\u00e9n','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (83,'Apdo.:995-6696 Sapien. Av.','Canela','Coquimbo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (84,'6565 Quis Calle','Lo Barnechea','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (85,'Apartado n\u00fam.: 281, 138 Sit Carretera','Tortel','Ais\u00e9n'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (86,'2869 Fames Avenida','Gorbea','Araucan\u00eda'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (87,'6782 Massa. Carretera','Tucapel','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (88,'Apdo.:763-7725 Non Carretera','Empedrado','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (89,'9667 Auctor ','Independencia','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (90,'Apartado n\u00fam.: 144, 8231 Diam. Carretera','Mejillones','II'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (91,'Apartado n\u00fam.: 831, 6549 Augue Calle','San Bernardo','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (92,'Apartado n\u00fam.: 225, 6888 Mauris ','Chanco','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (93,'Apdo.:951-8460 Aliquam Avenida','La Granja','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (94,'Apdo.:737-6562 Nunc Calle','Curepto','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (95,'Apdo.:364-1897 Nunc Calle','Panguipulli','Los R\u00edos'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (96,'Apdo.:186-6696 Ut Av.','Huechuraba','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (97,'1267 Lobortis Carretera','Angol','Araucan\u00eda'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (98,'Apdo.:830-8620 Massa. ','Coinco','O''Higgins'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (99,'9525 Vestibulum Calle','San Javier','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (100,'Apartado n\u00fam.: 957, 2756 Bibendum Avenida','Las Condes','RM'); -- alumnos INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (1,'15067082-9','John','Petersen','bibendum.Donec@ligulaelitpretium.co.uk',1); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (2,'29478235-4','Josephine','Lawson','neque.et@ad.co.uk',2); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (3,'32358344-7','Jason','Lane','pharetra@non.ca',3); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (4,'38442638-7','Shannon','Herrera','dolor@est.net',4); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (5,'45810119-1','Hilel','Shields','dictum.Proin@nascetur.net',5); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (6,'21543451-6','Karly','Bush','elit.pharetra.ut@Phasellus.org',6); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (7,'27421507-0','Channing','Moran','Fusce.diam.nunc@ac.net',7); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (8,'10323649-5','Gretchen','Snow','dapibus.ligula@veliteget.ca',8); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (9,'38923383-8','Joy','Hays','Donec.egestas.Duis@Phasellus.ca',9); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (10,'42066018-9','Kaitlin','Mosley','enim@pellentesquetellus.net',10); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (11,'29078376-3','Inga','Pope','ullamcorper@duinec.net',11); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (12,'32170529-4','Kelly','Weeks','et.magnis.dis@nec.net',12); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (13,'12906934-1','Abigail','Robles','porttitor.scelerisque@sed.co.uk',13); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (14,'50738344-0','Jordan','Tucker','arcu.imperdiet.ullamcorper@risusNulla.org',14); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (15,'24257003-0','Berk','Hendrix','Proin@amet.com',15); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (16,'23409721-0','Sacha','Bentley','massa.Integer.vitae@cursusdiamat.edu',16); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (17,'35776801-2','Lavinia','Mcmillan','mauris.Integer@Maurisvestibulumneque.net',17); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (18,'17606503-6','Madonna','Sawyer','sodales@iderat.edu',18); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (19,'6147056-5','Ebony','Hays','Mauris.vel@consectetuer.com',19); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (20,'9310089-1','John','Ramos','Sed.auctor.odio@necanteblandit.com',20); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (21,'24172970-2','Marsden','Buck','volutpat.Nulla.facilisis@nonummyFusce.com',21); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (22,'49143177-6','Montana','Mcintyre','arcu.Aliquam.ultrices@lacusvestibulum.ca',22); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (23,'44552711-4','Ramona','Deleon','fermentum@estMauriseu.com',23); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (24,'40432802-6','Dai','Hull','neque@aliquetvel.org',24); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (25,'21121668-9','Hyacinth','Chandler','fringilla.ornare@nullamagna.org',25); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (26,'9469491-4','Wilma','Barrett','nulla.at@scelerisquenequesed.org',26); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (27,'30937922-5','Laith','Munoz','semper@dui.ca',27); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (28,'45510920-5','Sylvia','Stein','nisl.elementum@ornareegestas.net',28); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (29,'44982892-5','Karyn','Ortega','Proin@vulputatelacus.co.uk',29); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (30,'42862897-7','Guy','Knight','egestas.Aliquam@loremeumetus.co.uk',30); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (31,'34731931-7','Dakota','Aguirre','Nunc@Vestibulum.com',31); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (32,'22930220-5','Kylie','Lawson','faucibus@nibh.net',32); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (33,'18549570-1','Porter','Rocha','Sed.eu@non.org',33); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (34,'30970860-1','Cruz','Glass','risus.quis@Morbi.co.uk',34); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (35,'18530285-7','Idola','Lindsay','Fusce.aliquet.magna@Phasellus.net',35); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (36,'16125231-K','Upton','Tanner','amet.nulla.Donec@Integereu.ca',36); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (37,'26309692-4','Elmo','Henry','ut.nisi.a@nuncestmollis.edu',37); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (38,'10895354-3','Kyla','Carroll','nascetur.ridiculus.mus@necleo.edu',38); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (39,'34534586-8','Medge','Carney','libero.dui@Uttinciduntvehicula.ca',39); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (40,'29322036-0','Kibo','Booth','dui@nullaDonec.net',40); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (41,'11755964-5','Stone','Bowen','venenatis@idmagna.com',41); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (42,'43898568-9','Steel','Nixon','enim.Etiam@eget.org',42); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (43,'26668296-4','Ria','Nash','enim.Sed.nulla@porttitortellusnon.com',43); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (44,'34999646-4','Benedict','Allen','et.rutrum@justo.ca',44); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (45,'44491627-3','Myra','Sims','Suspendisse.tristique.neque@Donec.co.uk',45); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (46,'21236617-K','Montana','Campos','nunc.Quisque@dolorDonecfringilla.edu',46); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (47,'36433164-9','Lev','Britt','molestie.arcu@aliquet.co.uk',47); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (48,'15754759-3','Kenyon','English','vel@est.net',48); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (49,'10462345-K','Kareem','Jimenez','accumsan@lectusquismassa.edu',49); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (50,'24895634-8','Elmo','Medina','porttitor@dolorelitpellentesque.net',50); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (51,'10649980-2','Deacon','Calderon','nulla@vitae.com',51); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (52,'47860659-1','Burke','Mcbride','pharetra@massaVestibulumaccumsan.edu',52); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (53,'49646911-9','Nissim','Justice','Fusce.dolor@sed.com',53); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (54,'48557043-8','Isaiah','Oconnor','massa.Suspendisse@bibendumullamcorper.ca',54); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (55,'11007607-K','Alden','Knox','tincidunt@acmattis.edu',55); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (56,'40434836-1','Jasmine','Stanton','et.netus@eutempor.edu',56); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (57,'33234353-K','Kamal','Logan','Quisque.nonummy@tacitisociosqu.ca',57); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (58,'24940802-6','Carlos','Frazier','Ut.tincidunt@loremluctus.ca',58); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (59,'47845945-9','Deacon','Blanchard','amet.risus@Aeneanegetmagna.edu',59); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (60,'34669263-4','Liberty','Bender','Donec.at@etnetus.co.uk',60); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (61,'5323035-0','Rhonda','Henderson','vulputate.eu@orci.edu',61); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (62,'27385603-K','Rafael','Patton','blandit.at@Nullamvitaediam.edu',62); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (63,'43717025-8','Ray','Burton','dis@Nunclectuspede.co.uk',63); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (64,'26009259-6','Shelly','Osborne','augue@neque.net',64); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (65,'43842576-4','Valentine','Rosa','Donec.tempus@sitametorci.org',65); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (66,'41601648-8','Bevis','Cooke','In@adipiscinglacusUt.co.uk',66); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (67,'23559642-3','Orlando','Chapman','suscipit@quam.ca',67); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (68,'6176958-7','Kristen','Mays','adipiscing.elit.Curabitur@variusNam.org',68); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (69,'17484266-3','Asher','Fry','quis.pede@dui.ca',69); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (70,'48849457-0','Hedwig','Welch','orci.Donec.nibh@etmalesuada.org',70); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (71,'45258091-8','Constance','Whitley','fringilla.euismod.enim@Donecsollicitudinadipiscing.edu',71); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (72,'17117599-2','Cassandra','Griffith','a.felis.ullamcorper@utodio.com',72); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (73,'17246760-1','Ali','Reese','vehicula.Pellentesque@Proindolor.edu',73); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (74,'34655619-6','Samson','Beasley','sollicitudin.adipiscing.ligula@pedeac.co.uk',74); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (75,'26663711-K','Yetta','Hopkins','Curabitur.massa.Vestibulum@mauris.com',75); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (76,'5050341-0','Germane','Estes','Integer@tristique.ca',76); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (77,'33653325-2','Delilah','Anderson','in.dolor.Fusce@nullaat.com',77); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (78,'43694492-6','Latifah','Dodson','in.consequat.enim@Sedidrisus.co.uk',78); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (79,'20520886-0','Talon','Carson','cursus.in@vitae.org',79); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (80,'28448737-0','Erasmus','Knox','neque.et@nonummyultriciesornare.ca',80); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (81,'28174882-3','Ocean','Freeman','velit@elitsed.ca',81); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (82,'32092787-0','Dominic','Mcdaniel','ac.eleifend@habitantmorbitristique.org',82); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (83,'29730560-3','Jacqueline','Fitzgerald','scelerisque@necante.co.uk',83); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (84,'36000452-K','Stone','Watson','sagittis.placerat.Cras@aliquamarcuAliquam.com',84); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (85,'38927252-3','Charles','Frost','natoque.penatibus@ultricessitamet.org',85); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (86,'26223237-9','Elmo','Forbes','elit@posuere.com',86); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (87,'20080071-0','Eric','Holmes','Nunc@diamSed.org',87); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (88,'33833791-4','Keith','Golden','risus.quis@at.ca',88); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (89,'11926278-K','Zorita','Hart','dignissim.lacus@semperrutrumFusce.ca',89); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (90,'49831596-8','Leonard','Boone','Nulla@molestietellusAenean.edu',90); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (91,'6969075-0','Yardley','Mccarthy','ut@facilisisfacilisismagna.org',91); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (92,'21524393-1','Jordan','Baker','venenatis@fermentummetusAenean.com',92); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (93,'15859785-3','Alice','Porter','sit.amet@erosNamconsequat.co.uk',93); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (94,'7755698-2','Magee','Rios','turpis.egestas@loremac.edu',94); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (95,'8570254-8','Rigel','Burch','rhoncus@amet.com',95); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (96,'32918740-3','Harper','Clarke','non.arcu@Phaselluslibero.com',96); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (97,'35577644-1','Oleg','Ayers','Morbi.accumsan.laoreet@nisl.org',97); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (98,'6254465-1','Lev','Albert','eu@et.edu',98); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (99,'37297864-3','Nichole','Rivas','sit.amet.consectetuer@Craseu.edu',99); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (100,'31096614-2','Cade','Miranda','aliquet@viverra.edu',100); -- Curso INSERT INTO curso (id,descripcion) VALUES (1,'Java full stack'); INSERT INTO curso (id,descripcion) VALUES (2,'Node js'); INSERT INTO curso (id,descripcion) VALUES (3,'Gitflow'); INSERT INTO curso (id,descripcion) VALUES (4,'Android'); INSERT INTO curso (id,descripcion) VALUES (5,'Django'); INSERT INTO curso (id,descripcion) VALUES (6,'Dise\u00f1o UX/UI'); INSERT INTO curso (id,descripcion) VALUES (7,'Python'); INSERT INTO curso (id,descripcion) VALUES (8,'Vue js'); INSERT INTO curso (id,descripcion) VALUES (9,'React js'); INSERT INTO curso (id,descripcion) VALUES (10,'Docker'); -- Desafio INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (7,73,64,'mauris',TO_DATE('2020/01/01', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,13,48,'magna. Ut',TO_DATE('2020/06/15', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,15,56,'lacus pede',TO_DATE('2020/11/11', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,25,74,'ullamcorper, velit in',TO_DATE('2020/07/08', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,19,78,'mattis ornare, lectus',TO_DATE('2020/03/22', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,44,71,'semper',TO_DATE('2020/01/01', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,31,94,'dolor.',TO_DATE('2020/03/21', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,56,71,'imperdiet nec,',TO_DATE('2020/03/29', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,57,66,'Proin velit. Sed',TO_DATE('2020/03/23', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,67,72,'accumsan',TO_DATE('2020/09/09', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,12,90,'adipiscing',TO_DATE('2020/04/04', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,63,100,'ipsum sodales purus,',TO_DATE('2020/10/10', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,93,47,'risus.',TO_DATE('2020/12/16', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (7,40,51,'sem egestas blandit.',TO_DATE('2020/03/23', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,06,52,'lorem vitae odio',TO_DATE('2020/02/28', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,84,32,'eget,',TO_DATE('2020/03/03', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,52,43,'sapien, gravida',TO_DATE('2020/03/21', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,21,75,'tortor.',TO_DATE('2020/12/12', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,40,73,'turpis egestas.',TO_DATE('2020/04/30', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,80,83,'placerat',TO_DATE('2020/03/20', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,24,69,'velit',TO_DATE('2020/10/10', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,1,91,'enim non nisi.',TO_DATE('2020/01/01', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,18,35,'erat neque non',TO_DATE('2020/03/28', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,9,68,'vitae nibh.',TO_DATE('2020/10/10', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,79,53,'lectus, a sollicitudin',TO_DATE('2020/04/30', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,23,60,'velit dui, semper',TO_DATE('2020/05/05', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,23,80,'et arcu imperdiet',TO_DATE('2020/07/19', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,73,77,'litora',TO_DATE('2020/11/11', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,17,85,'dolor elit, pellentesque',TO_DATE('2020/04/04', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (7,61,61,'elit,',TO_DATE('2020/05/05', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,74,45,'velit. Pellentesque ultricies',TO_DATE('2020/06/29', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,27,52,'quis',TO_DATE('2020/09/19', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,87,56,'eros turpis',TO_DATE('2020/04/04', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,21,97,'Aliquam adipiscing lobortis',TO_DATE('2020/09/09', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,32,54,'ipsum porta',TO_DATE('2020/09/19', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,68,40,'eu, euismod ac,',TO_DATE('2020/10/10', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,32,34,'mauris a nunc.',TO_DATE('2020/04/04', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,23,88,'massa.',TO_DATE('2020/01/31', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,26,100,'et',TO_DATE('2020/03/23', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,51,96,'rutrum. Fusce dolor',TO_DATE('2020/11/11', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,19,85,'blandit mattis.',TO_DATE('2020/08/08', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,25,76,'eget massa. Suspendisse',TO_DATE('2020/02/27', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,72,73,'sodales',TO_DATE('2020/05/05', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,60,43,'in consectetuer',TO_DATE('2020/04/14', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,19,40,'In tincidunt congue',TO_DATE('2020/07/07', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,30,30,'turpis egestas.',TO_DATE('2020/03/13', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,49,59,'nonummy ac, feugiat',TO_DATE('2020/03/03', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,12,45,'Phasellus at',TO_DATE('2020/01/31', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,81,36,'risus',TO_DATE('2020/08/08', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,38,82,'Mauris molestie pharetra',TO_DATE('2020/02/02', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,61,93,'mollis.',TO_DATE('2020/08/18', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,45,90,'justo',TO_DATE('2020/03/25', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,70,48,'Phasellus ornare.',TO_DATE('2020/05/05', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,35,84,'semper erat, in',TO_DATE('2020/03/27', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,13,74,'sed',TO_DATE('2020/09/09', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,11,32,'adipiscing. Mauris',TO_DATE('2020/03/24', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,12,78,'nisi. Aenean',TO_DATE('2020/03/24', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,57,73,'et netus',TO_DATE('2020/01/01', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,7,50,'Proin mi.',TO_DATE('2020/07/07', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,45,30,'elementum at,',TO_DATE('2020/01/31', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,44,30,'feugiat nec, diam.',TO_DATE('2020/07/07', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,15,37,'vulputate ullamcorper magna.',TO_DATE('2020/03/29', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,87,59,'Morbi quis urna.',TO_DATE('2020/02/02', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,87,39,'lectus',TO_DATE('2020/07/07', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,39,99,'odio semper',TO_DATE('2020/03/25', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,30,50,'risus quis',TO_DATE('2020/08/18', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,25,91,'eu sem.',TO_DATE('2020/05/15', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,55,44,'sem. Pellentesque',TO_DATE('2020/08/08', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,39,44,'Quisque',TO_DATE('2020/03/24', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,100,89,'eget, ipsum. Donec',TO_DATE('2020/06/13', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,56,90,'Donec',TO_DATE('2020/05/15', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,24,99,'cursus vestibulum.',TO_DATE('2020/03/20', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,45,74,'elit sed',TO_DATE('2020/04/14', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,95,54,'cursus non, egestas',TO_DATE('2020/05/05', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,66,99,'pulvinar',TO_DATE('2020/03/27', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,77,56,'Sed',TO_DATE('2020/03/24', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,32,63,'in molestie',TO_DATE('2020/07/06', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,5,92,'massa. Mauris vestibulum,',TO_DATE('2020/12/18', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,38,80,'ut, nulla. Cras',TO_DATE('2020/06/06', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,23,70,'tincidunt',TO_DATE('2020/09/09', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (7,14,80,'nascetur ridiculus',TO_DATE('2020/03/27', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,44,99,'odio',TO_DATE('2020/09/09', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,53,34,'consectetuer,',TO_DATE('2020/03/23', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,7,49,'molestie orci tincidunt',TO_DATE('2020/03/22', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,63,90,'Quisque nonummy ipsum',TO_DATE('2020/05/05', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,33,59,'lorem',TO_DATE('2020/12/15', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,50,86,'blandit at,',TO_DATE('2020/07/07', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,99,36,'vitae, sodales',TO_DATE('2020/05/30', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,2,42,'ac,',TO_DATE('2020/03/03', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,54,58,'magnis',TO_DATE('2020/07/07', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,66,74,'velit',TO_DATE('2020/04/04', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,18,71,'Aliquam',TO_DATE('2020/08/08', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,92,36,'eget ipsum.',TO_DATE('2020/09/09', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,79,51,'sit amet risus.',TO_DATE('2020/12/13', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,20,48,'lorem eu metus.',TO_DATE('2020/03/29', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,1,31,'eu neque',TO_DATE('2020/03/21', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,5,93,'pede, nonummy',TO_DATE('2020/12/16', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,67,37,'et magnis dis',TO_DATE('2020/03/21', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,53,30,'arcu.',TO_DATE('2020/03/29', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,31,79,'Cras interdum.',TO_DATE('2020/11/16', 'YYYY-MM-DD')); Comprobar datos ingresados. Tabla: Direcci\u00f3n. SELECT id, calle, ciudad, region FROM direccion; Recordar que podemos usar alias, para poder identificar la tabla, no es muy \u00fatil en esta situaci\u00f3n de una tabla; pero cuando est\u00e1n m\u00e1s tablas en juego, habr\u00e1 una gran diferencia entre usar un alias o no. La siguiente consulta produce el mismo resultado. SELECT d.id, d.calle, d.ciudad, d.region FROM direccion d; Output: ID |CALLE |CIUDAD |REGION | ---|-------------------------------------------|-------------------|-------------------------| 1|4208 Non, C/ |Parral |Maule | 2|Apartado n\u00fam.: 852, 6101 Neque C. |Penco |Biob\u00edo | 3|Apartado n\u00fam.: 733, 3089 Malesuada Avda. |Huechuraba |Metropolitana de Santiago| 4|Apdo.:421-6141 At Avda. |Recoleta |Metropolitana de Santiago| 5|1449 Odio. |Retiro |Maule | ... 95|Apdo.:364-1897 Nunc Calle |Panguipulli |Los R\u00edos | 96|Apdo.:186-6696 Ut Av. |Huechuraba |Metropolitana de Santiago| 97|1267 Lobortis Carretera |Angol |Araucan\u00eda | 98|Apdo.:830-8620 Massa. |Coinco |O'Higgins | 99|9525 Vestibulum Calle |San Javier |Maule | 100|Apartado n\u00fam.: 957, 2756 Bibendum Avenida |Las Condes |RM | Tabla: Alumno. SELECT a.id, a.rut, a.nombre, a.apellido, a.correo, a.id_direccion FROM alumno a; Output: ID |RUT |NOMBRE |APELLIDO |CORREO |ID_DIRECCION| ---|----------|----------|----------|------------------------------------------------------|------------| 1|15067082-9|John |Petersen |bibendum.Donec@ligulaelitpretium.co.uk | 1| 2|29478235-4|Josephine |Lawson |neque.et@ad.co.uk | 2| 3|32358344-7|Jason |Lane |pharetra@non.ca | 3| 4|38442638-7|Shannon |Herrera |dolor@est.net | 4| ... 97|35577644-1|Oleg |Ayers |Morbi.accumsan.laoreet@nisl.org | 97| 98|6254465-1 |Lev |Albert |eu@et.edu | 98| 99|37297864-3|Nichole |Rivas |sit.amet.consectetuer@Craseu.edu | 99| 100|31096614-2|Cade |Miranda |aliquet@viverra.edu | 100| Tabla: Curso. SELECT c.id, c.descripcion FROM curso c; Output: ID|DESCRIPCION | --|---------------| 1|Java full stack| 2|Node js | 3|Gitflow | 4|Android | 5|Django | 6|Dise\u00f1o UX/UI | 7|Python | 8|Vue js | 9|React js | 10|Docker | Tabla: Desaf\u00edo. SELECT d2.id_curso, d2.id_alumno, d2.calificacion, d2.detalle, d2.fecha FROM desafio d2; Output: 100 filas ID_CURSO|ID_ALUMNO|CALIFICACION|DETALLE |FECHA | --------|---------|------------|-----------------------------|-------------------| 7| 73| 64|mauris |2020-01-01 00:00:00| 6| 13| 48|magna. Ut |2020-06-15 00:00:00| 8| 15| 56|lacus pede |2020-11-11 00:00:00| 4| 25| 74|ullamcorper, velit in |2020-07-08 00:00:00| 4| 19| 78|mattis ornare, lectus |2020-03-22 00:00:00| ... 5| 1| 31|eu neque |2020-03-21 00:00:00| 5| 5| 93|pede, nonummy |2020-12-16 00:00:00| 3| 67| 37|et magnis dis |2020-03-21 00:00:00| 6| 53| 30|arcu. |2020-03-29 00:00:00| 8| 31| 79|Cras interdum. |2020-11-16 00:00:00| DCL (Manipulaci\u00f3n) \ud83e\udd4b Antes de comenzar a aplicar todas estas t\u00e9cnicas de b\u00fasqueda, no debemos confundir lo siguiente: \ud83c\udfb1 Cuando ingresamos un dato, lo hacemos a una tabla, secuencialmente. Es decir que no se ingresan datos en varias tablas. \ud83c\udfb1 Lo mismo ocurre para una actualizaci\u00f3n. \ud83c\udfb1 Es por eso que cuando trabajamos con varias tablas, estamos hablando de consultas, sin perjuicio de lo que hagamos justo despu\u00e9s de una consulta a varias tablas, sea un ingreso de informaci\u00f3n; pero nuevamente, este ingreso lo realizar\u00e1 a una sola tabla, que debe contener exactamente los mismos campos que el resultado de la consulta a varias tablas ( select ... insert ). Uso del INNER JOIN Cuando tengamos una relaci\u00f3n entre dos o m\u00e1s tablas, podemos llenar un resultado final, compuesto de una o m\u00e1s tablas. La forma de interceptar la informaci\u00f3n de las tablas, es identificando referencias de una tabla a otra, es decir que si la tabla posee un FOREIGN KEY , podemos aplicar un inner join a esa tabla referenciada utilizando en su filtro on la condici\u00f3n de esta referencia. Ejemplo - Direcciones de alumnos Se necesita saber las direcciones de los alumnos. (nombre y direcci\u00f3n) Debemos saber donde se encuentra esta informaci\u00f3n, es por eso que antes de realizar una buena consulta, hay que saber la informaci\u00f3n que contiene cada tabla de nuestra base de datos. As\u00ed cuando nos pidan informaci\u00f3n que se pueda extraer de los datos con los que disponemos, debemos saber como poder reunir datos de nuestra fuente de datos y a trav\u00e9s de una consulta, convertirla en la informaci\u00f3n que se solicita. Los datos que sirven para esta consulta est\u00e1n en las tablas alumno y direccion , el FOREIGN KEY que los enlaza es id_direccion y referencia al id de la tabla direccion , por lo que este ser\u00e1 el enlace para conectar estas dos tablas. Seleccionamos tres columnas: a.id AS identificador : El id de la tabla alumno , es por eso que se referencia con el alias a , pueden llamar al alias como se estime conveniente, para este ejemplo, dejo el que auto-completa DBeaver . Concat (Concat(a.nombre, ' '), a.apellido) AS NOMBRE , es el nombre que se presentar\u00e1 en la tabla de resultados. Utiliza la funci\u00f3n concat , que solamente une cadenas. El problema es que 11g , recibe 2 par\u00e1metros y es por eso que la anidamos con otro Concat interno. En palabras simples, estamos uniendo a.nombre + ' ' + a.apellido , lo que en los resultados se traduce a John Petersen , que ser\u00eda: John + ' ' + Petersen . Concat (Concat(d.calle, ' '), d.ciudad) : De la misma forma, preparamos el resultado de una concatenaci\u00f3n de la informaci\u00f3n que obtenemos de la tabla direccion . SELECT a.id AS identificador, Concat (Concat(a.nombre, ' '), a.apellido) AS NOMBRE, Concat (Concat(d.calle, ' '), d.ciudad) AS direccion FROM alumno a INNER JOIN direccion d ON a.id_direccion = d.id; Output: 100 filas IDENTIFICADOR|NOMBRE |DIRECCION | -------------|---------------------|-------------------------------------------------------| 1|John Petersen |4208 Non, C/ Parral | 2|Josephine Lawson |Apartado n\u00fam.: 852, 6101 Neque C. Penco | 3|Jason Lane |Apartado n\u00fam.: 733, 3089 Malesuada Avda. Huechuraba | 4|Shannon Herrera |Apdo.:421-6141 At Avda. Recoleta | 5|Hilel Shields |1449 Odio. Retiro | ... 96|Harper Clarke |Apdo.:186-6696 Ut Av. Huechuraba | 97|Oleg Ayers |1267 Lobortis Carretera Angol | 98|Lev Albert |Apdo.:830-8620 Massa. Coinco | 99|Nichole Rivas |9525 Vestibulum Calle San Javier | 100|Cade Miranda |Apartado n\u00fam.: 957, 2756 Bibendum Avenida Las Condes | Ejercicios. Utilizando lo aprendido adem\u00e1s de lo visto en los ejemplos de una tabla, se exponen una serie de ejercicios en los que se debe recopilar informaci\u00f3n desde nuestra base de datos. Estos ejercicios incluyen actividades de investigaci\u00f3n externos para aquellos ejercicios que lo requieran. Se expone un problema y el supuesto resultado, usando solamente los datos facilitados con anterioridad, es por este motivo que hay que realizar la carga de estos datos correctamente, antes de comenzar con la resoluci\u00f3n de los siguientes ejercicios. Agregar informaci\u00f3n a los resultados. A la informaci\u00f3n obtenida anteriormente en el ejemplo, sumamos la siguiente tarea: Incluir la columna rut, y la regi\u00f3n a la columna direcci\u00f3n. Salida esperada: Output: IDENTIFICADOR|RUT |NOMBRE |DIRECCION | -------------|----------|---------------------|-------------------------------------------------------------------------------| 1|15067082-9|John Petersen |4208 Non, C/ Parral Maule | 2|29478235-4|Josephine Lawson |Apartado n\u00fam.: 852, 6101 Neque C. Penco Biob\u00edo | 3|32358344-7|Jason Lane |Apartado n\u00fam.: 733, 3089 Malesuada Avda. Huechuraba Metropolitana de Santiago | 4|38442638-7|Shannon Herrera |Apdo.:421-6141 At Avda. Recoleta Metropolitana de Santiago | ... m\u00e1s filas Consultar todo Manteniendo las condiciones anteriores de filtrado. Realizar una consulta que obtenga todas las columnas de las dos tablas. Nunca usemos * , a menos que estemos probando. Salida esperada: Output: ID |NOMBRE |APELLIDO |CORREO |ID_DIRECCION|ID |CALLE |CIUDAD |REGION | ---|----------|----------|------------------------------------------------------|------------|---|-------------------------------------------|-------------------|-------------------------| 1|John |Petersen |bibendum.Donec@ligulaelitpretium.co.uk | 1| 1|4208 Non, C/ |Parral |Maule | 2|Josephine |Lawson |neque.et@ad.co.uk | 2| 2|Apartado n\u00fam.: 852, 6101 Neque C. |Penco |Biob\u00edo | 3|Jason |Lane |pharetra@non.ca | 3| 3|Apartado n\u00fam.: 733, 3089 Malesuada Avda. |Huechuraba |Metropolitana de Santiago| ... m\u00e1s columnas Alumnos por regi\u00f3n. Se necesita listar la informaci\u00f3n de la cantidad de alumnos que posee cada regi\u00f3n. Se excluye del informe a la regi\u00f3n del Maule . TIP: Se puede anidar una condici\u00f3n and al on del inner join , para un mejor filtrado. Estos resultados deben ser presentados de mayor a menor. Salida esperada: Output: REGION |ALUMNOSXREGION| -------------------------|--------------| Metropolitana de Santiago| 23| RM | 17| Biob\u00edo | 7| O'Higgins | 5| V | 5| VII | 5| Araucan\u00eda | 4| Valpara\u00edso | 4| IX | 3| Coquimbo | 3| Los Lagos | 2| Los R\u00edos | 2| Atacama | 2| IV | 2| X | 1| XIV | 1| XII | 1| VI | 1| I | 1| Ais\u00e9n | 1| II | 1| Detalle de un alumno. Cuando en el sitio web que utilice esta base de datos, requiera mostrar un detalle m\u00e1s acabado del alumno, debemos complementar la informaci\u00f3n de otras tablas y utilizando alias, podemos identificar los valores del resultado de la consulta. Es por eso que se debe crear una consulta que obtenga el siguiente detalle para el alumno con rut: '18530285-7'. Se debe tener en cuenta que para este ejemplo, el alumno est\u00e1 en un solo curso, por eso es que se muestra una fila como resultado. Esto quiere decir que, como un alumno puede estar en m\u00e1s de un curso, los datos se repiten en los resultados dependiendo de la cantidad de cursos en las que est\u00e9. Como buen ejercicio pruebe agregando un desaf\u00edo que involucre este rut y otro curso, entonces el resultado ser\u00eda otra fila. Esta explicaci\u00f3n es para que entendamos que los retornos de una consulta sql \u001d, a menos que se retorne un c\u00e1lculo especifico, siempre el retorno es una lista (colecci\u00f3n) de resultados, a veces con un elemento (como ahora), pero otras con mas elementos. Los detalles que se mostrar\u00e1n ser\u00e1n: C\u00f3digo de alumno. Rut del alumno. Nombre del alumno. Apellido del alumno. Correo del alumno. Direcci\u00f3n del alumno. Curso del alumno. Salida esperada. Output: CODIGO_ALUMNO|RUT_ALUMNO|NOMBRE_ALUMNO|APELLIDO_ALUMNO|CORREO_ALUMNO |DIRECCION_ALUMNO |CURSO_ALUMNO| -------------|----------|-------------|---------------|---------------------------------|-----------------------|------------| 35|18530285-7|Idola |Lindsay |Fusce.aliquet.magna@Phasellus.net|637-1656 Eleifend Ctra.|Django | Alumnos y cursos (Ejercicio resuelto). Las tablas alumno & curso , no parecen estar relacionadas, ya que en ninguna tabla tenemos un FOREIGN KEY en alumno que haga referencia directa a curso , lo que se repite en curso . Dicho esto, debemos buscar una forma de relacionar a estas dos tablas para poder extraer sus datos. No disponemos de una tabla de matr\u00edculas desde donde podr\u00edamos obtener la informaci\u00f3n de las tablas. La tabla desafio , resulta ser nuestra \u00fanica opci\u00f3n de obtener una relaci\u00f3n entre alumno & curso , no es lo m\u00e1s optimo, pero no tenemos m\u00e1s opci\u00f3n. Entonces para obtener el total de alumnos matriculados por curso, utilizando una tercera tabla que servir\u00e1 de enlace entre las dos que necesitamos. Determinamos la cantidad de alumnos por curso SELECT c.descripcion AS curso, Count(a.id) AS cantidadAlumnos FROM alumno a INNER JOIN desafio d ON d.id_alumno = a.id INNER JOIN curso c ON c.id = d.id_curso GROUP BY c.descripcion; Output: CURSO |CANTIDADALUMNOS| ---------------|---------------| Node js | 11| Dise\u00f1o UX/UI | 8| Java full stack| 9| Android | 11| Django | 12| Gitflow | 7| Vue js | 8| Python | 4| React js | 19| Docker | 11| El curso m\u00e1s popular Determinar el curso que posee la mayor cantidad de estudiantes. Probar una consulta ordenada inversa y obtener el primer elemento. Investigar funciones count() y max() Salida esperada: Output: CURSO |NUM_ALUMNOS| --------|-----------| React js| 19| Alumnos JS. Obtener el Rut y nombre por curso, de todos los alumnos que cursen algo relacionado con javascript . Investigar el uso del LIKE , para resolver este ejemplo. Hay que recordar que disponemos de una \u00fanica fuente de datos, y la informaci\u00f3n que se obtenga, puede ser mejor respaldada, pero en nuestra base, solamente disponemos de nombres que llevan el js en sus descripciones, por lo tanto, es nuestra \u00fanica fuente y la debemos utilizar. La informaci\u00f3n que nos solicitan, no tiene que estar explicita a como se pide en nuestra base de datos, es tarea nuestra, extraer la informaci\u00f3n usando el lenguaje de manipulaci\u00f3n de datos. Salida esperada: Output: CURSO |RUT |NOMBRE | --------|----------|-----------------| Node js |32170529-4|Kelly Weeks | Node js |12906934-1|Abigail Robles | Node js |35776801-2|Lavinia Mcmillan | Node js |6147056-5 |Ebony Hays | Node js |21121668-9|Hyacinth Chandler| Node js |21524393-1|Jordan Baker | Node js |22930220-5|Kylie Lawson | Node js |33653325-2|Delilah Anderson | Node js |20520886-0|Talon Carson | Node js |28174882-3|Ocean Freeman | Node js |42862897-7|Guy Knight | React js|28448737-0|Erasmus Knox | React js|31096614-2|Cade Miranda | React js|34655619-6|Samson Beasley | React js|41601648-8|Bevis Cooke | React js|43717025-8|Ray Burton | React js|5323035-0 |Rhonda Henderson | React js|33234353-K|Kamal Logan | React js|48557043-8|Isaiah Oconnor | React js|15067082-9|John Petersen | React js|45810119-1|Hilel Shields | React js|27421507-0|Channing Moran | React js|32170529-4|Kelly Weeks | React js|17606503-6|Madonna Sawyer | React js|6147056-5 |Ebony Hays | React js|30937922-5|Laith Munoz | React js|22930220-5|Kylie Lawson | React js|34999646-4|Benedict Allen | React js|44491627-3|Myra Sims | React js|49646911-9|Nissim Justice | Vue js |20080071-0|Eric Holmes | Vue js |20520886-0|Talon Carson | Vue js |41601648-8|Bevis Cooke | Vue js |47860659-1|Burke Mcbride | Vue js |34999646-4|Benedict Allen | Vue js |34534586-8|Medge Carney | Vue js |34731931-7|Dakota Aguirre | Vue js |24257003-0|Berk Hendrix | Ranking Java full stack . Obtener el ranking de notas para el curso de Java full stack Salida esperada Output: NOMBRE |CURSO |RUT |PUNTAJE_OBTENIDO| ---------------|---------------|----------|----------------| Dakota Aguirre |Java full stack|34731931-7| 94| Myra Sims |Java full stack|44491627-3| 90| Marsden Buck |Java full stack|24172970-2| 75| Kamal Logan |Java full stack|33234353-K| 73| Orlando Chapman|Java full stack|23559642-3| 72| Dai Hull |Java full stack|40432802-6| 69| Medge Carney |Java full stack|34534586-8| 44| Nichole Rivas |Java full stack|37297864-3| 36| Inga Pope |Java full stack|29078376-3| 32| Aprobados de Dise\u00f1o UX/UI . Dado un porcentaje de aprobaci\u00f3n es del 60%, (los valores de las calificaciones son de 1 a 100). Obtener a todos los alumnos aprobados del curso de Dise\u00f1o UX/UI . Los resultados estar\u00e1n ordenados de mayor a menor. Salida esperada Output: NOMBRE |CURSO |RUT |PUNTAJE_OBTENIDO| -------------|------------|----------|----------------| Kyla Carroll |Dise\u00f1o UX/UI|10895354-3| 80| Ramona Deleon|Dise\u00f1o UX/UI|44552711-4| 70| Kylie Lawson |Dise\u00f1o UX/UI|22930220-5| 63| Desaf\u00edos en marzo. Imprimir el promedio de puntajes obtenidos en los desaf\u00edos. Los resultados estar\u00e1n agrupados por curso. Solamente deber\u00e1n estar los desaf\u00edos ejecutados en el mes de marzo. Para esto investigar sobre BETWEEN \u001d , ya que ser\u00e1 necesario para la resoluci\u00f3n del presente ejercicio. Output: CURSO |PROMEDIO| ---------------|--------| Node js | 43| Java full stack| 65| Dise\u00f1o UX/UI | 39| Android | 78| Django | 64.5| Gitflow | 35.33| Vue js | 80.33| React js | 57.5| Python | 65.5| Docker | 99|","title":"Ejemplos en m\u00e1s de una tabla"},{"location":"basededatos/ddldcl/variastablas/#ejemplos-con-varias-tablas","text":"Se explican las consultas y se muestran los ddl , pero el camino a seguir para poder llegar al modelo, se encuentra detallado en las lecturas. No son tratados temas de modelado ni de niveles de normalidad.","title":"Ejemplos con varias tablas."},{"location":"basededatos/ddldcl/variastablas/#definicion-de-la-estructura","text":"Problema: Se necesita crear una base de datos que pueda contener la siguiente estructura: Alumnos: Nombre, apellido, direcci\u00f3n (calle, ciudad y regi\u00f3n), Curso: Descripci\u00f3n. Desaf\u00edos: Detalle, datos del alumno, datos del curso, calificaci\u00f3n y fecha. Listamos las tablas involucradas en la soluci\u00f3n.","title":"Definici\u00f3n de la estructura."},{"location":"basededatos/ddldcl/variastablas/#modelo-de-datos","text":"El siguiente modelo, representa la estructura del modelo de la base de datos a utilizar.","title":"Modelo de datos"},{"location":"basededatos/ddldcl/variastablas/#ddl-estructura","text":"A continuaci\u00f3n la definici\u00f3n de cada una de las tablas que componen la estructura del modelo de datos. Se ejecuta sin problemas, si es que poseen los permisos correspondientes. En el caso que se deseen eliminar estas tablas, hay que ejecutar el drop en orden inverso, para no tener problemas con las restricciones. CREATE TABLE direccion ( id NUMBER NOT NULL, calle VARCHAR2(200), ciudad VARCHAR2(200), region VARCHAR2(200), CONSTRAINT pk_direccion PRIMARY KEY (id) ); CREATE TABLE alumno ( id NUMBER NOT NULL, rut VARCHAR2(200), nombre VARCHAR2(200), apellido VARCHAR2(200), correo VARCHAR2(200), id_direccion NUMBER NOT NULL, CONSTRAINT pk_alumno -- restricci\u00f3n de clave primaria PRIMARY KEY (id), CONSTRAINT fk_direccion_alumno -- restricci\u00f3n de clave for\u00e1nea FOREIGN KEY (id_direccion) REFERENCES direccion(id) ); CREATE TABLE curso ( id NUMBER NOT NULL, descripcion VARCHAR2(200), CONSTRAINT pk_curso PRIMARY KEY (id) ); CREATE TABLE desafio ( id_curso NUMBER NOT NULL, id_alumno NUMBER NOT NULL, calificacion NUMBER, detalle VARCHAR2(200), fecha DATE, CONSTRAINT pk_desafio PRIMARY KEY (id_curso, id_alumno), CONSTRAINT fk_curso_desafio FOREIGN KEY (id_curso) REFERENCES curso(id), CONSTRAINT fk_alumno_desafio FOREIGN KEY (id_alumno) REFERENCES alumno(id) ); COMMIT;","title":"DDL. (Estructura)"},{"location":"basededatos/ddldcl/variastablas/#datos-a-ingresar","text":"Ates de poder ejecutar el siguiente script \u001d, debemos tener la estructura lista, en caso contrario, no se podr\u00e1n ingresar datos, a una estructura que se encuentre incompleta. -- direcci\u00f3n INSERT INTO direccion (id,calle,ciudad,region) VALUES (1,'4208 Non, C/','Parral','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (2,'Apartado n\u00fam.: 852, 6101 Neque C.','Penco','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (3,'Apartado n\u00fam.: 733, 3089 Malesuada Avda.','Huechuraba','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (4,'Apdo.:421-6141 At Avda.','Recoleta','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (5,'1449 Odio. ','Retiro','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (6,'8574 Cursus Ctra.','Estaci\u00f3n Central','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (7,'Apartado n\u00fam.: 552, 3282 Non, C.','Pedro Aguirre Cerda','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (8,'Apartado n\u00fam.: 816, 3374 Ac Ctra.','Pozo Almonte','I'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (9,'3394 Risus, C.','San Miguel','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (10,'5497 Vestibulum Avenida','La Reina','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (11,'8224 Ante. C.','Pencahue','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (12,'Apdo.:518-3987 Aliquam Avenida','Los Vilos','IV'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (13,'268-5320 Cras Calle','Santiago','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (14,'Apdo.:745-8483 Dui. ','La Cruz','Valpara\u00edso'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (15,'Apdo.:917-8861 A Av.','Los Andes','Valpara\u00edso'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (16,'9630 Purus, Avenida','Cartagena','Valpara\u00edso'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (17,'9281 Nibh C/','El Bosque','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (18,'Apartado n\u00fam.: 151, 4092 Sollicitudin Avda.','Maip\u00fa','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (19,'182-7520 Libero ','Melipilla','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (20,'Apartado n\u00fam.: 788, 9025 Nec Ctra.','Casablanca','Valpara\u00edso'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (21,'Apartado n\u00fam.: 947, 8078 Ipsum Carretera','Pudahuel','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (22,'518 Pellentesque Ctra.','Graneros','O''Higgins'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (23,'589-2499 Ante, Avenida','R\u00edo Bueno','Los R\u00edos'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (24,'707-5601 Dictum ','Talagante','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (25,'Apartado n\u00fam.: 865, 8492 Arcu. C.','La Ligua','V'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (26,'Apartado n\u00fam.: 505, 825 Praesent Ctra.','Puc\u00f3n','IX'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (27,'5706 Ornare. Carretera','Graneros','VI'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (28,'1666 A ','Quinta de Tilcoco','O''Higgins'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (29,'772-7537 Nisl Avenida','Teodoro Schmidt','IX'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (30,'1692 Ac Calle','Rauco','VII'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (31,'622-7351 Velit Ctra.','Pirque','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (32,'127-7239 Eu Av.','San Ram\u00f3n','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (33,'319-500 Mauris Calle','San Pedro de la Paz','VII'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (34,'Apartado n\u00fam.: 113, 1991 Mus. Avda.','Victoria','Araucan\u00eda'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (35,'637-1656 Eleifend Ctra.','Teno','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (36,'4787 Nunc Av.','Calera de Tango','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (37,'Apartado n\u00fam.: 191, 8386 Morbi Avda.','Independencia','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (38,'Apartado n\u00fam.: 845, 4811 Felis. Calle','Calera de Tango','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (39,'Apdo.:511-4529 Posuere, ','Quilpu\u00e9','V'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (40,'403-1939 Sed Calle','Recoleta','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (41,'Apartado n\u00fam.: 316, 9394 Interdum. ','Tierra Amarilla','Atacama'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (42,'Apartado n\u00fam.: 262, 2350 Enim ','Quell\u00f3n','X'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (43,'2985 Orci Ctra.','La Granja','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (44,'Apdo.:979-9760 Feugiat C/','Lota','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (45,'Apdo.:267-5083 Phasellus Avenida','Antuco','VII'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (46,'219-8706 Vulputate, Avda.','Puc\u00f3n','Araucan\u00eda'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (47,'328-6045 Interdum. C.','Victoria','IX'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (48,'866 Quis, Calle','Huechuraba','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (49,'3479 Sem Carretera','Illapel','Coquimbo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (50,'958-1336 Tempor Calle','Curacav\u00ed','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (51,'Apartado n\u00fam.: 969, 1905 Consectetuer ','La Granja','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (52,'717-3309 Neque. Avenida','Puerto Octay','Los Lagos'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (53,'Apartado n\u00fam.: 933, 6848 Lorem C/','Coquimbo','Coquimbo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (54,'Apartado n\u00fam.: 414, 9660 Aliquam ','Vi\u00f1a del Mar','V'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (55,'378-6190 Porttitor ','Melipilla','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (56,'344-9821 Elementum C.','Padre Hurtado','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (57,'Apdo.:343-838 Vivamus C/','Portezuelo','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (58,'Apdo.:243-4069 Odio. C.','Palmilla','O''Higgins'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (59,'Apdo.:158-6909 Et C.','La Cruz','V'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (60,'6330 Massa ','Renca','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (61,'6533 Iaculis ','La Pintana','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (62,'Apdo.:384-2455 Vivamus Avda.','R\u00edo Claro','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (63,'Apartado n\u00fam.: 203, 6833 Ut Avenida','San Vicente','O''Higgins'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (64,'Apdo.:154-1638 Nam ','Recoleta','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (65,'2726 Rutrum, Ctra.','Punta Arenas','XII'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (66,'Apartado n\u00fam.: 663, 7268 Lobortis Avenida','Puente Alto','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (67,'Apdo.:829-1018 A, Ctra.','Macul','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (68,'Apdo.:418-4650 Interdum Avenida','Isla de Pascua','V'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (69,'472-2823 Eget ','Castro','Los Lagos'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (70,'Apartado n\u00fam.: 968, 4015 Nec C.','Valdivia','XIV'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (71,'Apartado n\u00fam.: 342, 662 Sem Carretera','San Jos\u00e9 de Maipo','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (72,'Apartado n\u00fam.: 891, 1449 Risus. Av.','Bulnes','VII'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (73,'Apdo.:992-3562 Laoreet Carretera','Diego de Almagro','Atacama'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (74,'Apdo.:819-8127 Risus Carretera','Contulmo','VII'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (75,'Apartado n\u00fam.: 132, 2243 Amet, C/','Pinto','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (76,'Apdo.:820-9680 A, Av.','Independencia','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (77,'Apdo.:935-6209 Hendrerit C/','Macul','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (78,'Apartado n\u00fam.: 149, 986 Vel Av.','Florida','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (79,'Apartado n\u00fam.: 123, 6117 Nunc. Calle','Andacollo','IV'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (80,'4464 Nibh Avda.','Paine','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (81,'635-3787 Class Ctra.','Lo Prado','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (82,'3891 Et Av.','Mulch\u00e9n','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (83,'Apdo.:995-6696 Sapien. Av.','Canela','Coquimbo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (84,'6565 Quis Calle','Lo Barnechea','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (85,'Apartado n\u00fam.: 281, 138 Sit Carretera','Tortel','Ais\u00e9n'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (86,'2869 Fames Avenida','Gorbea','Araucan\u00eda'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (87,'6782 Massa. Carretera','Tucapel','Biob\u00edo'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (88,'Apdo.:763-7725 Non Carretera','Empedrado','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (89,'9667 Auctor ','Independencia','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (90,'Apartado n\u00fam.: 144, 8231 Diam. Carretera','Mejillones','II'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (91,'Apartado n\u00fam.: 831, 6549 Augue Calle','San Bernardo','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (92,'Apartado n\u00fam.: 225, 6888 Mauris ','Chanco','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (93,'Apdo.:951-8460 Aliquam Avenida','La Granja','RM'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (94,'Apdo.:737-6562 Nunc Calle','Curepto','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (95,'Apdo.:364-1897 Nunc Calle','Panguipulli','Los R\u00edos'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (96,'Apdo.:186-6696 Ut Av.','Huechuraba','Metropolitana de Santiago'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (97,'1267 Lobortis Carretera','Angol','Araucan\u00eda'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (98,'Apdo.:830-8620 Massa. ','Coinco','O''Higgins'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (99,'9525 Vestibulum Calle','San Javier','Maule'); INSERT INTO direccion (id,calle,ciudad,region) VALUES (100,'Apartado n\u00fam.: 957, 2756 Bibendum Avenida','Las Condes','RM'); -- alumnos INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (1,'15067082-9','John','Petersen','bibendum.Donec@ligulaelitpretium.co.uk',1); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (2,'29478235-4','Josephine','Lawson','neque.et@ad.co.uk',2); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (3,'32358344-7','Jason','Lane','pharetra@non.ca',3); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (4,'38442638-7','Shannon','Herrera','dolor@est.net',4); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (5,'45810119-1','Hilel','Shields','dictum.Proin@nascetur.net',5); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (6,'21543451-6','Karly','Bush','elit.pharetra.ut@Phasellus.org',6); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (7,'27421507-0','Channing','Moran','Fusce.diam.nunc@ac.net',7); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (8,'10323649-5','Gretchen','Snow','dapibus.ligula@veliteget.ca',8); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (9,'38923383-8','Joy','Hays','Donec.egestas.Duis@Phasellus.ca',9); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (10,'42066018-9','Kaitlin','Mosley','enim@pellentesquetellus.net',10); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (11,'29078376-3','Inga','Pope','ullamcorper@duinec.net',11); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (12,'32170529-4','Kelly','Weeks','et.magnis.dis@nec.net',12); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (13,'12906934-1','Abigail','Robles','porttitor.scelerisque@sed.co.uk',13); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (14,'50738344-0','Jordan','Tucker','arcu.imperdiet.ullamcorper@risusNulla.org',14); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (15,'24257003-0','Berk','Hendrix','Proin@amet.com',15); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (16,'23409721-0','Sacha','Bentley','massa.Integer.vitae@cursusdiamat.edu',16); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (17,'35776801-2','Lavinia','Mcmillan','mauris.Integer@Maurisvestibulumneque.net',17); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (18,'17606503-6','Madonna','Sawyer','sodales@iderat.edu',18); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (19,'6147056-5','Ebony','Hays','Mauris.vel@consectetuer.com',19); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (20,'9310089-1','John','Ramos','Sed.auctor.odio@necanteblandit.com',20); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (21,'24172970-2','Marsden','Buck','volutpat.Nulla.facilisis@nonummyFusce.com',21); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (22,'49143177-6','Montana','Mcintyre','arcu.Aliquam.ultrices@lacusvestibulum.ca',22); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (23,'44552711-4','Ramona','Deleon','fermentum@estMauriseu.com',23); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (24,'40432802-6','Dai','Hull','neque@aliquetvel.org',24); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (25,'21121668-9','Hyacinth','Chandler','fringilla.ornare@nullamagna.org',25); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (26,'9469491-4','Wilma','Barrett','nulla.at@scelerisquenequesed.org',26); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (27,'30937922-5','Laith','Munoz','semper@dui.ca',27); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (28,'45510920-5','Sylvia','Stein','nisl.elementum@ornareegestas.net',28); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (29,'44982892-5','Karyn','Ortega','Proin@vulputatelacus.co.uk',29); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (30,'42862897-7','Guy','Knight','egestas.Aliquam@loremeumetus.co.uk',30); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (31,'34731931-7','Dakota','Aguirre','Nunc@Vestibulum.com',31); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (32,'22930220-5','Kylie','Lawson','faucibus@nibh.net',32); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (33,'18549570-1','Porter','Rocha','Sed.eu@non.org',33); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (34,'30970860-1','Cruz','Glass','risus.quis@Morbi.co.uk',34); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (35,'18530285-7','Idola','Lindsay','Fusce.aliquet.magna@Phasellus.net',35); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (36,'16125231-K','Upton','Tanner','amet.nulla.Donec@Integereu.ca',36); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (37,'26309692-4','Elmo','Henry','ut.nisi.a@nuncestmollis.edu',37); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (38,'10895354-3','Kyla','Carroll','nascetur.ridiculus.mus@necleo.edu',38); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (39,'34534586-8','Medge','Carney','libero.dui@Uttinciduntvehicula.ca',39); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (40,'29322036-0','Kibo','Booth','dui@nullaDonec.net',40); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (41,'11755964-5','Stone','Bowen','venenatis@idmagna.com',41); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (42,'43898568-9','Steel','Nixon','enim.Etiam@eget.org',42); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (43,'26668296-4','Ria','Nash','enim.Sed.nulla@porttitortellusnon.com',43); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (44,'34999646-4','Benedict','Allen','et.rutrum@justo.ca',44); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (45,'44491627-3','Myra','Sims','Suspendisse.tristique.neque@Donec.co.uk',45); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (46,'21236617-K','Montana','Campos','nunc.Quisque@dolorDonecfringilla.edu',46); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (47,'36433164-9','Lev','Britt','molestie.arcu@aliquet.co.uk',47); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (48,'15754759-3','Kenyon','English','vel@est.net',48); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (49,'10462345-K','Kareem','Jimenez','accumsan@lectusquismassa.edu',49); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (50,'24895634-8','Elmo','Medina','porttitor@dolorelitpellentesque.net',50); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (51,'10649980-2','Deacon','Calderon','nulla@vitae.com',51); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (52,'47860659-1','Burke','Mcbride','pharetra@massaVestibulumaccumsan.edu',52); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (53,'49646911-9','Nissim','Justice','Fusce.dolor@sed.com',53); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (54,'48557043-8','Isaiah','Oconnor','massa.Suspendisse@bibendumullamcorper.ca',54); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (55,'11007607-K','Alden','Knox','tincidunt@acmattis.edu',55); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (56,'40434836-1','Jasmine','Stanton','et.netus@eutempor.edu',56); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (57,'33234353-K','Kamal','Logan','Quisque.nonummy@tacitisociosqu.ca',57); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (58,'24940802-6','Carlos','Frazier','Ut.tincidunt@loremluctus.ca',58); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (59,'47845945-9','Deacon','Blanchard','amet.risus@Aeneanegetmagna.edu',59); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (60,'34669263-4','Liberty','Bender','Donec.at@etnetus.co.uk',60); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (61,'5323035-0','Rhonda','Henderson','vulputate.eu@orci.edu',61); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (62,'27385603-K','Rafael','Patton','blandit.at@Nullamvitaediam.edu',62); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (63,'43717025-8','Ray','Burton','dis@Nunclectuspede.co.uk',63); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (64,'26009259-6','Shelly','Osborne','augue@neque.net',64); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (65,'43842576-4','Valentine','Rosa','Donec.tempus@sitametorci.org',65); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (66,'41601648-8','Bevis','Cooke','In@adipiscinglacusUt.co.uk',66); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (67,'23559642-3','Orlando','Chapman','suscipit@quam.ca',67); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (68,'6176958-7','Kristen','Mays','adipiscing.elit.Curabitur@variusNam.org',68); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (69,'17484266-3','Asher','Fry','quis.pede@dui.ca',69); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (70,'48849457-0','Hedwig','Welch','orci.Donec.nibh@etmalesuada.org',70); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (71,'45258091-8','Constance','Whitley','fringilla.euismod.enim@Donecsollicitudinadipiscing.edu',71); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (72,'17117599-2','Cassandra','Griffith','a.felis.ullamcorper@utodio.com',72); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (73,'17246760-1','Ali','Reese','vehicula.Pellentesque@Proindolor.edu',73); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (74,'34655619-6','Samson','Beasley','sollicitudin.adipiscing.ligula@pedeac.co.uk',74); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (75,'26663711-K','Yetta','Hopkins','Curabitur.massa.Vestibulum@mauris.com',75); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (76,'5050341-0','Germane','Estes','Integer@tristique.ca',76); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (77,'33653325-2','Delilah','Anderson','in.dolor.Fusce@nullaat.com',77); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (78,'43694492-6','Latifah','Dodson','in.consequat.enim@Sedidrisus.co.uk',78); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (79,'20520886-0','Talon','Carson','cursus.in@vitae.org',79); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (80,'28448737-0','Erasmus','Knox','neque.et@nonummyultriciesornare.ca',80); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (81,'28174882-3','Ocean','Freeman','velit@elitsed.ca',81); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (82,'32092787-0','Dominic','Mcdaniel','ac.eleifend@habitantmorbitristique.org',82); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (83,'29730560-3','Jacqueline','Fitzgerald','scelerisque@necante.co.uk',83); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (84,'36000452-K','Stone','Watson','sagittis.placerat.Cras@aliquamarcuAliquam.com',84); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (85,'38927252-3','Charles','Frost','natoque.penatibus@ultricessitamet.org',85); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (86,'26223237-9','Elmo','Forbes','elit@posuere.com',86); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (87,'20080071-0','Eric','Holmes','Nunc@diamSed.org',87); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (88,'33833791-4','Keith','Golden','risus.quis@at.ca',88); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (89,'11926278-K','Zorita','Hart','dignissim.lacus@semperrutrumFusce.ca',89); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (90,'49831596-8','Leonard','Boone','Nulla@molestietellusAenean.edu',90); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (91,'6969075-0','Yardley','Mccarthy','ut@facilisisfacilisismagna.org',91); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (92,'21524393-1','Jordan','Baker','venenatis@fermentummetusAenean.com',92); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (93,'15859785-3','Alice','Porter','sit.amet@erosNamconsequat.co.uk',93); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (94,'7755698-2','Magee','Rios','turpis.egestas@loremac.edu',94); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (95,'8570254-8','Rigel','Burch','rhoncus@amet.com',95); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (96,'32918740-3','Harper','Clarke','non.arcu@Phaselluslibero.com',96); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (97,'35577644-1','Oleg','Ayers','Morbi.accumsan.laoreet@nisl.org',97); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (98,'6254465-1','Lev','Albert','eu@et.edu',98); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (99,'37297864-3','Nichole','Rivas','sit.amet.consectetuer@Craseu.edu',99); INSERT INTO alumno (id,rut,nombre,apellido,correo,id_direccion) VALUES (100,'31096614-2','Cade','Miranda','aliquet@viverra.edu',100); -- Curso INSERT INTO curso (id,descripcion) VALUES (1,'Java full stack'); INSERT INTO curso (id,descripcion) VALUES (2,'Node js'); INSERT INTO curso (id,descripcion) VALUES (3,'Gitflow'); INSERT INTO curso (id,descripcion) VALUES (4,'Android'); INSERT INTO curso (id,descripcion) VALUES (5,'Django'); INSERT INTO curso (id,descripcion) VALUES (6,'Dise\u00f1o UX/UI'); INSERT INTO curso (id,descripcion) VALUES (7,'Python'); INSERT INTO curso (id,descripcion) VALUES (8,'Vue js'); INSERT INTO curso (id,descripcion) VALUES (9,'React js'); INSERT INTO curso (id,descripcion) VALUES (10,'Docker'); -- Desafio INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (7,73,64,'mauris',TO_DATE('2020/01/01', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,13,48,'magna. Ut',TO_DATE('2020/06/15', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,15,56,'lacus pede',TO_DATE('2020/11/11', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,25,74,'ullamcorper, velit in',TO_DATE('2020/07/08', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,19,78,'mattis ornare, lectus',TO_DATE('2020/03/22', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,44,71,'semper',TO_DATE('2020/01/01', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,31,94,'dolor.',TO_DATE('2020/03/21', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,56,71,'imperdiet nec,',TO_DATE('2020/03/29', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,57,66,'Proin velit. Sed',TO_DATE('2020/03/23', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,67,72,'accumsan',TO_DATE('2020/09/09', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,12,90,'adipiscing',TO_DATE('2020/04/04', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,63,100,'ipsum sodales purus,',TO_DATE('2020/10/10', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,93,47,'risus.',TO_DATE('2020/12/16', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (7,40,51,'sem egestas blandit.',TO_DATE('2020/03/23', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,06,52,'lorem vitae odio',TO_DATE('2020/02/28', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,84,32,'eget,',TO_DATE('2020/03/03', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,52,43,'sapien, gravida',TO_DATE('2020/03/21', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,21,75,'tortor.',TO_DATE('2020/12/12', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,40,73,'turpis egestas.',TO_DATE('2020/04/30', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,80,83,'placerat',TO_DATE('2020/03/20', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,24,69,'velit',TO_DATE('2020/10/10', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,1,91,'enim non nisi.',TO_DATE('2020/01/01', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,18,35,'erat neque non',TO_DATE('2020/03/28', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,9,68,'vitae nibh.',TO_DATE('2020/10/10', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,79,53,'lectus, a sollicitudin',TO_DATE('2020/04/30', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,23,60,'velit dui, semper',TO_DATE('2020/05/05', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,23,80,'et arcu imperdiet',TO_DATE('2020/07/19', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,73,77,'litora',TO_DATE('2020/11/11', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,17,85,'dolor elit, pellentesque',TO_DATE('2020/04/04', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (7,61,61,'elit,',TO_DATE('2020/05/05', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,74,45,'velit. Pellentesque ultricies',TO_DATE('2020/06/29', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,27,52,'quis',TO_DATE('2020/09/19', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,87,56,'eros turpis',TO_DATE('2020/04/04', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,21,97,'Aliquam adipiscing lobortis',TO_DATE('2020/09/09', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,32,54,'ipsum porta',TO_DATE('2020/09/19', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,68,40,'eu, euismod ac,',TO_DATE('2020/10/10', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,32,34,'mauris a nunc.',TO_DATE('2020/04/04', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,23,88,'massa.',TO_DATE('2020/01/31', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,26,100,'et',TO_DATE('2020/03/23', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,51,96,'rutrum. Fusce dolor',TO_DATE('2020/11/11', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,19,85,'blandit mattis.',TO_DATE('2020/08/08', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,25,76,'eget massa. Suspendisse',TO_DATE('2020/02/27', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,72,73,'sodales',TO_DATE('2020/05/05', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,60,43,'in consectetuer',TO_DATE('2020/04/14', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,19,40,'In tincidunt congue',TO_DATE('2020/07/07', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,30,30,'turpis egestas.',TO_DATE('2020/03/13', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,49,59,'nonummy ac, feugiat',TO_DATE('2020/03/03', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,12,45,'Phasellus at',TO_DATE('2020/01/31', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,81,36,'risus',TO_DATE('2020/08/08', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,38,82,'Mauris molestie pharetra',TO_DATE('2020/02/02', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,61,93,'mollis.',TO_DATE('2020/08/18', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,45,90,'justo',TO_DATE('2020/03/25', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,70,48,'Phasellus ornare.',TO_DATE('2020/05/05', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,35,84,'semper erat, in',TO_DATE('2020/03/27', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,13,74,'sed',TO_DATE('2020/09/09', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,11,32,'adipiscing. Mauris',TO_DATE('2020/03/24', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,12,78,'nisi. Aenean',TO_DATE('2020/03/24', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,57,73,'et netus',TO_DATE('2020/01/01', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,7,50,'Proin mi.',TO_DATE('2020/07/07', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,45,30,'elementum at,',TO_DATE('2020/01/31', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,44,30,'feugiat nec, diam.',TO_DATE('2020/07/07', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,15,37,'vulputate ullamcorper magna.',TO_DATE('2020/03/29', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,87,59,'Morbi quis urna.',TO_DATE('2020/02/02', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,87,39,'lectus',TO_DATE('2020/07/07', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,39,99,'odio semper',TO_DATE('2020/03/25', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,30,50,'risus quis',TO_DATE('2020/08/18', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,25,91,'eu sem.',TO_DATE('2020/05/15', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,55,44,'sem. Pellentesque',TO_DATE('2020/08/08', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,39,44,'Quisque',TO_DATE('2020/03/24', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,100,89,'eget, ipsum. Donec',TO_DATE('2020/06/13', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,56,90,'Donec',TO_DATE('2020/05/15', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (10,24,99,'cursus vestibulum.',TO_DATE('2020/03/20', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,45,74,'elit sed',TO_DATE('2020/04/14', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,95,54,'cursus non, egestas',TO_DATE('2020/05/05', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,66,99,'pulvinar',TO_DATE('2020/03/27', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,77,56,'Sed',TO_DATE('2020/03/24', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,32,63,'in molestie',TO_DATE('2020/07/06', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,5,92,'massa. Mauris vestibulum,',TO_DATE('2020/12/18', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,38,80,'ut, nulla. Cras',TO_DATE('2020/06/06', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,23,70,'tincidunt',TO_DATE('2020/09/09', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (7,14,80,'nascetur ridiculus',TO_DATE('2020/03/27', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,44,99,'odio',TO_DATE('2020/09/09', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,53,34,'consectetuer,',TO_DATE('2020/03/23', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,7,49,'molestie orci tincidunt',TO_DATE('2020/03/22', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,63,90,'Quisque nonummy ipsum',TO_DATE('2020/05/05', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,33,59,'lorem',TO_DATE('2020/12/15', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,50,86,'blandit at,',TO_DATE('2020/07/07', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (1,99,36,'vitae, sodales',TO_DATE('2020/05/30', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,2,42,'ac,',TO_DATE('2020/03/03', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,54,58,'magnis',TO_DATE('2020/07/07', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (9,66,74,'velit',TO_DATE('2020/04/04', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (4,18,71,'Aliquam',TO_DATE('2020/08/08', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,92,36,'eget ipsum.',TO_DATE('2020/09/09', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (2,79,51,'sit amet risus.',TO_DATE('2020/12/13', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,20,48,'lorem eu metus.',TO_DATE('2020/03/29', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,1,31,'eu neque',TO_DATE('2020/03/21', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (5,5,93,'pede, nonummy',TO_DATE('2020/12/16', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (3,67,37,'et magnis dis',TO_DATE('2020/03/21', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (6,53,30,'arcu.',TO_DATE('2020/03/29', 'YYYY-MM-DD')); INSERT INTO desafio (id_curso,id_alumno,calificacion,detalle,fecha) VALUES (8,31,79,'Cras interdum.',TO_DATE('2020/11/16', 'YYYY-MM-DD'));","title":"Datos a ingresar"},{"location":"basededatos/ddldcl/variastablas/#comprobar-datos-ingresados","text":"Tabla: Direcci\u00f3n. SELECT id, calle, ciudad, region FROM direccion; Recordar que podemos usar alias, para poder identificar la tabla, no es muy \u00fatil en esta situaci\u00f3n de una tabla; pero cuando est\u00e1n m\u00e1s tablas en juego, habr\u00e1 una gran diferencia entre usar un alias o no. La siguiente consulta produce el mismo resultado. SELECT d.id, d.calle, d.ciudad, d.region FROM direccion d; Output: ID |CALLE |CIUDAD |REGION | ---|-------------------------------------------|-------------------|-------------------------| 1|4208 Non, C/ |Parral |Maule | 2|Apartado n\u00fam.: 852, 6101 Neque C. |Penco |Biob\u00edo | 3|Apartado n\u00fam.: 733, 3089 Malesuada Avda. |Huechuraba |Metropolitana de Santiago| 4|Apdo.:421-6141 At Avda. |Recoleta |Metropolitana de Santiago| 5|1449 Odio. |Retiro |Maule | ... 95|Apdo.:364-1897 Nunc Calle |Panguipulli |Los R\u00edos | 96|Apdo.:186-6696 Ut Av. |Huechuraba |Metropolitana de Santiago| 97|1267 Lobortis Carretera |Angol |Araucan\u00eda | 98|Apdo.:830-8620 Massa. |Coinco |O'Higgins | 99|9525 Vestibulum Calle |San Javier |Maule | 100|Apartado n\u00fam.: 957, 2756 Bibendum Avenida |Las Condes |RM | Tabla: Alumno. SELECT a.id, a.rut, a.nombre, a.apellido, a.correo, a.id_direccion FROM alumno a; Output: ID |RUT |NOMBRE |APELLIDO |CORREO |ID_DIRECCION| ---|----------|----------|----------|------------------------------------------------------|------------| 1|15067082-9|John |Petersen |bibendum.Donec@ligulaelitpretium.co.uk | 1| 2|29478235-4|Josephine |Lawson |neque.et@ad.co.uk | 2| 3|32358344-7|Jason |Lane |pharetra@non.ca | 3| 4|38442638-7|Shannon |Herrera |dolor@est.net | 4| ... 97|35577644-1|Oleg |Ayers |Morbi.accumsan.laoreet@nisl.org | 97| 98|6254465-1 |Lev |Albert |eu@et.edu | 98| 99|37297864-3|Nichole |Rivas |sit.amet.consectetuer@Craseu.edu | 99| 100|31096614-2|Cade |Miranda |aliquet@viverra.edu | 100| Tabla: Curso. SELECT c.id, c.descripcion FROM curso c; Output: ID|DESCRIPCION | --|---------------| 1|Java full stack| 2|Node js | 3|Gitflow | 4|Android | 5|Django | 6|Dise\u00f1o UX/UI | 7|Python | 8|Vue js | 9|React js | 10|Docker | Tabla: Desaf\u00edo. SELECT d2.id_curso, d2.id_alumno, d2.calificacion, d2.detalle, d2.fecha FROM desafio d2; Output: 100 filas ID_CURSO|ID_ALUMNO|CALIFICACION|DETALLE |FECHA | --------|---------|------------|-----------------------------|-------------------| 7| 73| 64|mauris |2020-01-01 00:00:00| 6| 13| 48|magna. Ut |2020-06-15 00:00:00| 8| 15| 56|lacus pede |2020-11-11 00:00:00| 4| 25| 74|ullamcorper, velit in |2020-07-08 00:00:00| 4| 19| 78|mattis ornare, lectus |2020-03-22 00:00:00| ... 5| 1| 31|eu neque |2020-03-21 00:00:00| 5| 5| 93|pede, nonummy |2020-12-16 00:00:00| 3| 67| 37|et magnis dis |2020-03-21 00:00:00| 6| 53| 30|arcu. |2020-03-29 00:00:00| 8| 31| 79|Cras interdum. |2020-11-16 00:00:00|","title":"Comprobar datos ingresados."},{"location":"basededatos/ddldcl/variastablas/#dcl-manipulacion","text":"Antes de comenzar a aplicar todas estas t\u00e9cnicas de b\u00fasqueda, no debemos confundir lo siguiente: \ud83c\udfb1 Cuando ingresamos un dato, lo hacemos a una tabla, secuencialmente. Es decir que no se ingresan datos en varias tablas. \ud83c\udfb1 Lo mismo ocurre para una actualizaci\u00f3n. \ud83c\udfb1 Es por eso que cuando trabajamos con varias tablas, estamos hablando de consultas, sin perjuicio de lo que hagamos justo despu\u00e9s de una consulta a varias tablas, sea un ingreso de informaci\u00f3n; pero nuevamente, este ingreso lo realizar\u00e1 a una sola tabla, que debe contener exactamente los mismos campos que el resultado de la consulta a varias tablas ( select ... insert ).","title":"DCL (Manipulaci\u00f3n) \ud83e\udd4b"},{"location":"basededatos/ddldcl/variastablas/#uso-del-inner-join","text":"Cuando tengamos una relaci\u00f3n entre dos o m\u00e1s tablas, podemos llenar un resultado final, compuesto de una o m\u00e1s tablas. La forma de interceptar la informaci\u00f3n de las tablas, es identificando referencias de una tabla a otra, es decir que si la tabla posee un FOREIGN KEY , podemos aplicar un inner join a esa tabla referenciada utilizando en su filtro on la condici\u00f3n de esta referencia.","title":"Uso del INNER JOIN"},{"location":"basededatos/ddldcl/variastablas/#ejemplo-direcciones-de-alumnos","text":"Se necesita saber las direcciones de los alumnos. (nombre y direcci\u00f3n) Debemos saber donde se encuentra esta informaci\u00f3n, es por eso que antes de realizar una buena consulta, hay que saber la informaci\u00f3n que contiene cada tabla de nuestra base de datos. As\u00ed cuando nos pidan informaci\u00f3n que se pueda extraer de los datos con los que disponemos, debemos saber como poder reunir datos de nuestra fuente de datos y a trav\u00e9s de una consulta, convertirla en la informaci\u00f3n que se solicita. Los datos que sirven para esta consulta est\u00e1n en las tablas alumno y direccion , el FOREIGN KEY que los enlaza es id_direccion y referencia al id de la tabla direccion , por lo que este ser\u00e1 el enlace para conectar estas dos tablas. Seleccionamos tres columnas: a.id AS identificador : El id de la tabla alumno , es por eso que se referencia con el alias a , pueden llamar al alias como se estime conveniente, para este ejemplo, dejo el que auto-completa DBeaver . Concat (Concat(a.nombre, ' '), a.apellido) AS NOMBRE , es el nombre que se presentar\u00e1 en la tabla de resultados. Utiliza la funci\u00f3n concat , que solamente une cadenas. El problema es que 11g , recibe 2 par\u00e1metros y es por eso que la anidamos con otro Concat interno. En palabras simples, estamos uniendo a.nombre + ' ' + a.apellido , lo que en los resultados se traduce a John Petersen , que ser\u00eda: John + ' ' + Petersen . Concat (Concat(d.calle, ' '), d.ciudad) : De la misma forma, preparamos el resultado de una concatenaci\u00f3n de la informaci\u00f3n que obtenemos de la tabla direccion . SELECT a.id AS identificador, Concat (Concat(a.nombre, ' '), a.apellido) AS NOMBRE, Concat (Concat(d.calle, ' '), d.ciudad) AS direccion FROM alumno a INNER JOIN direccion d ON a.id_direccion = d.id; Output: 100 filas IDENTIFICADOR|NOMBRE |DIRECCION | -------------|---------------------|-------------------------------------------------------| 1|John Petersen |4208 Non, C/ Parral | 2|Josephine Lawson |Apartado n\u00fam.: 852, 6101 Neque C. Penco | 3|Jason Lane |Apartado n\u00fam.: 733, 3089 Malesuada Avda. Huechuraba | 4|Shannon Herrera |Apdo.:421-6141 At Avda. Recoleta | 5|Hilel Shields |1449 Odio. Retiro | ... 96|Harper Clarke |Apdo.:186-6696 Ut Av. Huechuraba | 97|Oleg Ayers |1267 Lobortis Carretera Angol | 98|Lev Albert |Apdo.:830-8620 Massa. Coinco | 99|Nichole Rivas |9525 Vestibulum Calle San Javier | 100|Cade Miranda |Apartado n\u00fam.: 957, 2756 Bibendum Avenida Las Condes |","title":"Ejemplo - Direcciones de alumnos"},{"location":"basededatos/ddldcl/variastablas/#ejercicios","text":"Utilizando lo aprendido adem\u00e1s de lo visto en los ejemplos de una tabla, se exponen una serie de ejercicios en los que se debe recopilar informaci\u00f3n desde nuestra base de datos. Estos ejercicios incluyen actividades de investigaci\u00f3n externos para aquellos ejercicios que lo requieran. Se expone un problema y el supuesto resultado, usando solamente los datos facilitados con anterioridad, es por este motivo que hay que realizar la carga de estos datos correctamente, antes de comenzar con la resoluci\u00f3n de los siguientes ejercicios.","title":"Ejercicios."},{"location":"basededatos/ddldcl/variastablas/#agregar-informacion-a-los-resultados","text":"A la informaci\u00f3n obtenida anteriormente en el ejemplo, sumamos la siguiente tarea: Incluir la columna rut, y la regi\u00f3n a la columna direcci\u00f3n. Salida esperada: Output: IDENTIFICADOR|RUT |NOMBRE |DIRECCION | -------------|----------|---------------------|-------------------------------------------------------------------------------| 1|15067082-9|John Petersen |4208 Non, C/ Parral Maule | 2|29478235-4|Josephine Lawson |Apartado n\u00fam.: 852, 6101 Neque C. Penco Biob\u00edo | 3|32358344-7|Jason Lane |Apartado n\u00fam.: 733, 3089 Malesuada Avda. Huechuraba Metropolitana de Santiago | 4|38442638-7|Shannon Herrera |Apdo.:421-6141 At Avda. Recoleta Metropolitana de Santiago | ... m\u00e1s filas","title":"Agregar informaci\u00f3n a los resultados."},{"location":"basededatos/ddldcl/variastablas/#consultar-todo","text":"Manteniendo las condiciones anteriores de filtrado. Realizar una consulta que obtenga todas las columnas de las dos tablas. Nunca usemos * , a menos que estemos probando. Salida esperada: Output: ID |NOMBRE |APELLIDO |CORREO |ID_DIRECCION|ID |CALLE |CIUDAD |REGION | ---|----------|----------|------------------------------------------------------|------------|---|-------------------------------------------|-------------------|-------------------------| 1|John |Petersen |bibendum.Donec@ligulaelitpretium.co.uk | 1| 1|4208 Non, C/ |Parral |Maule | 2|Josephine |Lawson |neque.et@ad.co.uk | 2| 2|Apartado n\u00fam.: 852, 6101 Neque C. |Penco |Biob\u00edo | 3|Jason |Lane |pharetra@non.ca | 3| 3|Apartado n\u00fam.: 733, 3089 Malesuada Avda. |Huechuraba |Metropolitana de Santiago| ... m\u00e1s columnas","title":"Consultar todo"},{"location":"basededatos/ddldcl/variastablas/#alumnos-por-region","text":"Se necesita listar la informaci\u00f3n de la cantidad de alumnos que posee cada regi\u00f3n. Se excluye del informe a la regi\u00f3n del Maule . TIP: Se puede anidar una condici\u00f3n and al on del inner join , para un mejor filtrado. Estos resultados deben ser presentados de mayor a menor. Salida esperada: Output: REGION |ALUMNOSXREGION| -------------------------|--------------| Metropolitana de Santiago| 23| RM | 17| Biob\u00edo | 7| O'Higgins | 5| V | 5| VII | 5| Araucan\u00eda | 4| Valpara\u00edso | 4| IX | 3| Coquimbo | 3| Los Lagos | 2| Los R\u00edos | 2| Atacama | 2| IV | 2| X | 1| XIV | 1| XII | 1| VI | 1| I | 1| Ais\u00e9n | 1| II | 1|","title":"Alumnos por regi\u00f3n."},{"location":"basededatos/ddldcl/variastablas/#detalle-de-un-alumno","text":"Cuando en el sitio web que utilice esta base de datos, requiera mostrar un detalle m\u00e1s acabado del alumno, debemos complementar la informaci\u00f3n de otras tablas y utilizando alias, podemos identificar los valores del resultado de la consulta. Es por eso que se debe crear una consulta que obtenga el siguiente detalle para el alumno con rut: '18530285-7'. Se debe tener en cuenta que para este ejemplo, el alumno est\u00e1 en un solo curso, por eso es que se muestra una fila como resultado. Esto quiere decir que, como un alumno puede estar en m\u00e1s de un curso, los datos se repiten en los resultados dependiendo de la cantidad de cursos en las que est\u00e9. Como buen ejercicio pruebe agregando un desaf\u00edo que involucre este rut y otro curso, entonces el resultado ser\u00eda otra fila. Esta explicaci\u00f3n es para que entendamos que los retornos de una consulta sql \u001d, a menos que se retorne un c\u00e1lculo especifico, siempre el retorno es una lista (colecci\u00f3n) de resultados, a veces con un elemento (como ahora), pero otras con mas elementos. Los detalles que se mostrar\u00e1n ser\u00e1n: C\u00f3digo de alumno. Rut del alumno. Nombre del alumno. Apellido del alumno. Correo del alumno. Direcci\u00f3n del alumno. Curso del alumno. Salida esperada. Output: CODIGO_ALUMNO|RUT_ALUMNO|NOMBRE_ALUMNO|APELLIDO_ALUMNO|CORREO_ALUMNO |DIRECCION_ALUMNO |CURSO_ALUMNO| -------------|----------|-------------|---------------|---------------------------------|-----------------------|------------| 35|18530285-7|Idola |Lindsay |Fusce.aliquet.magna@Phasellus.net|637-1656 Eleifend Ctra.|Django |","title":"Detalle de un alumno."},{"location":"basededatos/ddldcl/variastablas/#alumnos-y-cursos-ejercicio-resuelto","text":"Las tablas alumno & curso , no parecen estar relacionadas, ya que en ninguna tabla tenemos un FOREIGN KEY en alumno que haga referencia directa a curso , lo que se repite en curso . Dicho esto, debemos buscar una forma de relacionar a estas dos tablas para poder extraer sus datos. No disponemos de una tabla de matr\u00edculas desde donde podr\u00edamos obtener la informaci\u00f3n de las tablas. La tabla desafio , resulta ser nuestra \u00fanica opci\u00f3n de obtener una relaci\u00f3n entre alumno & curso , no es lo m\u00e1s optimo, pero no tenemos m\u00e1s opci\u00f3n. Entonces para obtener el total de alumnos matriculados por curso, utilizando una tercera tabla que servir\u00e1 de enlace entre las dos que necesitamos. Determinamos la cantidad de alumnos por curso SELECT c.descripcion AS curso, Count(a.id) AS cantidadAlumnos FROM alumno a INNER JOIN desafio d ON d.id_alumno = a.id INNER JOIN curso c ON c.id = d.id_curso GROUP BY c.descripcion; Output: CURSO |CANTIDADALUMNOS| ---------------|---------------| Node js | 11| Dise\u00f1o UX/UI | 8| Java full stack| 9| Android | 11| Django | 12| Gitflow | 7| Vue js | 8| Python | 4| React js | 19| Docker | 11|","title":"Alumnos y cursos (Ejercicio resuelto)."},{"location":"basededatos/ddldcl/variastablas/#el-curso-mas-popular","text":"Determinar el curso que posee la mayor cantidad de estudiantes. Probar una consulta ordenada inversa y obtener el primer elemento. Investigar funciones count() y max() Salida esperada: Output: CURSO |NUM_ALUMNOS| --------|-----------| React js| 19|","title":"El curso m\u00e1s popular"},{"location":"basededatos/ddldcl/variastablas/#alumnos-js","text":"Obtener el Rut y nombre por curso, de todos los alumnos que cursen algo relacionado con javascript . Investigar el uso del LIKE , para resolver este ejemplo. Hay que recordar que disponemos de una \u00fanica fuente de datos, y la informaci\u00f3n que se obtenga, puede ser mejor respaldada, pero en nuestra base, solamente disponemos de nombres que llevan el js en sus descripciones, por lo tanto, es nuestra \u00fanica fuente y la debemos utilizar. La informaci\u00f3n que nos solicitan, no tiene que estar explicita a como se pide en nuestra base de datos, es tarea nuestra, extraer la informaci\u00f3n usando el lenguaje de manipulaci\u00f3n de datos. Salida esperada: Output: CURSO |RUT |NOMBRE | --------|----------|-----------------| Node js |32170529-4|Kelly Weeks | Node js |12906934-1|Abigail Robles | Node js |35776801-2|Lavinia Mcmillan | Node js |6147056-5 |Ebony Hays | Node js |21121668-9|Hyacinth Chandler| Node js |21524393-1|Jordan Baker | Node js |22930220-5|Kylie Lawson | Node js |33653325-2|Delilah Anderson | Node js |20520886-0|Talon Carson | Node js |28174882-3|Ocean Freeman | Node js |42862897-7|Guy Knight | React js|28448737-0|Erasmus Knox | React js|31096614-2|Cade Miranda | React js|34655619-6|Samson Beasley | React js|41601648-8|Bevis Cooke | React js|43717025-8|Ray Burton | React js|5323035-0 |Rhonda Henderson | React js|33234353-K|Kamal Logan | React js|48557043-8|Isaiah Oconnor | React js|15067082-9|John Petersen | React js|45810119-1|Hilel Shields | React js|27421507-0|Channing Moran | React js|32170529-4|Kelly Weeks | React js|17606503-6|Madonna Sawyer | React js|6147056-5 |Ebony Hays | React js|30937922-5|Laith Munoz | React js|22930220-5|Kylie Lawson | React js|34999646-4|Benedict Allen | React js|44491627-3|Myra Sims | React js|49646911-9|Nissim Justice | Vue js |20080071-0|Eric Holmes | Vue js |20520886-0|Talon Carson | Vue js |41601648-8|Bevis Cooke | Vue js |47860659-1|Burke Mcbride | Vue js |34999646-4|Benedict Allen | Vue js |34534586-8|Medge Carney | Vue js |34731931-7|Dakota Aguirre | Vue js |24257003-0|Berk Hendrix |","title":"Alumnos JS."},{"location":"basededatos/ddldcl/variastablas/#ranking-java-full-stack","text":"Obtener el ranking de notas para el curso de Java full stack Salida esperada Output: NOMBRE |CURSO |RUT |PUNTAJE_OBTENIDO| ---------------|---------------|----------|----------------| Dakota Aguirre |Java full stack|34731931-7| 94| Myra Sims |Java full stack|44491627-3| 90| Marsden Buck |Java full stack|24172970-2| 75| Kamal Logan |Java full stack|33234353-K| 73| Orlando Chapman|Java full stack|23559642-3| 72| Dai Hull |Java full stack|40432802-6| 69| Medge Carney |Java full stack|34534586-8| 44| Nichole Rivas |Java full stack|37297864-3| 36| Inga Pope |Java full stack|29078376-3| 32|","title":"Ranking Java full stack."},{"location":"basededatos/ddldcl/variastablas/#aprobados-de-diseno-uxui","text":"Dado un porcentaje de aprobaci\u00f3n es del 60%, (los valores de las calificaciones son de 1 a 100). Obtener a todos los alumnos aprobados del curso de Dise\u00f1o UX/UI . Los resultados estar\u00e1n ordenados de mayor a menor. Salida esperada Output: NOMBRE |CURSO |RUT |PUNTAJE_OBTENIDO| -------------|------------|----------|----------------| Kyla Carroll |Dise\u00f1o UX/UI|10895354-3| 80| Ramona Deleon|Dise\u00f1o UX/UI|44552711-4| 70| Kylie Lawson |Dise\u00f1o UX/UI|22930220-5| 63|","title":"Aprobados de Dise\u00f1o UX/UI."},{"location":"basededatos/ddldcl/variastablas/#desafios-en-marzo","text":"Imprimir el promedio de puntajes obtenidos en los desaf\u00edos. Los resultados estar\u00e1n agrupados por curso. Solamente deber\u00e1n estar los desaf\u00edos ejecutados en el mes de marzo. Para esto investigar sobre BETWEEN \u001d , ya que ser\u00e1 necesario para la resoluci\u00f3n del presente ejercicio. Output: CURSO |PROMEDIO| ---------------|--------| Node js | 43| Java full stack| 65| Dise\u00f1o UX/UI | 39| Android | 78| Django | 64.5| Gitflow | 35.33| Vue js | 80.33| React js | 57.5| Python | 65.5| Docker | 99|","title":"Desaf\u00edos en marzo."}]}